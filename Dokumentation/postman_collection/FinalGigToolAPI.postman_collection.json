{
	"info": {
		"_postman_id": "8a4b7c3f-329d-44a9-a53f-81a048dfc3dd",
		"name": "GigTool API",
		"description": "# API Dokumentation\n\n## üëã Introduction\n\nHerzlich Willkommen zur API-Dokumentation von GigTool.\n\nDem Organisations-und Inventarisierungstool f√ºr dein Equipment.\n\n## üöÄ Getting started\n\nDiese Collection ist aufgeteilt in die bestimmten Endpoints und deren HTTP-Methoden.\n\nZur besseren √úberschaubarkeit haben wir versucht mit strukturierten Unter-/Ordnern zu arbeiten und eine schnelle Auffindbarkeit der gew√ºnschten Request zu erm√∂glichen.\n\nZu den jeweiligen Requests haben wir Tests verfasst, die beispielsweise die Statuscodes √ºberpr√ºfen und somit einen erfolgreichen Durchlauf identifizieren k√∂nnen.\n\nAu√üerdem nutzen wir die F√§higkeit von Postman aus den response-Objekten ID's zu abstrahieren und diese beispielsweise als Globale, Environment oder Collection Variable zu speichern.\n\nDadurch ersparen wir uns l√§stiges Copy-Paste und erleichtern den Workflow.\n\nJede Request enth√§lt auch ein Postman Example, welches den Aufbau von request und response genauer aufzeigt.\n\n## üõü Support and Demo\n\nSollten wir euer Interesse geweckt haben, meldet euch gerne bei unserem Team unter [info@gigtool.com](https://mailto:info@gigtool.com) f√ºr einen kostenlosen Demotermin.",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "27557403",
		"_collection_link": "https://gigtool.postman.co/workspace/GigTool~53ed6917-62f1-4cea-ad1c-36d57301c63f/collection/27557403-8a4b7c3f-329d-44a9-a53f-81a048dfc3dd?action=share&source=collection_link&creator=27557403"
	},
	"item": [
		{
			"name": "Address",
			"item": [
				{
					"name": "addAddress",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"let jsonResponse = pm.response.json();",
									"let addressId = jsonResponse.id;",
									"pm.environment.set(\"addressId\", addressId)",
									"",
									"console.info(\"Created addressId: \"+ pm.variables.get(\"addressId\"))",
									"",
									"//Statuscode",
									"",
									"pm.test(\"Response status code is 202\", function () {",
									"    pm.response.to.have.status(202);",
									"});",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"street\": \"Lutzstrasse\",\n    \"city\": \"M√ºnchen\",\n    \"houseNumber\": \"14\",\n    \"country\": \"ger\",\n    \"zipCode\": \"99086\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:8080/addresses",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"addresses"
							]
						},
						"description": "Bei diesem Request wird eine Adresse mit folgenden Attributen hinzugef√ºgt:\n\nStra√üe, Stadt, Hausnummer, Land und Postleitzahl"
					},
					"response": [
						{
							"name": "addAddress",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"street\": \"Heinrichstra√üe\",\n    \"city\": \"M√ºnchen\",\n    \"houseNumber\": \"23\",\n    \"country\": \"ger\",\n    \"zipCode\": \"99086\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://localhost:8080/addresses",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "8080",
									"path": [
										"addresses"
									]
								}
							},
							"status": "Accepted",
							"code": 202,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								},
								{
									"key": "Transfer-Encoding",
									"value": "chunked"
								},
								{
									"key": "Date",
									"value": "Thu, 24 Aug 2023 07:55:56 GMT"
								},
								{
									"key": "Keep-Alive",
									"value": "timeout=60"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								}
							],
							"cookie": [],
							"body": "{\n    \"id\": \"4cf97a1f-c14a-46c8-a386-8e5f5c8157f9\",\n    \"houseNumber\": 23,\n    \"street\": \"Heinrichstra√üe\",\n    \"zipCode\": \"99086\",\n    \"country\": \"ger\",\n    \"city\": \"M√ºnchen\"\n}"
						}
					]
				},
				{
					"name": "addAddress (NeedThis2ndValueForUpdateLocation)",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"let jsonResponse = pm.response.json();",
									"let addressId = jsonResponse.id;",
									"pm.environment.set(\"addressIdForUpdateLocation\", addressId)",
									"",
									"//Statuscode",
									"",
									"pm.test(\"Response status code is 202\", function () {",
									"    pm.response.to.have.status(202);",
									"});",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"street\": \"Liamstreet\",\n    \"city\": \"Gotha\",\n    \"houseNumber\": \"19\",\n    \"country\": \"ger\",\n    \"zipCode\": \"99867\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:8080/addresses",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"addresses"
							]
						},
						"description": "Bei diesem Request wird eine Adresse mit folgenden Attributen hinzugef√ºgt:\n\nStra√üe, Stadt, Hausnummer, Land und Postleitzahl"
					},
					"response": [
						{
							"name": "addAddress",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"street\": \"Heinrichstra√üe\",\n    \"city\": \"M√ºnchen\",\n    \"houseNumber\": \"23\",\n    \"country\": \"ger\",\n    \"zipCode\": \"99086\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://localhost:8080/addresses",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "8080",
									"path": [
										"addresses"
									]
								}
							},
							"status": "Accepted",
							"code": 202,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								},
								{
									"key": "Transfer-Encoding",
									"value": "chunked"
								},
								{
									"key": "Date",
									"value": "Thu, 24 Aug 2023 07:55:56 GMT"
								},
								{
									"key": "Keep-Alive",
									"value": "timeout=60"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								}
							],
							"cookie": [],
							"body": "{\n    \"id\": \"4cf97a1f-c14a-46c8-a386-8e5f5c8157f9\",\n    \"houseNumber\": 23,\n    \"street\": \"Heinrichstra√üe\",\n    \"zipCode\": \"99086\",\n    \"country\": \"ger\",\n    \"city\": \"M√ºnchen\"\n}"
						}
					]
				},
				{
					"name": "allAddresses",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"//Statuscode\r",
									"\r",
									"pm.test(\"Response status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:8080/addresses",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"addresses"
							]
						},
						"description": "Bei diesem Request wird eine Liste von allen Adressen aus dem System geholt"
					},
					"response": [
						{
							"name": "allAddresses",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "http://localhost:8080/addresses",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "8080",
									"path": [
										"addresses"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								},
								{
									"key": "Transfer-Encoding",
									"value": "chunked"
								},
								{
									"key": "Date",
									"value": "Thu, 24 Aug 2023 07:56:21 GMT"
								},
								{
									"key": "Keep-Alive",
									"value": "timeout=60"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								}
							],
							"cookie": [],
							"body": "[\n    {\n        \"id\": \"8a42fef3-5632-4db4-aba0-1590e15d7c45\",\n        \"houseNumber\": 40,\n        \"street\": \"Strasse1\",\n        \"zipCode\": \"99086\",\n        \"country\": \"ger\",\n        \"city\": \"Stadt 2\"\n    },\n    {\n        \"id\": \"e815fa59-6744-42a3-a476-ed743db2b870\",\n        \"houseNumber\": 40,\n        \"street\": \"Strasse1\",\n        \"zipCode\": \"99086\",\n        \"country\": \"ger\",\n        \"city\": \"Stadt 2\"\n    },\n    {\n        \"id\": \"4cf97a1f-c14a-46c8-a386-8e5f5c8157f9\",\n        \"houseNumber\": 23,\n        \"street\": \"Heinrichstra√üe\",\n        \"zipCode\": \"99086\",\n        \"country\": \"ger\",\n        \"city\": \"M√ºnchen\"\n    }\n]"
						}
					]
				},
				{
					"name": "addressById",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"//Statuscode\r",
									"\r",
									"pm.test(\"Response status code is 202\", function () {\r",
									"    pm.response.to.have.status(202);\r",
									"});\r",
									"\r",
									"\r",
									"\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:8080/addresses/{{addressId}}",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"addresses",
								"{{addressId}}"
							]
						},
						"description": "Bei diesem Request wird eine spezifische Adresse anhand ihrer ID geholt"
					},
					"response": [
						{
							"name": "addressById",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "http://localhost:8080/addresses/{{addressId}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "8080",
									"path": [
										"addresses",
										"{{addressId}}"
									]
								}
							},
							"status": "Accepted",
							"code": 202,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								},
								{
									"key": "Transfer-Encoding",
									"value": "chunked"
								},
								{
									"key": "Date",
									"value": "Thu, 24 Aug 2023 07:56:38 GMT"
								},
								{
									"key": "Keep-Alive",
									"value": "timeout=60"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								}
							],
							"cookie": [],
							"body": "{\n    \"id\": \"4cf97a1f-c14a-46c8-a386-8e5f5c8157f9\",\n    \"houseNumber\": 23,\n    \"street\": \"Heinrichstra√üe\",\n    \"zipCode\": \"99086\",\n    \"country\": \"ger\",\n    \"city\": \"M√ºnchen\"\n}"
						}
					]
				},
				{
					"name": "updateAddress",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"console.info(\"Updated addressId: \"+ pm.variables.get(\"addressId\"))\r",
									"\r",
									"//Statuscode\r",
									"\r",
									"pm.test(\"Response status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"\r",
									"\r",
									"\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "\n    {\n        \"street\": \"James Gosling Street\"\n    }\n",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:8080/addresses/{{addressId}}",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"addresses",
								"{{addressId}}"
							]
						},
						"description": "Bei diesem Request wird eine vorhandene Adresse mit neuer Information akualisiert"
					},
					"response": [
						{
							"name": "updateAddress",
							"originalRequest": {
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "\n    {\n        \"street\": \"James Gosling Street\"\n    }\n",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://localhost:8080/addresses/{{addressId}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "8080",
									"path": [
										"addresses",
										"{{addressId}}"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								},
								{
									"key": "Transfer-Encoding",
									"value": "chunked"
								},
								{
									"key": "Date",
									"value": "Thu, 24 Aug 2023 07:56:52 GMT"
								},
								{
									"key": "Keep-Alive",
									"value": "timeout=60"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								}
							],
							"cookie": [],
							"body": "{\n    \"id\": \"4cf97a1f-c14a-46c8-a386-8e5f5c8157f9\",\n    \"houseNumber\": 0,\n    \"street\": \"James Gosling Street\",\n    \"zipCode\": \"99086\",\n    \"country\": \"ger\",\n    \"city\": \"M√ºnchen\"\n}"
						}
					]
				}
			]
		},
		{
			"name": "Equipment",
			"item": [
				{
					"name": "TypeOfEquipment",
					"item": [
						{
							"name": "addTypeOfEquipment",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"let jsonResponse = pm.response.json();",
											"let typeOfEquipmentId = jsonResponse.id;",
											"pm.environment.set(\"typeOfEquipmentId\", typeOfEquipmentId)",
											"",
											"console.info(\"Created typeOfEquipmentId: \"+ pm.variables.get(\"typeOfEquipmentId\"))",
											"",
											"//Statuscode",
											"",
											"pm.test(\"Status code is 202\", function () {",
											"    pm.response.to.have.status(202);",
											"});",
											"",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"name\" : \"Schlagzeug A\",\n    \"description\" : \"Akustikschlagzeug\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://localhost:8080/typeOfEquipment",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "8080",
									"path": [
										"typeOfEquipment"
									]
								},
								"description": "Bei diesem Request wird ein Equipment-Typ mit folgenden Attributen hinzugef√ºgt:\n\nName, Beschreibung"
							},
							"response": [
								{
									"name": "addTypeOfEquipment",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"name\" : \"Schlagzeug A\",\n    \"description\" : \"Akustikschlagzeug\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "http://localhost:8080/typeOfEquipment",
											"protocol": "http",
											"host": [
												"localhost"
											],
											"port": "8080",
											"path": [
												"typeOfEquipment"
											]
										}
									},
									"status": "Accepted",
									"code": 202,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										},
										{
											"key": "Transfer-Encoding",
											"value": "chunked"
										},
										{
											"key": "Date",
											"value": "Thu, 24 Aug 2023 07:58:08 GMT"
										},
										{
											"key": "Keep-Alive",
											"value": "timeout=60"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										}
									],
									"cookie": [],
									"body": "{\n    \"id\": \"91514269-a0f6-46ad-8f39-0cecbafea77f\",\n    \"name\": \"Highfield Schlagzeug\",\n    \"description\": \"Akustikschlagzeug\"\n}"
								}
							]
						},
						{
							"name": "allTypeOfEquipment",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"//Statuscode\r",
											"\r",
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "http://localhost:8080/typeOfEquipment",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "8080",
									"path": [
										"typeOfEquipment"
									]
								},
								"description": "Bei diesem Request wird eine Liste aller Equipment-Typen aus dem System geholt"
							},
							"response": [
								{
									"name": "allTypeOfEquipment",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "http://localhost:8080/typeOfEquipment",
											"protocol": "http",
											"host": [
												"localhost"
											],
											"port": "8080",
											"path": [
												"typeOfEquipment"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										},
										{
											"key": "Transfer-Encoding",
											"value": "chunked"
										},
										{
											"key": "Date",
											"value": "Thu, 24 Aug 2023 08:00:20 GMT"
										},
										{
											"key": "Keep-Alive",
											"value": "timeout=60"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										}
									],
									"cookie": [],
									"body": "[\n    {\n        \"id\": \"d16f50f1-a841-455f-bda3-a759b2933cb5\",\n        \"name\": \"Highfield Schlagzeug \",\n        \"description\": \"Akustikschlagzeug\"\n    },\n    {\n        \"id\": \"91514269-a0f6-46ad-8f39-0cecbafea77f\",\n        \"name\": \"Highfield Schlagzeug\",\n        \"description\": \"Akustikschlagzeug\"\n    },\n    {\n        \"id\": \"16af0bc9-d4b2-4a92-84bb-c1deb6d41f33\",\n        \"name\": \"Gitarre\",\n        \"description\": \"Hendrik's Rock'n Roll Gitarre\"\n    },\n    {\n        \"id\": \"bd575a61-9bf3-41cf-b6fb-3aef901deead\",\n        \"name\": \"Fl√∂te\",\n        \"description\": \"Holzfl√∂te aus feinster Kirsche\"\n    }\n]"
								}
							]
						},
						{
							"name": "typeOfEquipmentById",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"//Statuscode\r",
											"\r",
											"pm.test(\"Response status code is 202\", function () {\r",
											"    pm.expect(pm.response.code).to.equal(202);\r",
											"});\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "http://localhost:8080/typeOfEquipment/{{typeOfEquipmentId}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "8080",
									"path": [
										"typeOfEquipment",
										"{{typeOfEquipmentId}}"
									]
								},
								"description": "Bei diesem Request wird ein spezifischer Equipment-Typ anhand seiner ID geholt"
							},
							"response": [
								{
									"name": "typeOfEquipmentById",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "http://localhost:8080/typeOfEquipment/{{typeOfEquipmentId}}",
											"protocol": "http",
											"host": [
												"localhost"
											],
											"port": "8080",
											"path": [
												"typeOfEquipment",
												"{{typeOfEquipmentId}}"
											]
										}
									},
									"status": "Accepted",
									"code": 202,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										},
										{
											"key": "Transfer-Encoding",
											"value": "chunked"
										},
										{
											"key": "Date",
											"value": "Thu, 24 Aug 2023 08:00:31 GMT"
										},
										{
											"key": "Keep-Alive",
											"value": "timeout=60"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										}
									],
									"cookie": [],
									"body": "{\n    \"id\": \"bd575a61-9bf3-41cf-b6fb-3aef901deead\",\n    \"name\": \"Fl√∂te\",\n    \"description\": \"Holzfl√∂te aus feinster Kirsche\"\n}"
								}
							]
						},
						{
							"name": "updateTypeOfEquipment",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"console.info(\"Updated typeOfEquipmentId: \"+ pm.variables.get(\"typeOfEquipmentId\"))\r",
											"\r",
											"//Statuscode\r",
											"\r",
											"pm.test(\"Response status code is 200\", function () {\r",
											"    pm.expect(pm.response.code).to.equal(200);\r",
											"});\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"name\": \"Schlagzeug C\",\n    \"description\": \"Geschenk von ACDC\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://localhost:8080/typeOfEquipment/{{typeOfEquipmentId}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "8080",
									"path": [
										"typeOfEquipment",
										"{{typeOfEquipmentId}}"
									]
								},
								"description": "Bei diesem Request wird ein vorhandener Equipment-Typ mit neuer Information akualisiert"
							},
							"response": [
								{
									"name": "updateTypeOfEquipment",
									"originalRequest": {
										"method": "PUT",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"name\": \"Schlagzeug B\",\n    \"description\": \"Original aus DDR\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "http://localhost:8080/typeOfEquipment/{{typeOfEquipmentId}}",
											"protocol": "http",
											"host": [
												"localhost"
											],
											"port": "8080",
											"path": [
												"typeOfEquipment",
												"{{typeOfEquipmentId}}"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										},
										{
											"key": "Transfer-Encoding",
											"value": "chunked"
										},
										{
											"key": "Date",
											"value": "Thu, 24 Aug 2023 08:01:20 GMT"
										},
										{
											"key": "Keep-Alive",
											"value": "timeout=60"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										}
									],
									"cookie": [],
									"body": "{\n    \"id\": \"bd575a61-9bf3-41cf-b6fb-3aef901deead\",\n    \"name\": \"Fl√∂te\",\n    \"description\": \"Ist doch ne Bambusfl√∂te\"\n}"
								},
								{
									"name": "BadRequest",
									"originalRequest": {
										"method": "PUT",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"name\": \"Fl√∂te\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "http://localhost:8080/typeOfEquipment/{{typeOfEquipmentId}}",
											"protocol": "http",
											"host": [
												"localhost"
											],
											"port": "8080",
											"path": [
												"typeOfEquipment",
												"{{typeOfEquipmentId}}"
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "plain",
									"header": [
										{
											"key": "Content-Length",
											"value": "0"
										},
										{
											"key": "Date",
											"value": "Thu, 24 Aug 2023 08:06:27 GMT"
										},
										{
											"key": "Connection",
											"value": "close"
										}
									],
									"cookie": [],
									"body": null
								}
							]
						}
					]
				},
				{
					"name": "TypeOfLocation",
					"item": [
						{
							"name": "addTypeOfLocation",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"let jsonResponse = pm.response.json();",
											"let typeOfLocationId = jsonResponse.id;",
											"pm.environment.set(\"typeOfLocationId\", typeOfLocationId)",
											"",
											"console.info(\"Created typeOfLocationId: \"+ pm.variables.get(\"typeOfLocationId\"))",
											"",
											"//Statuscode",
											"",
											"pm.test(\"Response status code is 202\", function () {",
											"    pm.response.to.have.status(202);",
											"});",
											"",
											"",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"name\": \"Proberaum Gotha\",\n    \"description\": \"Robins Kellergeschoss mit Gesangskabine\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://localhost:8080/typeOfLocation",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "8080",
									"path": [
										"typeOfLocation"
									]
								},
								"description": "Bei diesem Request wird ein Standort-Typ mit folgenden Attributen hinzugef√ºgt:\n\nName, Beschreibung"
							},
							"response": [
								{
									"name": "addTypeOfLocation",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"name\": \"Proberaum Erfurt\",\n    \"description\": \"Ein Proberaum in Erfurt\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "http://localhost:8080/typeOfLocation",
											"protocol": "http",
											"host": [
												"localhost"
											],
											"port": "8080",
											"path": [
												"typeOfLocation"
											]
										}
									},
									"status": "Accepted",
									"code": 202,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										},
										{
											"key": "Transfer-Encoding",
											"value": "chunked"
										},
										{
											"key": "Date",
											"value": "Thu, 24 Aug 2023 08:01:31 GMT"
										},
										{
											"key": "Keep-Alive",
											"value": "timeout=60"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										}
									],
									"cookie": [],
									"body": "{\n    \"id\": \"5b8f4f19-a05c-42a8-b50c-b43d31b6129e\",\n    \"name\": \"Proberaum Erfurt\",\n    \"description\": \"Ein Proberaum in Erfurt\"\n}"
								}
							]
						},
						{
							"name": "addTypeOfLocation (NeedThis2ndValueForUpdateLocation)",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"let jsonResponse = pm.response.json();",
											"let typeOfLocationId = jsonResponse.id;",
											"pm.environment.set(\"typeOfLocationIdForUpdateLocation\", typeOfLocationId)",
											"",
											"console.info(\"Created typeOfLocationIdForUpdateLocation: \"+ pm.variables.get(\"typeOfLocationIdForUpdateLocation\"))",
											"",
											"//Statuscode",
											"",
											"pm.test(\"Response status code is 202\", function () {",
											"    pm.response.to.have.status(202);",
											"});",
											"",
											"",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"name\": \"Proberaum Jena\",\n    \"description\": \"Dako Studios\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://localhost:8080/typeOfLocation",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "8080",
									"path": [
										"typeOfLocation"
									]
								},
								"description": "Bei diesem Request wird ein Standort-Typ mit folgenden Attributen hinzugef√ºgt:\n\nName, Beschreibung"
							},
							"response": [
								{
									"name": "addTypeOfLocation",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"name\": \"Proberaum Erfurt\",\n    \"description\": \"Ein Proberaum in Erfurt\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "http://localhost:8080/typeOfLocation",
											"protocol": "http",
											"host": [
												"localhost"
											],
											"port": "8080",
											"path": [
												"typeOfLocation"
											]
										}
									},
									"status": "Accepted",
									"code": 202,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										},
										{
											"key": "Transfer-Encoding",
											"value": "chunked"
										},
										{
											"key": "Date",
											"value": "Thu, 24 Aug 2023 08:01:31 GMT"
										},
										{
											"key": "Keep-Alive",
											"value": "timeout=60"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										}
									],
									"cookie": [],
									"body": "{\n    \"id\": \"5b8f4f19-a05c-42a8-b50c-b43d31b6129e\",\n    \"name\": \"Proberaum Erfurt\",\n    \"description\": \"Ein Proberaum in Erfurt\"\n}"
								}
							]
						},
						{
							"name": "allTypeOfLocation",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"//Statuscode\r",
											"\r",
											"pm.test(\"Response status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"\r",
											"\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "http://localhost:8080/typeOfLocation",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "8080",
									"path": [
										"typeOfLocation"
									]
								},
								"description": "Bei diesem Request wird eine Liste aller Standort-Typen aus dem System geholt"
							},
							"response": [
								{
									"name": "allTypeOfLocation",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "http://localhost:8080/typeOfLocation",
											"protocol": "http",
											"host": [
												"localhost"
											],
											"port": "8080",
											"path": [
												"typeOfLocation"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										},
										{
											"key": "Transfer-Encoding",
											"value": "chunked"
										},
										{
											"key": "Date",
											"value": "Thu, 24 Aug 2023 08:16:06 GMT"
										},
										{
											"key": "Keep-Alive",
											"value": "timeout=60"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										}
									],
									"cookie": [],
									"body": "[\n    {\n        \"id\": \"5b8f4f19-a05c-42a8-b50c-b43d31b6129e\",\n        \"name\": \"Proberaum Erfurt\",\n        \"description\": \"Ein Proberaum in Erfurt\"\n    },\n    {\n        \"id\": \"69fd8856-3d8c-458d-8e28-a9bfae279c8a\",\n        \"name\": \"Darios Proberaum in Gera\",\n        \"description\": \"Lagerraum und Studio\"\n    },\n    {\n        \"id\": \"34ff6e1b-7332-4154-91fc-f56904cde1ee\",\n        \"name\": \"Proberaum Gotha\",\n        \"description\": \"Robins Kellergeschoss mit Gesangskabine\"\n    }\n]"
								}
							]
						},
						{
							"name": "typeOfLocationById",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"//Statuscode\r",
											"\r",
											"pm.test(\"Response status code is 202\", function () {\r",
											"    pm.expect(pm.response.code).to.equal(202);\r",
											"});\r",
											"\r",
											"\r",
											"\r",
											"\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "http://localhost:8080/typeOfLocation/{{typeOfLocationId}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "8080",
									"path": [
										"typeOfLocation",
										"{{typeOfLocationId}}"
									]
								},
								"description": "Bei diesem Request wird ein spezifischer Standort-Typ anhand seiner ID geholt"
							},
							"response": [
								{
									"name": "typeOfLocationById",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "http://localhost:8080/typeOfLocation/{{typeOfLocationId}}",
											"protocol": "http",
											"host": [
												"localhost"
											],
											"port": "8080",
											"path": [
												"typeOfLocation",
												"{{typeOfLocationId}}"
											]
										}
									},
									"status": "Accepted",
									"code": 202,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										},
										{
											"key": "Transfer-Encoding",
											"value": "chunked"
										},
										{
											"key": "Date",
											"value": "Thu, 24 Aug 2023 08:03:29 GMT"
										},
										{
											"key": "Keep-Alive",
											"value": "timeout=60"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										}
									],
									"cookie": [],
									"body": "{\n    \"id\": \"69fd8856-3d8c-458d-8e28-a9bfae279c8a\",\n    \"name\": \"Proberaum Gotha\",\n    \"description\": \"Robins Kellergeschoss mit Gesangskabine\"\n}"
								}
							]
						},
						{
							"name": "updateTypeOfLocation",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"console.info(\"Updated typeOfLocationId: \"+ pm.variables.get(\"typeOfLocationId\"))\r",
											"\r",
											"//Statuscode\r",
											"\r",
											"pm.test(\"Response status code is 200\", function () {\r",
											"    pm.expect(pm.response.code).to.equal(200);\r",
											"});\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"name\": \"Proberaum in Gera\",\n    \"description\": \"Darios Garage\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://localhost:8080/typeOfLocation/{{typeOfLocationId}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "8080",
									"path": [
										"typeOfLocation",
										"{{typeOfLocationId}}"
									]
								},
								"description": "Bei diesem Request wird ein vorhandener Standort-Typ mit neuer Information akualisiert"
							},
							"response": [
								{
									"name": "updateTypeOfLocation",
									"originalRequest": {
										"method": "PUT",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"name\": \"Proberaum in Gera\",\n    \"description\": \"Darios Garage\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "http://localhost:8080/typeOfLocation/{{typeOfLocationId}}",
											"protocol": "http",
											"host": [
												"localhost"
											],
											"port": "8080",
											"path": [
												"typeOfLocation",
												"{{typeOfLocationId}}"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										},
										{
											"key": "Transfer-Encoding",
											"value": "chunked"
										},
										{
											"key": "Date",
											"value": "Thu, 24 Aug 2023 08:49:57 GMT"
										},
										{
											"key": "Keep-Alive",
											"value": "timeout=60"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										}
									],
									"cookie": [],
									"body": "{\n    \"id\": \"1410a31a-ebcc-45c7-b1fe-f3cbdf2c2a5f\",\n    \"name\": \"Proberaum in Gera\",\n    \"description\": \"Darios Garage\"\n}"
								},
								{
									"name": "BadRequest",
									"originalRequest": {
										"method": "PUT",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"name\": \"Darios Proberaum in Gera\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "http://localhost:8080/typeOfLocation/{{typeOfLocationId}}",
											"protocol": "http",
											"host": [
												"localhost"
											],
											"port": "8080",
											"path": [
												"typeOfLocation",
												"{{typeOfLocationId}}"
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "plain",
									"header": [
										{
											"key": "Content-Length",
											"value": "0"
										},
										{
											"key": "Date",
											"value": "Thu, 24 Aug 2023 08:05:11 GMT"
										},
										{
											"key": "Connection",
											"value": "close"
										}
									],
									"cookie": [],
									"body": null
								}
							]
						}
					],
					"description": "Braucht die typeOfLocationId also vorher addTypeOfLocation"
				},
				{
					"name": "Location",
					"item": [
						{
							"name": "addLocation",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"let jsonResponse = pm.response.json();",
											"let locationId = jsonResponse.id;",
											"pm.environment.set(\"locationId\", locationId)",
											"",
											"console.info(\"Created locationId: \"+ pm.variables.get(\"locationId\"))",
											"",
											"//Statuscode",
											"",
											"pm.test(\"Response status code is 202\", function () {",
											"    pm.expect(pm.response.code).to.equal(202);",
											"});",
											"",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"typeOfLocationId\": \"{{typeOfLocationId}}\",\n    \"addressId\": \"{{addressId}}\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://localhost:8080/location",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "8080",
									"path": [
										"location"
									]
								},
								"description": "Bei diesem Request wird ein Standort mit folgenden Attributen hinzugef√ºgt:\n\nStandort-ID, Adress-ID"
							},
							"response": [
								{
									"name": "addLocation",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"typeOfLocationId\": \"{{typeOfLocationId}}\",\n    \"addressId\": \"{{addressId}}\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "http://localhost:8080/location",
											"protocol": "http",
											"host": [
												"localhost"
											],
											"port": "8080",
											"path": [
												"location"
											]
										}
									},
									"status": "Accepted",
									"code": 202,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										},
										{
											"key": "Transfer-Encoding",
											"value": "chunked"
										},
										{
											"key": "Date",
											"value": "Thu, 24 Aug 2023 08:13:23 GMT"
										},
										{
											"key": "Keep-Alive",
											"value": "timeout=60"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										}
									],
									"cookie": [],
									"body": "{\n    \"id\": \"522c4f7d-bb68-46e4-868f-c49bb3466407\",\n    \"addressResponse\": {\n        \"id\": \"4cf97a1f-c14a-46c8-a386-8e5f5c8157f9\",\n        \"houseNumber\": 0,\n        \"street\": \"James Gosling Street\",\n        \"zipCode\": \"99086\",\n        \"country\": \"ger\",\n        \"city\": \"M√ºnchen\"\n    },\n    \"typeOfLocationResponse\": {\n        \"id\": \"69fd8856-3d8c-458d-8e28-a9bfae279c8a\",\n        \"name\": \"Darios Proberaum in Gera\",\n        \"description\": \"Lagerraum und Studio\"\n    }\n}"
								},
								{
									"name": "addLocation",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"typeOfLocationId\": \"{{typeOfLocationId}}\",\n    \"addressId\": \"{{addressId}}\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "http://localhost:8080/location",
											"protocol": "http",
											"host": [
												"localhost"
											],
											"port": "8080",
											"path": [
												"location"
											]
										}
									},
									"status": "Accepted",
									"code": 202,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										},
										{
											"key": "Transfer-Encoding",
											"value": "chunked"
										},
										{
											"key": "Date",
											"value": "Thu, 24 Aug 2023 08:14:50 GMT"
										},
										{
											"key": "Keep-Alive",
											"value": "timeout=60"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										}
									],
									"cookie": [],
									"body": "{\n    \"id\": \"5c1653b2-36d6-47f7-b147-c697c56c3da2\",\n    \"addressResponse\": {\n        \"id\": \"ab1c968e-606f-4660-8642-797581c79efe\",\n        \"houseNumber\": 14,\n        \"street\": \"Lutzstrasse\",\n        \"zipCode\": \"99086\",\n        \"country\": \"ger\",\n        \"city\": \"M√ºnchen\"\n    },\n    \"typeOfLocationResponse\": {\n        \"id\": \"34ff6e1b-7332-4154-91fc-f56904cde1ee\",\n        \"name\": \"Proberaum Gotha\",\n        \"description\": \"Robins Kellergeschoss mit Gesangskabine\"\n    }\n}"
								}
							]
						},
						{
							"name": "allLocation",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"//Statuscode\r",
											"\r",
											"pm.test(\"Response status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "http://localhost:8080/location",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "8080",
									"path": [
										"location"
									]
								},
								"description": "Bei diesem Request wird eine Liste aller Standorte aus dem System geholt"
							},
							"response": [
								{
									"name": "allLocation",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "http://localhost:8080/location",
											"protocol": "http",
											"host": [
												"localhost"
											],
											"port": "8080",
											"path": [
												"location"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										},
										{
											"key": "Transfer-Encoding",
											"value": "chunked"
										},
										{
											"key": "Date",
											"value": "Thu, 24 Aug 2023 08:15:09 GMT"
										},
										{
											"key": "Keep-Alive",
											"value": "timeout=60"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										}
									],
									"cookie": [],
									"body": "[\n    {\n        \"id\": \"522c4f7d-bb68-46e4-868f-c49bb3466407\",\n        \"addressResponse\": {\n            \"id\": \"4cf97a1f-c14a-46c8-a386-8e5f5c8157f9\",\n            \"houseNumber\": 0,\n            \"street\": \"James Gosling Street\",\n            \"zipCode\": \"99086\",\n            \"country\": \"ger\",\n            \"city\": \"M√ºnchen\"\n        },\n        \"typeOfLocationResponse\": {\n            \"id\": \"69fd8856-3d8c-458d-8e28-a9bfae279c8a\",\n            \"name\": \"Darios Proberaum in Gera\",\n            \"description\": \"Lagerraum und Studio\"\n        }\n    },\n    {\n        \"id\": \"5c1653b2-36d6-47f7-b147-c697c56c3da2\",\n        \"addressResponse\": {\n            \"id\": \"ab1c968e-606f-4660-8642-797581c79efe\",\n            \"houseNumber\": 14,\n            \"street\": \"Lutzstrasse\",\n            \"zipCode\": \"99086\",\n            \"country\": \"ger\",\n            \"city\": \"M√ºnchen\"\n        },\n        \"typeOfLocationResponse\": {\n            \"id\": \"34ff6e1b-7332-4154-91fc-f56904cde1ee\",\n            \"name\": \"Proberaum Gotha\",\n            \"description\": \"Robins Kellergeschoss mit Gesangskabine\"\n        }\n    }\n]"
								}
							]
						},
						{
							"name": "locationById",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"//Statuscode\r",
											"\r",
											"pm.test(\"Status code is 202\", function () {\r",
											"    pm.response.to.have.status(202);\r",
											"});\r",
											"\r",
											"\r",
											"\r",
											"\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "http://localhost:8080/location/{{locationId}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "8080",
									"path": [
										"location",
										"{{locationId}}"
									]
								},
								"description": "Bei diesem Request wird ein spezifischer Standort anhand der ID geholt"
							},
							"response": [
								{
									"name": "locationById",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "http://localhost:8080/location/{{locationId}}",
											"protocol": "http",
											"host": [
												"localhost"
											],
											"port": "8080",
											"path": [
												"location",
												"{{locationId}}"
											]
										}
									},
									"status": "Accepted",
									"code": 202,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										},
										{
											"key": "Transfer-Encoding",
											"value": "chunked"
										},
										{
											"key": "Date",
											"value": "Thu, 24 Aug 2023 08:15:19 GMT"
										},
										{
											"key": "Keep-Alive",
											"value": "timeout=60"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										}
									],
									"cookie": [],
									"body": "{\n    \"id\": \"5c1653b2-36d6-47f7-b147-c697c56c3da2\",\n    \"addressResponse\": {\n        \"id\": \"ab1c968e-606f-4660-8642-797581c79efe\",\n        \"houseNumber\": 14,\n        \"street\": \"Lutzstrasse\",\n        \"zipCode\": \"99086\",\n        \"country\": \"ger\",\n        \"city\": \"M√ºnchen\"\n    },\n    \"typeOfLocationResponse\": {\n        \"id\": \"34ff6e1b-7332-4154-91fc-f56904cde1ee\",\n        \"name\": \"Proberaum Gotha\",\n        \"description\": \"Robins Kellergeschoss mit Gesangskabine\"\n    }\n}"
								}
							]
						},
						{
							"name": "updateLocation",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"console.info(\"Updated locationId: \" + pm.variables.get(\"locationId\"))\r",
											"\r",
											"//Statuscode\r",
											"\r",
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"pm.environment.set(\"typeOfLocationId\", \"variable_value\");"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"addressId\": \"{{addressIdForUpdateLocation}}\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://localhost:8080/location/{{locationId}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "8080",
									"path": [
										"location",
										"{{locationId}}"
									]
								},
								"description": "Bei diesem Request wird eine vorhandene Location mit neuer Information akualisiert"
							},
							"response": []
						}
					]
				},
				{
					"name": "addEquipment",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"pm.collectionVariables.set(\"typeOfEquipmentId\", pm.collectionVariables.get(\"typeOfEquipmentId\"));",
									"pm.collectionVariables.set(\"addressId\", pm.collectionVariables.get(\"addressId\"));"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"let jsonResponse = pm.response.json();",
									"let equipmentId = jsonResponse.id;",
									"pm.environment.set(\"equipmentId\", equipmentId)",
									"",
									"console.info(\"Created equipmentId: \" + pm.variables.get(\"equipmentId\"))",
									"",
									"//Statuscode",
									"",
									"pm.test(\"Response status code is 202\", function () {",
									"    pm.expect(pm.response.code).to.equal(202);",
									"});",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\": \"Gretch Studio 2\",\n    \"description\": \"Studio Schlagzeug mit 20 Zoll BassDrum\",\n    \"typeOfEquipmentId\": \"{{typeOfEquipmentId}}\",\n    \"weight\": 120,\n    \"length\": 200,\n    \"width\": 120,\n    \"height\": 100,\n    \"dateOfPurchase\": \"2023-08-14\",\n    \"locationId\": \"{{locationId}}\",\n    \"price\": 2000\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:8080/equipment",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"equipment"
							]
						},
						"description": "Bei diesem Request wird ein Equipment mit folgenden Attributen hinzugef√ºgt:\n\nName, Beschreibung, Equipment-Typ ID, Gewicht, L√§nge, Breite, H√∂he,, Kaufdatum, Standort-ID und Preis"
					},
					"response": [
						{
							"name": "addEquipment",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"name\": \"Gretch Studio 2\",\n    \"description\": \"Studio Schlagzeug mit 20 Zoll BassDrum\",\n    \"typeOfEquipmentId\": \"{{typeOfEquipmentId}}\",\n    \"weight\": 120,\n    \"length\": 200,\n    \"width\": 120,\n    \"height\": 100,\n    \"dateOfPurchase\": \"2023-08-14\",\n    \"locationId\": \"{{locationId}}\",\n    \"price\": 2000\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://localhost:8080/equipment",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "8080",
									"path": [
										"equipment"
									]
								}
							},
							"status": "Accepted",
							"code": 202,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								},
								{
									"key": "Transfer-Encoding",
									"value": "chunked"
								},
								{
									"key": "Date",
									"value": "Thu, 24 Aug 2023 08:22:32 GMT"
								},
								{
									"key": "Keep-Alive",
									"value": "timeout=60"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								}
							],
							"cookie": [],
							"body": "{\n    \"id\": \"81bb09ad-b2ce-4e07-a3d3-94a904c9254d\",\n    \"name\": \"Gretch Studio 2\",\n    \"description\": \"Studio Schlagzeug mit 20 Zoll BassDrum\",\n    \"typeOfEquipmentResponse\": {\n        \"id\": \"ac0be34e-8918-4c7f-9a05-44f042ebe907\",\n        \"name\": \"Highfield Schlagzeug\",\n        \"description\": \"Akustikschlagzeug\"\n    },\n    \"weight\": 120,\n    \"length\": 200,\n    \"width\": 120,\n    \"height\": 100,\n    \"dateOfPurchase\": \"2023-08-14\",\n    \"locationResponse\": {\n        \"id\": \"83fb7692-db8f-4a8d-b8ca-6b24a79daa9f\",\n        \"addressResponse\": {\n            \"id\": \"54ecce82-51f0-4e00-adcc-b94de9cd0e9f\",\n            \"houseNumber\": 14,\n            \"street\": \"Lutzstrasse\",\n            \"zipCode\": \"99086\",\n            \"country\": \"ger\",\n            \"city\": \"M√ºnchen\"\n        },\n        \"typeOfLocationResponse\": {\n            \"id\": \"0001c4b3-e50b-4969-bb07-029e4e122f72\",\n            \"name\": \"Proberaum Gotha\",\n            \"description\": \"Robins Kellergeschoss mit Gesangskabine\"\n        }\n    },\n    \"price\": 2000\n}"
						}
					]
				},
				{
					"name": "addEquipment NeedThis2ndValueForAddEquipmentToGig",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"pm.collectionVariables.set(\"typeOfEquipmentId\", pm.collectionVariables.get(\"typeOfEquipmentId\"));",
									"pm.collectionVariables.set(\"addressId\", pm.collectionVariables.get(\"addressId\"));"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"let jsonResponse = pm.response.json();",
									"let equipmentId = jsonResponse.id;",
									"pm.environment.set(\"equipmentIdForAddEquipmentToGig\", equipmentId)",
									"",
									"console.info(\"Created equipmentId: \" + pm.variables.get(\"equipmentId\"))",
									"",
									"//Statuscode",
									"",
									"pm.test(\"Response status code is 202\", function () {",
									"    pm.expect(pm.response.code).to.equal(202);",
									"});",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\": \"Gretch Studio 3\",\n    \"description\": \"Gitarre aus Holz\",\n    \"typeOfEquipmentId\": \"{{typeOfEquipmentId}}\",\n    \"weight\": 120,\n    \"length\": 200,\n    \"width\": 120,\n    \"height\": 100,\n    \"dateOfPurchase\": \"2023-08-14\",\n    \"locationId\": \"{{locationId}}\",\n    \"price\": 2000\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:8080/equipment",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"equipment"
							]
						},
						"description": "Bei diesem Request wird ein Equipment mit folgenden Attributen hinzugef√ºgt:\n\nName, Beschreibung, Equipment-Typ ID, Gewicht, L√§nge, Breite, H√∂he,, Kaufdatum, Standort-ID und Preis"
					},
					"response": [
						{
							"name": "addEquipment",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"name\": \"Gretch Studio 2\",\n    \"description\": \"Studio Schlagzeug mit 20 Zoll BassDrum\",\n    \"typeOfEquipmentId\": \"{{typeOfEquipmentId}}\",\n    \"weight\": 120,\n    \"length\": 200,\n    \"width\": 120,\n    \"height\": 100,\n    \"dateOfPurchase\": \"2023-08-14\",\n    \"locationId\": \"{{locationId}}\",\n    \"price\": 2000\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://localhost:8080/equipment",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "8080",
									"path": [
										"equipment"
									]
								}
							},
							"status": "Accepted",
							"code": 202,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								},
								{
									"key": "Transfer-Encoding",
									"value": "chunked"
								},
								{
									"key": "Date",
									"value": "Thu, 24 Aug 2023 08:22:32 GMT"
								},
								{
									"key": "Keep-Alive",
									"value": "timeout=60"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								}
							],
							"cookie": [],
							"body": "{\n    \"id\": \"81bb09ad-b2ce-4e07-a3d3-94a904c9254d\",\n    \"name\": \"Gretch Studio 2\",\n    \"description\": \"Studio Schlagzeug mit 20 Zoll BassDrum\",\n    \"typeOfEquipmentResponse\": {\n        \"id\": \"ac0be34e-8918-4c7f-9a05-44f042ebe907\",\n        \"name\": \"Highfield Schlagzeug\",\n        \"description\": \"Akustikschlagzeug\"\n    },\n    \"weight\": 120,\n    \"length\": 200,\n    \"width\": 120,\n    \"height\": 100,\n    \"dateOfPurchase\": \"2023-08-14\",\n    \"locationResponse\": {\n        \"id\": \"83fb7692-db8f-4a8d-b8ca-6b24a79daa9f\",\n        \"addressResponse\": {\n            \"id\": \"54ecce82-51f0-4e00-adcc-b94de9cd0e9f\",\n            \"houseNumber\": 14,\n            \"street\": \"Lutzstrasse\",\n            \"zipCode\": \"99086\",\n            \"country\": \"ger\",\n            \"city\": \"M√ºnchen\"\n        },\n        \"typeOfLocationResponse\": {\n            \"id\": \"0001c4b3-e50b-4969-bb07-029e4e122f72\",\n            \"name\": \"Proberaum Gotha\",\n            \"description\": \"Robins Kellergeschoss mit Gesangskabine\"\n        }\n    },\n    \"price\": 2000\n}"
						}
					]
				},
				{
					"name": "addEquipment NeedThis3rdValeuForAddEquipmentToRental",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"pm.collectionVariables.set(\"typeOfEquipmentId\", pm.collectionVariables.get(\"typeOfEquipmentId\"));",
									"pm.collectionVariables.set(\"addressId\", pm.collectionVariables.get(\"addressId\"));"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"let jsonResponse = pm.response.json();",
									"let equipmentId = jsonResponse.id;",
									"pm.environment.set(\"equipmentIdForAddEquipmentToRental\", equipmentId)",
									"",
									"console.info(\"Created equipmentId: \" + pm.variables.get(\"equipmentId\"))",
									"",
									"//Statuscode",
									"",
									"pm.test(\"Response status code is 202\", function () {",
									"    pm.expect(pm.response.code).to.equal(202);",
									"});",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\": \"Gretch Studio 4\",\n    \"description\": \"Studiofl√∂te aus Echtholz\",\n    \"typeOfEquipmentId\": \"{{typeOfEquipmentId}}\",\n    \"weight\": 120,\n    \"length\": 200,\n    \"width\": 120,\n    \"height\": 100,\n    \"dateOfPurchase\": \"2023-08-14\",\n    \"locationId\": \"{{locationId}}\",\n    \"price\": 2000\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:8080/equipment",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"equipment"
							]
						},
						"description": "Bei diesem Request wird ein Equipment mit folgenden Attributen hinzugef√ºgt:\n\nName, Beschreibung, Equipment-Typ ID, Gewicht, L√§nge, Breite, H√∂he,, Kaufdatum, Standort-ID und Preis"
					},
					"response": [
						{
							"name": "addEquipment",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"name\": \"Gretch Studio 2\",\n    \"description\": \"Studio Schlagzeug mit 20 Zoll BassDrum\",\n    \"typeOfEquipmentId\": \"{{typeOfEquipmentId}}\",\n    \"weight\": 120,\n    \"length\": 200,\n    \"width\": 120,\n    \"height\": 100,\n    \"dateOfPurchase\": \"2023-08-14\",\n    \"locationId\": \"{{locationId}}\",\n    \"price\": 2000\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://localhost:8080/equipment",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "8080",
									"path": [
										"equipment"
									]
								}
							},
							"status": "Accepted",
							"code": 202,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								},
								{
									"key": "Transfer-Encoding",
									"value": "chunked"
								},
								{
									"key": "Date",
									"value": "Thu, 24 Aug 2023 08:22:32 GMT"
								},
								{
									"key": "Keep-Alive",
									"value": "timeout=60"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								}
							],
							"cookie": [],
							"body": "{\n    \"id\": \"81bb09ad-b2ce-4e07-a3d3-94a904c9254d\",\n    \"name\": \"Gretch Studio 2\",\n    \"description\": \"Studio Schlagzeug mit 20 Zoll BassDrum\",\n    \"typeOfEquipmentResponse\": {\n        \"id\": \"ac0be34e-8918-4c7f-9a05-44f042ebe907\",\n        \"name\": \"Highfield Schlagzeug\",\n        \"description\": \"Akustikschlagzeug\"\n    },\n    \"weight\": 120,\n    \"length\": 200,\n    \"width\": 120,\n    \"height\": 100,\n    \"dateOfPurchase\": \"2023-08-14\",\n    \"locationResponse\": {\n        \"id\": \"83fb7692-db8f-4a8d-b8ca-6b24a79daa9f\",\n        \"addressResponse\": {\n            \"id\": \"54ecce82-51f0-4e00-adcc-b94de9cd0e9f\",\n            \"houseNumber\": 14,\n            \"street\": \"Lutzstrasse\",\n            \"zipCode\": \"99086\",\n            \"country\": \"ger\",\n            \"city\": \"M√ºnchen\"\n        },\n        \"typeOfLocationResponse\": {\n            \"id\": \"0001c4b3-e50b-4969-bb07-029e4e122f72\",\n            \"name\": \"Proberaum Gotha\",\n            \"description\": \"Robins Kellergeschoss mit Gesangskabine\"\n        }\n    },\n    \"price\": 2000\n}"
						}
					]
				},
				{
					"name": "allEquipments",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"//Statuscode\r",
									"\r",
									"pm.test(\"Response status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:8080/equipment",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"equipment"
							]
						},
						"description": "Bei diesem Request wird eine Liste aller Equipments aus dem System geholt"
					},
					"response": [
						{
							"name": "allEquipments",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "http://localhost:8080/equipment",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "8080",
									"path": [
										"equipment"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								},
								{
									"key": "Transfer-Encoding",
									"value": "chunked"
								},
								{
									"key": "Date",
									"value": "Thu, 24 Aug 2023 09:03:54 GMT"
								},
								{
									"key": "Keep-Alive",
									"value": "timeout=60"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								}
							],
							"cookie": [],
							"body": "[\n    {\n        \"id\": \"332149b1-199e-49e9-82fc-f8a43dba9b9f\",\n        \"name\": \"Gretch Studio 2\",\n        \"description\": \"Studio Schlagzeug mit 20 Zoll BassDrum\",\n        \"typeOfEquipmentResponse\": {\n            \"id\": \"2e43cd60-f69d-47ff-a06f-01f39c02ec18\",\n            \"name\": \"Schlagzeug C\",\n            \"description\": \"Geschenk von ACDC\"\n        },\n        \"weight\": 120,\n        \"length\": 200,\n        \"width\": 120,\n        \"height\": 100,\n        \"dateOfPurchase\": \"2023-08-14\",\n        \"locationResponse\": {\n            \"id\": \"0ebb250a-01d3-4ab1-9a2f-e4fb53f7b241\",\n            \"addressResponse\": {\n                \"id\": \"d8b87585-e90c-4d48-96a4-bf5d9e464395\",\n                \"houseNumber\": 23,\n                \"street\": \"Heinrichstra√üe\",\n                \"zipCode\": \"99086\",\n                \"country\": \"ger\",\n                \"city\": \"M√ºnchen\"\n            },\n            \"typeOfLocationResponse\": {\n                \"id\": \"ce7044ff-60d6-458d-aa9c-f3f80783ebfd\",\n                \"name\": \"Proberaum in Gera\",\n                \"description\": \"Darios Garage\"\n            }\n        },\n        \"price\": 2000\n    }\n]"
						}
					]
				},
				{
					"name": "allEquipmentByTypeOfEquipment",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"//Statuscode\r",
									"\r",
									"pm.test(\"Response status code is 200\", function () {\r",
									"    pm.expect(pm.response.code).to.equal(200);\r",
									"});\r",
									"\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:8080/equipment/byType/{{typeOfEquipmentId}}",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"equipment",
								"byType",
								"{{typeOfEquipmentId}}"
							]
						},
						"description": "Bei diesem Request wird eine Liste aller Equipments eines Equipment-Typs geholt"
					},
					"response": [
						{
							"name": "allEquipmentByTypeOfEquipment",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "http://localhost:8080/equipment/byType/{{typeOfEquipmentId}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "8080",
									"path": [
										"equipment",
										"byType",
										"{{typeOfEquipmentId}}"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								},
								{
									"key": "Transfer-Encoding",
									"value": "chunked"
								},
								{
									"key": "Date",
									"value": "Thu, 24 Aug 2023 08:23:31 GMT"
								},
								{
									"key": "Keep-Alive",
									"value": "timeout=60"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								}
							],
							"cookie": [],
							"body": "[\n    {\n        \"id\": \"81bb09ad-b2ce-4e07-a3d3-94a904c9254d\",\n        \"name\": \"Gretch Studio 2\",\n        \"description\": \"Studio Schlagzeug mit 20 Zoll BassDrum\",\n        \"typeOfEquipmentResponse\": {\n            \"id\": \"ac0be34e-8918-4c7f-9a05-44f042ebe907\",\n            \"name\": \"Highfield Schlagzeug\",\n            \"description\": \"Akustikschlagzeug\"\n        },\n        \"weight\": 120,\n        \"length\": 200,\n        \"width\": 120,\n        \"height\": 100,\n        \"dateOfPurchase\": \"2023-08-14\",\n        \"locationResponse\": {\n            \"id\": \"83fb7692-db8f-4a8d-b8ca-6b24a79daa9f\",\n            \"addressResponse\": {\n                \"id\": \"54ecce82-51f0-4e00-adcc-b94de9cd0e9f\",\n                \"houseNumber\": 14,\n                \"street\": \"Lutzstrasse\",\n                \"zipCode\": \"99086\",\n                \"country\": \"ger\",\n                \"city\": \"M√ºnchen\"\n            },\n            \"typeOfLocationResponse\": {\n                \"id\": \"0001c4b3-e50b-4969-bb07-029e4e122f72\",\n                \"name\": \"Proberaum Gotha\",\n                \"description\": \"Robins Kellergeschoss mit Gesangskabine\"\n            }\n        },\n        \"price\": 2000\n    }\n]"
						}
					]
				},
				{
					"name": "equipmentById",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"//Statuscode\r",
									"\r",
									"pm.test(\"Response status code is 202\", function () {\r",
									"    pm.expect(pm.response.code).to.equal(202);\r",
									"});\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:8080/equipment/{{equipmentId}}",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"equipment",
								"{{equipmentId}}"
							]
						},
						"description": "Bei diesem Request wird ein spezifisches Equipment anhand der ID geholt"
					},
					"response": [
						{
							"name": "equipmentById",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "http://localhost:8080/equipment/{{equipmentId}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "8080",
									"path": [
										"equipment",
										"{{equipmentId}}"
									]
								}
							},
							"status": "Accepted",
							"code": 202,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								},
								{
									"key": "Transfer-Encoding",
									"value": "chunked"
								},
								{
									"key": "Date",
									"value": "Thu, 24 Aug 2023 08:23:43 GMT"
								},
								{
									"key": "Keep-Alive",
									"value": "timeout=60"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								}
							],
							"cookie": [],
							"body": "{\n    \"id\": \"81bb09ad-b2ce-4e07-a3d3-94a904c9254d\",\n    \"name\": \"Gretch Studio 2\",\n    \"description\": \"Studio Schlagzeug mit 20 Zoll BassDrum\",\n    \"typeOfEquipmentResponse\": {\n        \"id\": \"ac0be34e-8918-4c7f-9a05-44f042ebe907\",\n        \"name\": \"Highfield Schlagzeug\",\n        \"description\": \"Akustikschlagzeug\"\n    },\n    \"weight\": 120,\n    \"length\": 200,\n    \"width\": 120,\n    \"height\": 100,\n    \"dateOfPurchase\": \"2023-08-14\",\n    \"locationResponse\": {\n        \"id\": \"83fb7692-db8f-4a8d-b8ca-6b24a79daa9f\",\n        \"addressResponse\": {\n            \"id\": \"54ecce82-51f0-4e00-adcc-b94de9cd0e9f\",\n            \"houseNumber\": 14,\n            \"street\": \"Lutzstrasse\",\n            \"zipCode\": \"99086\",\n            \"country\": \"ger\",\n            \"city\": \"M√ºnchen\"\n        },\n        \"typeOfLocationResponse\": {\n            \"id\": \"0001c4b3-e50b-4969-bb07-029e4e122f72\",\n            \"name\": \"Proberaum Gotha\",\n            \"description\": \"Robins Kellergeschoss mit Gesangskabine\"\n        }\n    },\n    \"price\": 2000\n}"
						}
					]
				},
				{
					"name": "updateEquipment",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"console.info(\"Updated equipmentId: \"+ pm.variables.get(\"equipmentId\"))\r",
									"\r",
									"//Statuscode\r",
									"\r",
									"pm.test(\"Response status code is 200\", function () {\r",
									"    pm.expect(pm.response.code).to.equal(200);\r",
									"});\r",
									"\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\": \"neuer Name\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:8080/equipment/{{equipmentId}}",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"equipment",
								"{{equipmentId}}"
							]
						},
						"description": "Bei diesem Request wird ein vorhandenes Equipment mit neuer Information akualisiert"
					},
					"response": [
						{
							"name": "updateEquipment",
							"originalRequest": {
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"name\": \"neuer Name\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://localhost:8080/equipment/{{equipmentId}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "8080",
									"path": [
										"equipment",
										"{{equipmentId}}"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								},
								{
									"key": "Transfer-Encoding",
									"value": "chunked"
								},
								{
									"key": "Date",
									"value": "Thu, 24 Aug 2023 08:23:56 GMT"
								},
								{
									"key": "Keep-Alive",
									"value": "timeout=60"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								}
							],
							"cookie": [],
							"body": "{\n    \"id\": \"81bb09ad-b2ce-4e07-a3d3-94a904c9254d\",\n    \"name\": \"neuer Name\",\n    \"description\": \"Studio Schlagzeug mit 20 Zoll BassDrum\",\n    \"typeOfEquipmentResponse\": {\n        \"id\": \"ac0be34e-8918-4c7f-9a05-44f042ebe907\",\n        \"name\": \"Highfield Schlagzeug\",\n        \"description\": \"Akustikschlagzeug\"\n    },\n    \"weight\": 120,\n    \"length\": 200,\n    \"width\": 120,\n    \"height\": 100,\n    \"dateOfPurchase\": \"2023-08-14\",\n    \"locationResponse\": {\n        \"id\": \"83fb7692-db8f-4a8d-b8ca-6b24a79daa9f\",\n        \"addressResponse\": {\n            \"id\": \"54ecce82-51f0-4e00-adcc-b94de9cd0e9f\",\n            \"houseNumber\": 14,\n            \"street\": \"Lutzstrasse\",\n            \"zipCode\": \"99086\",\n            \"country\": \"ger\",\n            \"city\": \"M√ºnchen\"\n        },\n        \"typeOfLocationResponse\": {\n            \"id\": \"0001c4b3-e50b-4969-bb07-029e4e122f72\",\n            \"name\": \"Proberaum Gotha\",\n            \"description\": \"Robins Kellergeschoss mit Gesangskabine\"\n        }\n    },\n    \"price\": 2000\n}"
						}
					]
				},
				{
					"name": "equipmentByLocation",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"//Statuscode\r",
									"\r",
									"pm.test(\"Response status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:8080/equipment/byLocation/{{locationId}}",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"equipment",
								"byLocation",
								"{{locationId}}"
							]
						},
						"description": "Bei diesem Request wird ein spezifisches Equipment anhand der Location geholt"
					},
					"response": [
						{
							"name": "equipmentByLocation",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "http://localhost:8080/equipment/byLocation/{{locationId}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "8080",
									"path": [
										"equipment",
										"byLocation",
										"{{locationId}}"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								},
								{
									"key": "Transfer-Encoding",
									"value": "chunked"
								},
								{
									"key": "Date",
									"value": "Thu, 24 Aug 2023 09:04:25 GMT"
								},
								{
									"key": "Keep-Alive",
									"value": "timeout=60"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								}
							],
							"cookie": [],
							"body": "[\n    {\n        \"id\": \"332149b1-199e-49e9-82fc-f8a43dba9b9f\",\n        \"name\": \"Gretch Studio 2\",\n        \"description\": \"Studio Schlagzeug mit 20 Zoll BassDrum\",\n        \"typeOfEquipmentResponse\": {\n            \"id\": \"2e43cd60-f69d-47ff-a06f-01f39c02ec18\",\n            \"name\": \"Schlagzeug C\",\n            \"description\": \"Geschenk von ACDC\"\n        },\n        \"weight\": 120,\n        \"length\": 200,\n        \"width\": 120,\n        \"height\": 100,\n        \"dateOfPurchase\": \"2023-08-14\",\n        \"locationResponse\": {\n            \"id\": \"0ebb250a-01d3-4ab1-9a2f-e4fb53f7b241\",\n            \"addressResponse\": {\n                \"id\": \"d8b87585-e90c-4d48-96a4-bf5d9e464395\",\n                \"houseNumber\": 23,\n                \"street\": \"Heinrichstra√üe\",\n                \"zipCode\": \"99086\",\n                \"country\": \"ger\",\n                \"city\": \"M√ºnchen\"\n            },\n            \"typeOfLocationResponse\": {\n                \"id\": \"ce7044ff-60d6-458d-aa9c-f3f80783ebfd\",\n                \"name\": \"Proberaum in Gera\",\n                \"description\": \"Darios Garage\"\n            }\n        },\n        \"price\": 2000\n    }\n]"
						}
					]
				}
			]
		},
		{
			"name": "Gig",
			"item": [
				{
					"name": "Band",
					"item": [
						{
							"name": "RoleInTheBand",
							"item": [
								{
									"name": "addRoleInTheBand",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"let jsonResponse = pm.response.json();",
													"let roleInTheBandId = jsonResponse.id;",
													"pm.environment.set(\"roleInTheBandId\", roleInTheBandId)",
													"",
													"console.info(\"Created roleInTheBandId: \" + pm.variables.get(\"roleInTheBandID\"))",
													"",
													"//Statuscode",
													"",
													"pm.test(\"Response status code is 200\", function () {",
													"    pm.expect(pm.response.code).to.equal(200);",
													"});",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"name\": \"Schlagzeuger\",\n    \"description\": \"bum bum\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "http://localhost:8080/gig/band/roleintheband",
											"protocol": "http",
											"host": [
												"localhost"
											],
											"port": "8080",
											"path": [
												"gig",
												"band",
												"roleintheband"
											]
										},
										"description": "Bei diesem Request wird eine Bandrolle mit folgenden Attributen hinzugef√ºgt:\n\nName, Beschreibung"
									},
									"response": [
										{
											"name": "addRoleInTheBand",
											"originalRequest": {
												"method": "POST",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"name\": \"Schlagzeuger\",\n    \"description\": \"bum bum\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "http://localhost:8080/gig/band/roleintheband",
													"protocol": "http",
													"host": [
														"localhost"
													],
													"port": "8080",
													"path": [
														"gig",
														"band",
														"roleintheband"
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												},
												{
													"key": "Transfer-Encoding",
													"value": "chunked"
												},
												{
													"key": "Date",
													"value": "Thu, 24 Aug 2023 08:26:22 GMT"
												},
												{
													"key": "Keep-Alive",
													"value": "timeout=60"
												},
												{
													"key": "Connection",
													"value": "keep-alive"
												}
											],
											"cookie": [],
											"body": "{\n    \"id\": \"0baec5ac-51de-4c42-b681-99bbc609888f\",\n    \"name\": \"Schlagzeuger\",\n    \"description\": \"bum bum\"\n}"
										}
									]
								},
								{
									"name": "addRoleInTheBand NeedThis2ndValueForAddRoleInTheBandToBand",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"let jsonResponse = pm.response.json();",
													"let roleInTheBandId = jsonResponse.id;",
													"pm.environment.set(\"roleInTheBandIdForUpdate\", roleInTheBandId)",
													"",
													"console.info(\"Created roleInTheBandId: \" + pm.variables.get(\"roleInTheBandID\"))",
													"",
													"//Statuscode",
													"",
													"pm.test(\"Response status code is 200\", function () {",
													"    pm.expect(pm.response.code).to.equal(200);",
													"});",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"name\": \"Gitarrist\",\n    \"description\": \"klang klang\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "http://localhost:8080/gig/band/roleintheband",
											"protocol": "http",
											"host": [
												"localhost"
											],
											"port": "8080",
											"path": [
												"gig",
												"band",
												"roleintheband"
											]
										},
										"description": "Bei diesem Request wird eine Bandrolle mit folgenden Attributen hinzugef√ºgt:\n\nName, Beschreibung"
									},
									"response": [
										{
											"name": "addRoleInTheBand",
											"originalRequest": {
												"method": "POST",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"name\": \"Schlagzeuger\",\n    \"description\": \"bum bum\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "http://localhost:8080/gig/band/roleintheband",
													"protocol": "http",
													"host": [
														"localhost"
													],
													"port": "8080",
													"path": [
														"gig",
														"band",
														"roleintheband"
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												},
												{
													"key": "Transfer-Encoding",
													"value": "chunked"
												},
												{
													"key": "Date",
													"value": "Thu, 24 Aug 2023 08:26:22 GMT"
												},
												{
													"key": "Keep-Alive",
													"value": "timeout=60"
												},
												{
													"key": "Connection",
													"value": "keep-alive"
												}
											],
											"cookie": [],
											"body": "{\n    \"id\": \"0baec5ac-51de-4c42-b681-99bbc609888f\",\n    \"name\": \"Schlagzeuger\",\n    \"description\": \"bum bum\"\n}"
										}
									]
								},
								{
									"name": "allRoleInTheBand",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"//Statuscode",
													"",
													"pm.test(\"Response status code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"",
													"// Stores the last id from the response as a global variable",
													"var responseData = pm.response.json();",
													"var lastId = responseData[responseData.length - 1].id;",
													"pm.globals.set(\"roleInTheBandId\", lastId);"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "http://localhost:8080/gig/band/roleintheband",
											"protocol": "http",
											"host": [
												"localhost"
											],
											"port": "8080",
											"path": [
												"gig",
												"band",
												"roleintheband"
											]
										},
										"description": "Bei diesem Request wird eine Liste aller Bandrollen aus dem System geholt"
									},
									"response": [
										{
											"name": "allRoleInTheBand",
											"originalRequest": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "http://localhost:8080/gig/band/roleintheband",
													"protocol": "http",
													"host": [
														"localhost"
													],
													"port": "8080",
													"path": [
														"gig",
														"band",
														"roleintheband"
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												},
												{
													"key": "Transfer-Encoding",
													"value": "chunked"
												},
												{
													"key": "Date",
													"value": "Thu, 24 Aug 2023 08:26:33 GMT"
												},
												{
													"key": "Keep-Alive",
													"value": "timeout=60"
												},
												{
													"key": "Connection",
													"value": "keep-alive"
												}
											],
											"cookie": [],
											"body": "[\n    {\n        \"id\": \"0baec5ac-51de-4c42-b681-99bbc609888f\",\n        \"name\": \"Schlagzeuger\",\n        \"description\": \"bum bum\"\n    }\n]"
										}
									]
								},
								{
									"name": "roleInTheBandByID",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"//Statuscode\r",
													"\r",
													"pm.test(\"Response status code is 200\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});\r",
													"\r",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "http://localhost:8080/gig/band/roleintheband/{{roleInTheBandId}}",
											"protocol": "http",
											"host": [
												"localhost"
											],
											"port": "8080",
											"path": [
												"gig",
												"band",
												"roleintheband",
												"{{roleInTheBandId}}"
											]
										},
										"description": "Bei diesem Request wird eine spezifische Bandrolle anhand der ID geholt"
									},
									"response": [
										{
											"name": "roleInTheBandByID",
											"originalRequest": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "http://localhost:8080/gig/band/roleintheband/{{roleInTheBandId}}",
													"protocol": "http",
													"host": [
														"localhost"
													],
													"port": "8080",
													"path": [
														"gig",
														"band",
														"roleintheband",
														"{{roleInTheBandId}}"
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												},
												{
													"key": "Transfer-Encoding",
													"value": "chunked"
												},
												{
													"key": "Date",
													"value": "Thu, 24 Aug 2023 08:26:46 GMT"
												},
												{
													"key": "Keep-Alive",
													"value": "timeout=60"
												},
												{
													"key": "Connection",
													"value": "keep-alive"
												}
											],
											"cookie": [],
											"body": "{\n    \"id\": \"0baec5ac-51de-4c42-b681-99bbc609888f\",\n    \"name\": \"Schlagzeuger\",\n    \"description\": \"bum bum\"\n}"
										}
									]
								},
								{
									"name": "updateRoleInTheBand",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"//Statuscode\r",
													"\r",
													"pm.test(\"Response status code is 200\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});\r",
													"\r",
													" "
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "PUT",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"name\": \"S√§ngerin der Band\",\n    \"description\": \"sing sing\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "http://localhost:8080/gig/band/roleintheband/{{roleInTheBandId}}",
											"protocol": "http",
											"host": [
												"localhost"
											],
											"port": "8080",
											"path": [
												"gig",
												"band",
												"roleintheband",
												"{{roleInTheBandId}}"
											]
										},
										"description": "Bei diesem Request wird eine vorhandene Bandrolle mit neuer Information akualisiert"
									},
									"response": [
										{
											"name": "updateRoleInTheBand",
											"originalRequest": {
												"method": "PUT",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"name\": \"S√§ngerin der Band\",\n    \"description\": \"sing sing\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "http://localhost:8080/gig/band/roleintheband/{{roleInTheBandId}}",
													"protocol": "http",
													"host": [
														"localhost"
													],
													"port": "8080",
													"path": [
														"gig",
														"band",
														"roleintheband",
														"{{roleInTheBandId}}"
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												},
												{
													"key": "Transfer-Encoding",
													"value": "chunked"
												},
												{
													"key": "Date",
													"value": "Thu, 24 Aug 2023 09:05:19 GMT"
												},
												{
													"key": "Keep-Alive",
													"value": "timeout=60"
												},
												{
													"key": "Connection",
													"value": "keep-alive"
												}
											],
											"cookie": [],
											"body": "{\n    \"id\": \"8858d233-663f-4517-8d7a-282b28d39789\",\n    \"name\": \"S√§ngerin der Band\",\n    \"description\": \"sing sing\"\n}"
										}
									]
								}
							]
						},
						{
							"name": "Genre",
							"item": [
								{
									"name": "addGenre",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"let jsonResponse = pm.response.json();",
													"let genreId = jsonResponse.id;",
													"pm.environment.set(\"genreId\", genreId)",
													"",
													"console.info(\"Created genreId: \" + pm.variables.get(\"genreId\"))",
													"",
													"//Statuscode",
													"",
													"pm.test(\"Response status code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"name\": \"Jazz\",\n    \"description\": \"chillig\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "http://localhost:8080/gig/band/genre",
											"protocol": "http",
											"host": [
												"localhost"
											],
											"port": "8080",
											"path": [
												"gig",
												"band",
												"genre"
											]
										},
										"description": "Bei diesem Request wird ein Genre mit folgenden Attributen hinzugef√ºgt:\n\nName, Beschreibung"
									},
									"response": [
										{
											"name": "addGenre",
											"originalRequest": {
												"method": "POST",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"name\": \"Jazz\",\n    \"description\": \"chillig\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "http://localhost:8080/gig/band/genre",
													"protocol": "http",
													"host": [
														"localhost"
													],
													"port": "8080",
													"path": [
														"gig",
														"band",
														"genre"
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												},
												{
													"key": "Transfer-Encoding",
													"value": "chunked"
												},
												{
													"key": "Date",
													"value": "Thu, 24 Aug 2023 08:27:26 GMT"
												},
												{
													"key": "Keep-Alive",
													"value": "timeout=60"
												},
												{
													"key": "Connection",
													"value": "keep-alive"
												}
											],
											"cookie": [],
											"body": "{\n    \"id\": \"33692c2c-6951-4117-b6fd-280c20cfca18\",\n    \"name\": \"Jazz\",\n    \"description\": \"chillig\"\n}"
										}
									]
								},
								{
									"name": "allGenre",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"//Statuscode",
													"",
													"pm.test(\"Response status code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "http://localhost:8080/gig/band/genre",
											"protocol": "http",
											"host": [
												"localhost"
											],
											"port": "8080",
											"path": [
												"gig",
												"band",
												"genre"
											]
										},
										"description": "Bei diesem Request wird eine Liste aller Genres aus dem System geholt"
									},
									"response": [
										{
											"name": "allGenre",
											"originalRequest": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "http://localhost:8080/gig/band/genre",
													"protocol": "http",
													"host": [
														"localhost"
													],
													"port": "8080",
													"path": [
														"gig",
														"band",
														"genre"
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												},
												{
													"key": "Transfer-Encoding",
													"value": "chunked"
												},
												{
													"key": "Date",
													"value": "Thu, 24 Aug 2023 08:29:02 GMT"
												},
												{
													"key": "Keep-Alive",
													"value": "timeout=60"
												},
												{
													"key": "Connection",
													"value": "keep-alive"
												}
											],
											"cookie": [],
											"body": "[\n    {\n        \"id\": \"33692c2c-6951-4117-b6fd-280c20cfca18\",\n        \"name\": \"Jazz\",\n        \"description\": \"chillig\"\n    },\n    {\n        \"id\": \"3b0da3c0-c9ea-4ec2-8fa8-e92081a5146d\",\n        \"name\": \"Rap\",\n        \"description\": \"AmiRap\"\n    },\n    {\n        \"id\": \"e24f47fe-afb6-4561-b77d-02002ac27c05\",\n        \"name\": \"Klassik\",\n        \"description\": \"relaxen\"\n    }\n]"
										}
									]
								},
								{
									"name": "genreByID",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"//Statuscode\r",
													"\r",
													"pm.test(\"Response status code is 200\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});\r",
													"\r",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "http://localhost:8080/gig/band/genre/{{genreId}}",
											"protocol": "http",
											"host": [
												"localhost"
											],
											"port": "8080",
											"path": [
												"gig",
												"band",
												"genre",
												"{{genreId}}"
											]
										},
										"description": "Bei diesem Request wird ein spezifischers Genre anhand der ID geholt"
									},
									"response": [
										{
											"name": "genreByID",
											"originalRequest": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "http://localhost:8080/gig/band/genre/{{genreId}}",
													"protocol": "http",
													"host": [
														"localhost"
													],
													"port": "8080",
													"path": [
														"gig",
														"band",
														"genre",
														"{{genreId}}"
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												},
												{
													"key": "Transfer-Encoding",
													"value": "chunked"
												},
												{
													"key": "Date",
													"value": "Thu, 24 Aug 2023 08:27:44 GMT"
												},
												{
													"key": "Keep-Alive",
													"value": "timeout=60"
												},
												{
													"key": "Connection",
													"value": "keep-alive"
												}
											],
											"cookie": [],
											"body": "{\n    \"id\": \"33692c2c-6951-4117-b6fd-280c20cfca18\",\n    \"name\": \"Jazz\",\n    \"description\": \"chillig\"\n}"
										}
									]
								},
								{
									"name": "updateGenre",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"//Statuscode\r",
													"\r",
													"pm.test(\"Response status code is 200\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});\r",
													"\r",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "PUT",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"name\": \"Jazz\",\n    \"description\": \"Jazz (Aussprache: [dÕ° í…õÀês] Audiodatei abspielen oder [jatÕ°s] Audiodatei abspielen) ist eine ungef√§hr um 1900 in den S√ºdstaaten der USA entstandene, urspr√ºnglich √ºberwiegend von Afroamerikanern hervorgebrachte Musikrichtung, die in vielf√§ltiger Weise weiterentwickelt wurde, h√§ufig im Crossover mit anderen Musiktraditionen und Genres. Mittlerweile werden auch Musikformen zum Jazz gez√§hlt, die oft nur lose oder kaum noch mit der afroamerikanischen Tradition verbunden sind. Der Jazz wird im Hinblick auf seine k√ºnstlerische Bedeutung h√§ufig als amerikanisches Pendant zur klassischen europ√§ischen Musik verstanden. Dar√ºber hinaus hat er nahezu allen anderen Sparten der Musik, von Pop bis Folk, neue M√∂glichkeiten er√∂ffnet, bzw. w√§re das blo√üe Vorhandensein vieler heutiger Genres ohne einen Jazzabschnitt in der Musikhistorie fraglich.\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "http://localhost:8080/gig/band/genre/{{genreId}}",
											"protocol": "http",
											"host": [
												"localhost"
											],
											"port": "8080",
											"path": [
												"gig",
												"band",
												"genre",
												"{{genreId}}"
											]
										},
										"description": "Bei diesem Request wird ein vorhandenes Genre mit neuer Information akualisiert"
									},
									"response": [
										{
											"name": "updateGenre",
											"originalRequest": {
												"method": "PUT",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"name\": \"Jazz\",\n    \"description\": \"Jazz (Aussprache: [dÕ° í…õÀês] Audiodatei abspielen oder [jatÕ°s] Audiodatei abspielen) ist eine ungef√§hr um 1900 in den S√ºdstaaten der USA entstandene, urspr√ºnglich √ºberwiegend von Afroamerikanern hervorgebrachte Musikrichtung, die in vielf√§ltiger Weise weiterentwickelt wurde, h√§ufig im Crossover mit anderen Musiktraditionen und Genres. Mittlerweile werden auch Musikformen zum Jazz gez√§hlt, die oft nur lose oder kaum noch mit der afroamerikanischen Tradition verbunden sind. Der Jazz wird im Hinblick auf seine k√ºnstlerische Bedeutung h√§ufig als amerikanisches Pendant zur klassischen europ√§ischen Musik verstanden. Dar√ºber hinaus hat er nahezu allen anderen Sparten der Musik, von Pop bis Folk, neue M√∂glichkeiten er√∂ffnet, bzw. w√§re das blo√üe Vorhandensein vieler heutiger Genres ohne einen Jazzabschnitt in der Musikhistorie fraglich.\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "http://localhost:8080/gig/band/genre/{{genreId}}",
													"protocol": "http",
													"host": [
														"localhost"
													],
													"port": "8080",
													"path": [
														"gig",
														"band",
														"genre",
														"{{genreId}}"
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												},
												{
													"key": "Transfer-Encoding",
													"value": "chunked"
												},
												{
													"key": "Date",
													"value": "Thu, 24 Aug 2023 08:30:14 GMT"
												},
												{
													"key": "Keep-Alive",
													"value": "timeout=60"
												},
												{
													"key": "Connection",
													"value": "keep-alive"
												}
											],
											"cookie": [],
											"body": "{\n    \"id\": \"ca7fcb76-9df8-4f95-b2b9-a4faf18484ba\",\n    \"name\": \"Jazz\",\n    \"description\": \"Jazz (Aussprache: [dÕ° í…õÀês] Audiodatei abspielen oder [jatÕ°s] Audiodatei abspielen) ist eine ungef√§hr um 1900 in den S√ºdstaaten der USA entstandene, urspr√ºnglich √ºberwiegend von Afroamerikanern hervorgebrachte Musikrichtung, die in vielf√§ltiger Weise weiterentwickelt wurde, h√§ufig im Crossover mit anderen Musiktraditionen und Genres. Mittlerweile werden auch Musikformen zum Jazz gez√§hlt, die oft nur lose oder kaum noch mit der afroamerikanischen Tradition verbunden sind. Der Jazz wird im Hinblick auf seine k√ºnstlerische Bedeutung h√§ufig als amerikanisches Pendant zur klassischen europ√§ischen Musik verstanden. Dar√ºber hinaus hat er nahezu allen anderen Sparten der Musik, von Pop bis Folk, neue M√∂glichkeiten er√∂ffnet, bzw. w√§re das blo√üe Vorhandensein vieler heutiger Genres ohne einen Jazzabschnitt in der Musikhistorie fraglich.\"\n}"
										}
									]
								}
							]
						},
						{
							"name": "addBand",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"let jsonResponse = pm.response.json();",
											"let bandId = jsonResponse.id;",
											"pm.environment.set(\"bandId\", bandId)",
											"",
											"console.info(\"Created bandId: \" + pm.variables.get(\"bandId\"))",
											"",
											"//Statuscode",
											"",
											"pm.test(\"Response status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"name\": \"beOne\",\n    \"genre\": \"{{genreId}}\",\n    \"mainRoleInTheBand\": \"{{roleInTheBandId}}\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://localhost:8080/gig/band",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "8080",
									"path": [
										"gig",
										"band"
									]
								},
								"description": "Bei diesem Request wird eine Band mit folgenden Attributen hinzugef√ºgt:\n\nName, Genre und die Hauptrolle in der Band"
							},
							"response": [
								{
									"name": "addBand",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"name\": \"beOne\",\n    \"genre\": \"{{genreId}}\",\n    \"mainRoleInTheBand\": \"{{roleInTheBandId}}\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "http://localhost:8080/gig/band",
											"protocol": "http",
											"host": [
												"localhost"
											],
											"port": "8080",
											"path": [
												"gig",
												"band"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										},
										{
											"key": "Transfer-Encoding",
											"value": "chunked"
										},
										{
											"key": "Date",
											"value": "Thu, 24 Aug 2023 09:06:04 GMT"
										},
										{
											"key": "Keep-Alive",
											"value": "timeout=60"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										}
									],
									"cookie": [],
									"body": "{\n    \"id\": \"404df939-4cba-4766-b667-b8de979d89a3\",\n    \"name\": \"beOne\",\n    \"genre\": {\n        \"id\": \"29556479-c65f-437e-a47e-d5ffbb4fd914\",\n        \"name\": \"Jazz\",\n        \"description\": \"Jazz (Aussprache: [dÕ° í…õÀês] Audiodatei abspielen oder [jatÕ°s] Audiodatei abspielen) ist eine ungef√§hr um 1900 in den S√ºdstaaten der USA entstandene, urspr√ºnglich √ºberwiegend von Afroamerikanern hervorgebrachte Musikrichtung, die in vielf√§ltiger Weise weiterentwickelt wurde, h√§ufig im Crossover mit anderen Musiktraditionen und Genres. Mittlerweile werden auch Musikformen zum Jazz gez√§hlt, die oft nur lose oder kaum noch mit der afroamerikanischen Tradition verbunden sind. Der Jazz wird im Hinblick auf seine k√ºnstlerische Bedeutung h√§ufig als amerikanisches Pendant zur klassischen europ√§ischen Musik verstanden. Dar√ºber hinaus hat er nahezu allen anderen Sparten der Musik, von Pop bis Folk, neue M√∂glichkeiten er√∂ffnet, bzw. w√§re das blo√üe Vorhandensein vieler heutiger Genres ohne einen Jazzabschnitt in der Musikhistorie fraglich.\"\n    },\n    \"listOfRole\": [\n        {\n            \"id\": \"8858d233-663f-4517-8d7a-282b28d39789\",\n            \"name\": \"S√§ngerin der Band\",\n            \"description\": \"sing sing\"\n        }\n    ],\n    \"equipmentList\": null\n}"
								}
							]
						},
						{
							"name": "addBand NeedThis2ndValueForAddRoleInTheBandToBand",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"let jsonResponse = pm.response.json();",
											"let bandId = jsonResponse.id;",
											"pm.environment.set(\"bandIdForUpdate\", bandId)",
											"",
											"console.info(\"Created bandId: \" + pm.variables.get(\"bandId\"))",
											"",
											"//Statuscode",
											"",
											"pm.test(\"Response status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"name\": \"Test123\",\n    \"genre\": \"{{genreId}}\",\n    \"mainRoleInTheBand\": \"{{roleInTheBandId}}\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://localhost:8080/gig/band",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "8080",
									"path": [
										"gig",
										"band"
									]
								},
								"description": "Bei diesem Request wird eine Band mit folgenden Attributen hinzugef√ºgt:\n\nName, Genre und die Hauptrolle in der Band"
							},
							"response": [
								{
									"name": "addBand",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"name\": \"beOne\",\n    \"genre\": \"{{genreId}}\",\n    \"mainRoleInTheBand\": \"{{roleInTheBandId}}\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "http://localhost:8080/gig/band",
											"protocol": "http",
											"host": [
												"localhost"
											],
											"port": "8080",
											"path": [
												"gig",
												"band"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										},
										{
											"key": "Transfer-Encoding",
											"value": "chunked"
										},
										{
											"key": "Date",
											"value": "Thu, 24 Aug 2023 09:06:04 GMT"
										},
										{
											"key": "Keep-Alive",
											"value": "timeout=60"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										}
									],
									"cookie": [],
									"body": "{\n    \"id\": \"404df939-4cba-4766-b667-b8de979d89a3\",\n    \"name\": \"beOne\",\n    \"genre\": {\n        \"id\": \"29556479-c65f-437e-a47e-d5ffbb4fd914\",\n        \"name\": \"Jazz\",\n        \"description\": \"Jazz (Aussprache: [dÕ° í…õÀês] Audiodatei abspielen oder [jatÕ°s] Audiodatei abspielen) ist eine ungef√§hr um 1900 in den S√ºdstaaten der USA entstandene, urspr√ºnglich √ºberwiegend von Afroamerikanern hervorgebrachte Musikrichtung, die in vielf√§ltiger Weise weiterentwickelt wurde, h√§ufig im Crossover mit anderen Musiktraditionen und Genres. Mittlerweile werden auch Musikformen zum Jazz gez√§hlt, die oft nur lose oder kaum noch mit der afroamerikanischen Tradition verbunden sind. Der Jazz wird im Hinblick auf seine k√ºnstlerische Bedeutung h√§ufig als amerikanisches Pendant zur klassischen europ√§ischen Musik verstanden. Dar√ºber hinaus hat er nahezu allen anderen Sparten der Musik, von Pop bis Folk, neue M√∂glichkeiten er√∂ffnet, bzw. w√§re das blo√üe Vorhandensein vieler heutiger Genres ohne einen Jazzabschnitt in der Musikhistorie fraglich.\"\n    },\n    \"listOfRole\": [\n        {\n            \"id\": \"8858d233-663f-4517-8d7a-282b28d39789\",\n            \"name\": \"S√§ngerin der Band\",\n            \"description\": \"sing sing\"\n        }\n    ],\n    \"equipmentList\": null\n}"
								}
							]
						},
						{
							"name": "allBands",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"//Statuscode",
											"",
											"pm.test(\"Response status code is 200\", function () {",
											"    pm.expect(pm.response.code).to.equal(200);",
											"});",
											"",
											"",
											"",
											"// Retrieve the last 'id' value from the response",
											"var responseData = pm.response.json();",
											"var lastId = responseData[responseData.length - 1].id;",
											"",
											"// Set the last 'id' value as an environment variable",
											"pm.environment.set(\"bandId\", lastId);"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "http://localhost:8080/gig/band",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "8080",
									"path": [
										"gig",
										"band"
									]
								},
								"description": "Bei diesem Request wird eine Liste aller Bands aus dem System geholt"
							},
							"response": [
								{
									"name": "allBands",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "http://localhost:8080/gig/band",
											"protocol": "http",
											"host": [
												"localhost"
											],
											"port": "8080",
											"path": [
												"gig",
												"band"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										},
										{
											"key": "Transfer-Encoding",
											"value": "chunked"
										},
										{
											"key": "Date",
											"value": "Thu, 24 Aug 2023 09:06:19 GMT"
										},
										{
											"key": "Keep-Alive",
											"value": "timeout=60"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										}
									],
									"cookie": [],
									"body": "[\n    {\n        \"id\": \"404df939-4cba-4766-b667-b8de979d89a3\",\n        \"name\": \"beOne\",\n        \"genre\": {\n            \"id\": \"29556479-c65f-437e-a47e-d5ffbb4fd914\",\n            \"name\": \"Jazz\",\n            \"description\": \"Jazz (Aussprache: [dÕ° í…õÀês] Audiodatei abspielen oder [jatÕ°s] Audiodatei abspielen) ist eine ungef√§hr um 1900 in den S√ºdstaaten der USA entstandene, urspr√ºnglich √ºberwiegend von Afroamerikanern hervorgebrachte Musikrichtung, die in vielf√§ltiger Weise weiterentwickelt wurde, h√§ufig im Crossover mit anderen Musiktraditionen und Genres. Mittlerweile werden auch Musikformen zum Jazz gez√§hlt, die oft nur lose oder kaum noch mit der afroamerikanischen Tradition verbunden sind. Der Jazz wird im Hinblick auf seine k√ºnstlerische Bedeutung h√§ufig als amerikanisches Pendant zur klassischen europ√§ischen Musik verstanden. Dar√ºber hinaus hat er nahezu allen anderen Sparten der Musik, von Pop bis Folk, neue M√∂glichkeiten er√∂ffnet, bzw. w√§re das blo√üe Vorhandensein vieler heutiger Genres ohne einen Jazzabschnitt in der Musikhistorie fraglich.\"\n        },\n        \"listOfRole\": [\n            {\n                \"id\": \"8858d233-663f-4517-8d7a-282b28d39789\",\n                \"name\": \"S√§ngerin der Band\",\n                \"description\": \"sing sing\"\n            }\n        ],\n        \"equipmentList\": []\n    }\n]"
								}
							]
						},
						{
							"name": "bandById",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"//Statuscode",
											"",
											"pm.test(\"Response status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "http://localhost:8080/gig/band/{{bandId}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "8080",
									"path": [
										"gig",
										"band",
										"{{bandId}}"
									]
								},
								"description": "Bei diesem Request wird eine spezifische Band anhand der ID geholt"
							},
							"response": [
								{
									"name": "bandById",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "http://localhost:8080/gig/band/{{bandId}}",
											"protocol": "http",
											"host": [
												"localhost"
											],
											"port": "8080",
											"path": [
												"gig",
												"band",
												"{{bandId}}"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										},
										{
											"key": "Transfer-Encoding",
											"value": "chunked"
										},
										{
											"key": "Date",
											"value": "Thu, 24 Aug 2023 09:06:38 GMT"
										},
										{
											"key": "Keep-Alive",
											"value": "timeout=60"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										}
									],
									"cookie": [],
									"body": "{\n    \"id\": \"404df939-4cba-4766-b667-b8de979d89a3\",\n    \"name\": \"beOne\",\n    \"genre\": {\n        \"id\": \"29556479-c65f-437e-a47e-d5ffbb4fd914\",\n        \"name\": \"Jazz\",\n        \"description\": \"Jazz (Aussprache: [dÕ° í…õÀês] Audiodatei abspielen oder [jatÕ°s] Audiodatei abspielen) ist eine ungef√§hr um 1900 in den S√ºdstaaten der USA entstandene, urspr√ºnglich √ºberwiegend von Afroamerikanern hervorgebrachte Musikrichtung, die in vielf√§ltiger Weise weiterentwickelt wurde, h√§ufig im Crossover mit anderen Musiktraditionen und Genres. Mittlerweile werden auch Musikformen zum Jazz gez√§hlt, die oft nur lose oder kaum noch mit der afroamerikanischen Tradition verbunden sind. Der Jazz wird im Hinblick auf seine k√ºnstlerische Bedeutung h√§ufig als amerikanisches Pendant zur klassischen europ√§ischen Musik verstanden. Dar√ºber hinaus hat er nahezu allen anderen Sparten der Musik, von Pop bis Folk, neue M√∂glichkeiten er√∂ffnet, bzw. w√§re das blo√üe Vorhandensein vieler heutiger Genres ohne einen Jazzabschnitt in der Musikhistorie fraglich.\"\n    },\n    \"listOfRole\": [\n        {\n            \"id\": \"8858d233-663f-4517-8d7a-282b28d39789\",\n            \"name\": \"S√§ngerin der Band\",\n            \"description\": \"sing sing\"\n        }\n    ],\n    \"equipmentList\": []\n}"
								}
							]
						},
						{
							"name": "updateBand",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"//Statuscode\r",
											"\r",
											"pm.test(\"Response status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"genre\": \"{{genreId}}\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://localhost:8080/gig/band/{{bandId}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "8080",
									"path": [
										"gig",
										"band",
										"{{bandId}}"
									]
								},
								"description": "Bei diesem Request wird eine vorhandene Band mit neuer Information akualisiert"
							},
							"response": [
								{
									"name": "updateBand",
									"originalRequest": {
										"method": "PUT",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"genre\": \"{{genreId}}\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "http://localhost:8080/gig/band/{{bandId}}",
											"protocol": "http",
											"host": [
												"localhost"
											],
											"port": "8080",
											"path": [
												"gig",
												"band",
												"{{bandId}}"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										},
										{
											"key": "Transfer-Encoding",
											"value": "chunked"
										},
										{
											"key": "Date",
											"value": "Thu, 24 Aug 2023 08:31:48 GMT"
										},
										{
											"key": "Keep-Alive",
											"value": "timeout=60"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										}
									],
									"cookie": [],
									"body": "{\n    \"id\": \"14071727-fe34-420e-add5-f2972a7764ce\",\n    \"name\": \"beOne\",\n    \"genre\": {\n        \"id\": \"91e88597-fe2f-4054-973d-e1d8fe29f06f\",\n        \"name\": \"Pop\",\n        \"description\": \"chillig\"\n    },\n    \"listOfRole\": [\n        {\n            \"id\": \"0baec5ac-51de-4c42-b681-99bbc609888f\",\n            \"name\": \"S√§ngerin der Band\",\n            \"description\": \"bum bum\"\n        }\n    ],\n    \"equipmentList\": []\n}"
								}
							]
						},
						{
							"name": "addEquipmentToBand",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"//Statuscode\r",
											"\r",
											"pm.test(\"Response status code is 200\", function () {\r",
											"    pm.expect(pm.response.code).to.equal(200);\r",
											"});\r",
											"\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://localhost:8080/gig/band/{{bandId}}/equipment/{{equipmentId}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "8080",
									"path": [
										"gig",
										"band",
										"{{bandId}}",
										"equipment",
										"{{equipmentId}}"
									]
								},
								"description": "Dieser Request f√ºgt ein Equipment einer Band hinzu"
							},
							"response": [
								{
									"name": "addEquipmentToBand",
									"originalRequest": {
										"method": "PUT",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "http://localhost:8080/gig/band/{{bandId}}/equipment/{{equipmentId}}",
											"protocol": "http",
											"host": [
												"localhost"
											],
											"port": "8080",
											"path": [
												"gig",
												"band",
												"{{bandId}}",
												"equipment",
												"{{equipmentId}}"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										},
										{
											"key": "Transfer-Encoding",
											"value": "chunked"
										},
										{
											"key": "Date",
											"value": "Thu, 24 Aug 2023 08:32:53 GMT"
										},
										{
											"key": "Keep-Alive",
											"value": "timeout=60"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										}
									],
									"cookie": [],
									"body": "{\n    \"id\": \"14071727-fe34-420e-add5-f2972a7764ce\",\n    \"name\": \"beOne\",\n    \"genre\": {\n        \"id\": \"91e88597-fe2f-4054-973d-e1d8fe29f06f\",\n        \"name\": \"Pop\",\n        \"description\": \"chillig\"\n    },\n    \"listOfRole\": [\n        {\n            \"id\": \"0baec5ac-51de-4c42-b681-99bbc609888f\",\n            \"name\": \"S√§ngerin der Band\",\n            \"description\": \"bum bum\"\n        }\n    ],\n    \"equipmentList\": [\n        {\n            \"id\": \"81bb09ad-b2ce-4e07-a3d3-94a904c9254d\",\n            \"name\": \"neuer Name\",\n            \"description\": \"Studio Schlagzeug mit 20 Zoll BassDrum\",\n            \"typeOfEquipment\": {\n                \"id\": \"ac0be34e-8918-4c7f-9a05-44f042ebe907\",\n                \"name\": \"Highfield Schlagzeug\",\n                \"description\": \"Akustikschlagzeug\"\n            },\n            \"weight\": 120,\n            \"length\": 200,\n            \"width\": 120,\n            \"height\": 100,\n            \"dateOfPurchase\": \"2023-08-14\",\n            \"location\": {\n                \"id\": \"83fb7692-db8f-4a8d-b8ca-6b24a79daa9f\",\n                \"address\": {\n                    \"id\": \"54ecce82-51f0-4e00-adcc-b94de9cd0e9f\",\n                    \"street\": \"Lutzstrasse\",\n                    \"city\": \"M√ºnchen\",\n                    \"zipCode\": \"99086\",\n                    \"country\": \"ger\",\n                    \"houseNumber\": 14\n                },\n                \"typeOfLocation\": {\n                    \"id\": \"0001c4b3-e50b-4969-bb07-029e4e122f72\",\n                    \"name\": \"Proberaum Gotha\",\n                    \"description\": \"Robins Kellergeschoss mit Gesangskabine\"\n                }\n            },\n            \"price\": 2000,\n            \"cuboidVolume\": 2400000\n        }\n    ]\n}"
								}
							]
						},
						{
							"name": "addRoleInTheBandToBand",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"//Statuscode\r",
											"\r",
											"pm.test(\"Response status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "PUT",
								"header": [],
								"url": {
									"raw": "http://localhost:8080/gig/band/{{bandIdForUpdate}}/roleintheband/{{roleInTheBandIdForUpdate}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "8080",
									"path": [
										"gig",
										"band",
										"{{bandIdForUpdate}}",
										"roleintheband",
										"{{roleInTheBandIdForUpdate}}"
									]
								},
								"description": "Dieser Request f√ºgt eine Bandrolle einer Band hinzu"
							},
							"response": []
						}
					]
				},
				{
					"name": "TypeOfGig",
					"item": [
						{
							"name": "addTypeOfGig",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"let jsonResponse = pm.response.json();",
											"let typeOfGigId = jsonResponse.id;",
											"pm.environment.set(\"typeOfGigId\", typeOfGigId)",
											"",
											"console.info(\"Created typeOfGigId: \" + pm.variables.get(\"typeOfGigId\"))",
											"",
											"// Test to check if the response has an id property",
											"pm.test(\"Response has id property\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData).to.have.property(\"id\");",
											"});",
											"",
											"",
											"// Statuscode",
											"",
											"pm.test(\"Response status is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"",
											"",
											"",
											"",
											"",
											"",
											"",
											"",
											"",
											"",
											"",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"name\": \"Festival\",\n    \"description\": \"Live immer am besten und dann auch noch mehere Tage geil\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://localhost:8080/gig/typeofgig",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "8080",
									"path": [
										"gig",
										"typeofgig"
									]
								},
								"description": "Bei diesem Request wird ein Gig-Typ mit folgenden Attributen hinzugef√ºgt:\n\nName, Beschreibung"
							},
							"response": [
								{
									"name": "addTypeOfGig",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"name\": \"Festival\",\n    \"description\": \"Live immer am besten und dann auch noch mehere Tage geil\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "http://localhost:8080/gig/typeofgig",
											"protocol": "http",
											"host": [
												"localhost"
											],
											"port": "8080",
											"path": [
												"gig",
												"typeofgig"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										},
										{
											"key": "Transfer-Encoding",
											"value": "chunked"
										},
										{
											"key": "Date",
											"value": "Thu, 24 Aug 2023 08:33:26 GMT"
										},
										{
											"key": "Keep-Alive",
											"value": "timeout=60"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										}
									],
									"cookie": [],
									"body": "{\n    \"id\": \"fa57d454-e6ca-4aa4-bf6e-26d681fd8887\",\n    \"name\": \"Festival\",\n    \"description\": \"Live immer am besten und dann auch noch mehere Tage geil\"\n}"
								}
							]
						},
						{
							"name": "allTypeOfGigs",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"// Retrieve the last gig type id from the response",
											"var responseBody = pm.response.json();",
											"var lastGigType = responseBody[responseBody.length - 1];",
											"var lastGigTypeId = lastGigType.id;",
											"",
											"// Set the last gig type id to a global variable",
											"pm.globals.set(\"typeOfGigId\", lastGigTypeId);",
											"",
											"//Statuscode",
											"",
											"pm.test(\"Response status code is 200\", function () {",
											"    pm.expect(pm.response.code).to.equal(200);",
											"});",
											"",
											"",
											"",
											"",
											"",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "http://localhost:8080/gig/typeofgig",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "8080",
									"path": [
										"gig",
										"typeofgig"
									]
								},
								"description": "Bei diesem Request wird eine Liste aller Gig-Typen aus dem System geholt"
							},
							"response": [
								{
									"name": "allTypeOfGigs",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "http://localhost:8080/gig/typeofgig",
											"protocol": "http",
											"host": [
												"localhost"
											],
											"port": "8080",
											"path": [
												"gig",
												"typeofgig"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										},
										{
											"key": "Transfer-Encoding",
											"value": "chunked"
										},
										{
											"key": "Date",
											"value": "Thu, 24 Aug 2023 08:35:31 GMT"
										},
										{
											"key": "Keep-Alive",
											"value": "timeout=60"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										}
									],
									"cookie": [],
									"body": "[\n    {\n        \"id\": \"fa57d454-e6ca-4aa4-bf6e-26d681fd8887\",\n        \"name\": \"Festival\",\n        \"description\": \"Live immer am besten und dann auch noch mehere Tage geil\"\n    },\n    {\n        \"id\": \"8a3f490f-1ac0-40e8-977f-7c5bd5d7c4a5\",\n        \"name\": \"Konzert\",\n        \"description\": \"Ein sch√∂ner Abend in der Lanxess Arena\"\n    }\n]"
								}
							]
						},
						{
							"name": "typeOfGigById",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"//Statuscode\r",
											"\r",
											"pm.test(\"Response status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "http://localhost:8080/gig/typeofgig/{{typeOfGigId}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "8080",
									"path": [
										"gig",
										"typeofgig",
										"{{typeOfGigId}}"
									]
								},
								"description": "Bei diesem Request wird ein spezifischer Gig-Typ anhand der ID geholt"
							},
							"response": [
								{
									"name": "typeOfGigById",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "http://localhost:8080/gig/typeofgig/{{typeOfGigId}}",
											"protocol": "http",
											"host": [
												"localhost"
											],
											"port": "8080",
											"path": [
												"gig",
												"typeofgig",
												"{{typeOfGigId}}"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										},
										{
											"key": "Transfer-Encoding",
											"value": "chunked"
										},
										{
											"key": "Date",
											"value": "Thu, 24 Aug 2023 08:35:39 GMT"
										},
										{
											"key": "Keep-Alive",
											"value": "timeout=60"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										}
									],
									"cookie": [],
									"body": "{\n    \"id\": \"8a3f490f-1ac0-40e8-977f-7c5bd5d7c4a5\",\n    \"name\": \"Konzert\",\n    \"description\": \"Ein sch√∂ner Abend in der Lanxess Arena\"\n}"
								}
							]
						},
						{
							"name": "updateTypeOfGig",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"//Statuscode\r",
											"\r",
											"pm.test(\"Response status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"name\": \"KONZERTE\",\n    \"description\": \"Die sind auch ein Genuss.\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://localhost:8080/gig/typeofgig/{{typeOfGigId}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "8080",
									"path": [
										"gig",
										"typeofgig",
										"{{typeOfGigId}}"
									]
								},
								"description": "Bei diesem Request wird ein vorhandener Gig-Typ mit neuer Information akualisiert"
							},
							"response": [
								{
									"name": "updateTypeOfGig",
									"originalRequest": {
										"method": "PUT",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"name\": \"KONZERTE\",\n    \"description\": \"Die sind auch ein Genuss.\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "http://localhost:8080/gig/typeofgig/{{typeOfGigId}}",
											"protocol": "http",
											"host": [
												"localhost"
											],
											"port": "8080",
											"path": [
												"gig",
												"typeofgig",
												"{{typeOfGigId}}"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										},
										{
											"key": "Transfer-Encoding",
											"value": "chunked"
										},
										{
											"key": "Date",
											"value": "Thu, 24 Aug 2023 08:35:57 GMT"
										},
										{
											"key": "Keep-Alive",
											"value": "timeout=60"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										}
									],
									"cookie": [],
									"body": "{\n    \"id\": \"8a3f490f-1ac0-40e8-977f-7c5bd5d7c4a5\",\n    \"name\": \"KONZERTE\",\n    \"description\": \"Die sind auch ein Genuss.\"\n}"
								}
							]
						}
					]
				},
				{
					"name": "addGig",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"let jsonResponse = pm.response.json();\r",
									"let gigId = jsonResponse.id;\r",
									"pm.environment.set(\"gigId\", gigId)\r",
									"\r",
									"console.info(\"Created gigId: \" + pm.variables.get(\"gigId\"))\r",
									"\r",
									"\r",
									"//Statuscode\r",
									"\r",
									"pm.test(\"Response status code is 200\", function () {\r",
									"    pm.expect(pm.response.code).to.equal(200);\r",
									"});\r",
									"\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\": \"Birgit\",\n    \"startTime\": \"2023-08-22T14:00:00\",\n    \"endTime\": \"2023-08-25T22:30:00\",\n    \"description\": \"Das Festival f√ºr Nerds!\",\n    \"address\": \"{{addressId}}\",\n    \"typeOfGig\": \"{{typeOfGigId}}\",\n    \"band\": \"{{bandId}}\"\n\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:8080/gig",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"gig"
							]
						},
						"description": "Bei diesem Request wird ein Gig mit folgenden Attributen hinzugef√ºgt:\n\nName, Startzeit, Endzeit, Beschreibung, Adresse, Gig-Typ und Band"
					},
					"response": [
						{
							"name": "addGig",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"name\": \"Birgit\",\n    \"startTime\": \"2023-08-21T14:00:00\",\n    \"endTime\": \"2023-08-21T22:30:00\",\n    \"description\": \"Das Festival f√ºr Nerds!\",\n    \"address\": \"{{addressId}}\",\n    \"typeOfGig\": \"{{typeOfGigId}}\",\n    \"band\": \"{{bandId}}\"\n\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://localhost:8080/gig",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "8080",
									"path": [
										"gig"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								},
								{
									"key": "Transfer-Encoding",
									"value": "chunked"
								},
								{
									"key": "Date",
									"value": "Thu, 24 Aug 2023 08:36:07 GMT"
								},
								{
									"key": "Keep-Alive",
									"value": "timeout=60"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								}
							],
							"cookie": [],
							"body": "{\n    \"id\": \"a7a0c918-cf12-4a7d-8a31-59d978ca2d01\",\n    \"name\": \"Birgit\",\n    \"startTime\": \"2023-08-21T14:00:00\",\n    \"endTime\": \"2023-08-21T22:30:00\",\n    \"description\": \"Das Festival f√ºr Nerds!\",\n    \"address\": {\n        \"id\": \"54ecce82-51f0-4e00-adcc-b94de9cd0e9f\",\n        \"street\": \"Lutzstrasse\",\n        \"city\": \"M√ºnchen\",\n        \"zipCode\": \"99086\",\n        \"country\": \"ger\",\n        \"houseNumber\": 14\n    },\n    \"equipmentList\": null,\n    \"typeOfGig\": {\n        \"id\": \"8a3f490f-1ac0-40e8-977f-7c5bd5d7c4a5\",\n        \"name\": \"KONZERTE\",\n        \"description\": \"Die sind auch ein Genuss.\"\n    },\n    \"band\": {\n        \"id\": \"14071727-fe34-420e-add5-f2972a7764ce\",\n        \"name\": \"beOne\",\n        \"genre\": {\n            \"id\": \"91e88597-fe2f-4054-973d-e1d8fe29f06f\",\n            \"name\": \"Pop\",\n            \"description\": \"chillig\"\n        },\n        \"listOfRole\": [\n            {\n                \"id\": \"0baec5ac-51de-4c42-b681-99bbc609888f\",\n                \"name\": \"S√§ngerin der Band\",\n                \"description\": \"bum bum\"\n            }\n        ],\n        \"equipmentList\": [\n            {\n                \"id\": \"81bb09ad-b2ce-4e07-a3d3-94a904c9254d\",\n                \"name\": \"neuer Name\",\n                \"description\": \"Studio Schlagzeug mit 20 Zoll BassDrum\",\n                \"typeOfEquipment\": {\n                    \"id\": \"ac0be34e-8918-4c7f-9a05-44f042ebe907\",\n                    \"name\": \"Highfield Schlagzeug\",\n                    \"description\": \"Akustikschlagzeug\"\n                },\n                \"weight\": 120,\n                \"length\": 200,\n                \"width\": 120,\n                \"height\": 100,\n                \"dateOfPurchase\": \"2023-08-14\",\n                \"location\": {\n                    \"id\": \"83fb7692-db8f-4a8d-b8ca-6b24a79daa9f\",\n                    \"address\": {\n                        \"id\": \"54ecce82-51f0-4e00-adcc-b94de9cd0e9f\",\n                        \"street\": \"Lutzstrasse\",\n                        \"city\": \"M√ºnchen\",\n                        \"zipCode\": \"99086\",\n                        \"country\": \"ger\",\n                        \"houseNumber\": 14\n                    },\n                    \"typeOfLocation\": {\n                        \"id\": \"0001c4b3-e50b-4969-bb07-029e4e122f72\",\n                        \"name\": \"Proberaum Gotha\",\n                        \"description\": \"Robins Kellergeschoss mit Gesangskabine\"\n                    }\n                },\n                \"price\": 2000,\n                \"cuboidVolume\": 2400000\n            }\n        ]\n    }\n}"
						}
					]
				},
				{
					"name": "allGigs",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"// Retrieve the last gig type id from the response\r",
									"var responseBody = pm.response.json();\r",
									"var lastGigId = responseBody[responseBody.length - 1];\r",
									"var lastGigId = lastGigId.id;\r",
									"\r",
									"// Set the last gig type id to a global variable\r",
									"pm.environment.set(\"gigId\", lastGigId);\r",
									"\r",
									"//Statuscode\r",
									"\r",
									"pm.test(\"Response status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:8080/gig",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"gig"
							]
						},
						"description": "Bei diesem Request wird eine Liste aller Gigs aus dem System geholt"
					},
					"response": [
						{
							"name": "allGigs",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "http://localhost:8080/gig",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "8080",
									"path": [
										"gig"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								},
								{
									"key": "Transfer-Encoding",
									"value": "chunked"
								},
								{
									"key": "Date",
									"value": "Thu, 24 Aug 2023 08:36:18 GMT"
								},
								{
									"key": "Keep-Alive",
									"value": "timeout=60"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								}
							],
							"cookie": [],
							"body": "[\n    {\n        \"id\": \"a7a0c918-cf12-4a7d-8a31-59d978ca2d01\",\n        \"name\": \"Birgit\",\n        \"startTime\": \"2023-08-21T14:00:00\",\n        \"endTime\": \"2023-08-21T22:30:00\",\n        \"description\": \"Das Festival f√ºr Nerds!\",\n        \"address\": {\n            \"id\": \"54ecce82-51f0-4e00-adcc-b94de9cd0e9f\",\n            \"street\": \"Lutzstrasse\",\n            \"city\": \"M√ºnchen\",\n            \"zipCode\": \"99086\",\n            \"country\": \"ger\",\n            \"houseNumber\": 14\n        },\n        \"equipmentList\": [],\n        \"typeOfGig\": {\n            \"id\": \"8a3f490f-1ac0-40e8-977f-7c5bd5d7c4a5\",\n            \"name\": \"KONZERTE\",\n            \"description\": \"Die sind auch ein Genuss.\"\n        },\n        \"band\": {\n            \"id\": \"14071727-fe34-420e-add5-f2972a7764ce\",\n            \"name\": \"beOne\",\n            \"genre\": {\n                \"id\": \"91e88597-fe2f-4054-973d-e1d8fe29f06f\",\n                \"name\": \"Pop\",\n                \"description\": \"chillig\"\n            },\n            \"listOfRole\": [\n                {\n                    \"id\": \"0baec5ac-51de-4c42-b681-99bbc609888f\",\n                    \"name\": \"S√§ngerin der Band\",\n                    \"description\": \"bum bum\"\n                }\n            ],\n            \"equipmentList\": [\n                {\n                    \"id\": \"81bb09ad-b2ce-4e07-a3d3-94a904c9254d\",\n                    \"name\": \"neuer Name\",\n                    \"description\": \"Studio Schlagzeug mit 20 Zoll BassDrum\",\n                    \"typeOfEquipment\": {\n                        \"id\": \"ac0be34e-8918-4c7f-9a05-44f042ebe907\",\n                        \"name\": \"Highfield Schlagzeug\",\n                        \"description\": \"Akustikschlagzeug\"\n                    },\n                    \"weight\": 120,\n                    \"length\": 200,\n                    \"width\": 120,\n                    \"height\": 100,\n                    \"dateOfPurchase\": \"2023-08-14\",\n                    \"location\": {\n                        \"id\": \"83fb7692-db8f-4a8d-b8ca-6b24a79daa9f\",\n                        \"address\": {\n                            \"id\": \"54ecce82-51f0-4e00-adcc-b94de9cd0e9f\",\n                            \"street\": \"Lutzstrasse\",\n                            \"city\": \"M√ºnchen\",\n                            \"zipCode\": \"99086\",\n                            \"country\": \"ger\",\n                            \"houseNumber\": 14\n                        },\n                        \"typeOfLocation\": {\n                            \"id\": \"0001c4b3-e50b-4969-bb07-029e4e122f72\",\n                            \"name\": \"Proberaum Gotha\",\n                            \"description\": \"Robins Kellergeschoss mit Gesangskabine\"\n                        }\n                    },\n                    \"price\": 2000,\n                    \"cuboidVolume\": 2400000\n                }\n            ]\n        }\n    }\n]"
						}
					]
				},
				{
					"name": "gigByID",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"//Statuscode\r",
									"\r",
									"pm.test(\"Response status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:8080/gig/{{gigId}}",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"gig",
								"{{gigId}}"
							]
						},
						"description": "Bei diesem Request wird ein spezifischer Gig anhand der ID geholt"
					},
					"response": [
						{
							"name": "gigByID",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "http://localhost:8080/gig/{{gigId}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "8080",
									"path": [
										"gig",
										"{{gigId}}"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								},
								{
									"key": "Transfer-Encoding",
									"value": "chunked"
								},
								{
									"key": "Date",
									"value": "Thu, 24 Aug 2023 08:36:27 GMT"
								},
								{
									"key": "Keep-Alive",
									"value": "timeout=60"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								}
							],
							"cookie": [],
							"body": "{\n    \"id\": \"a7a0c918-cf12-4a7d-8a31-59d978ca2d01\",\n    \"name\": \"Birgit\",\n    \"startTime\": \"2023-08-21T14:00:00\",\n    \"endTime\": \"2023-08-21T22:30:00\",\n    \"description\": \"Das Festival f√ºr Nerds!\",\n    \"address\": {\n        \"id\": \"54ecce82-51f0-4e00-adcc-b94de9cd0e9f\",\n        \"street\": \"Lutzstrasse\",\n        \"city\": \"M√ºnchen\",\n        \"zipCode\": \"99086\",\n        \"country\": \"ger\",\n        \"houseNumber\": 14\n    },\n    \"equipmentList\": [],\n    \"typeOfGig\": {\n        \"id\": \"8a3f490f-1ac0-40e8-977f-7c5bd5d7c4a5\",\n        \"name\": \"KONZERTE\",\n        \"description\": \"Die sind auch ein Genuss.\"\n    },\n    \"band\": {\n        \"id\": \"14071727-fe34-420e-add5-f2972a7764ce\",\n        \"name\": \"beOne\",\n        \"genre\": {\n            \"id\": \"91e88597-fe2f-4054-973d-e1d8fe29f06f\",\n            \"name\": \"Pop\",\n            \"description\": \"chillig\"\n        },\n        \"listOfRole\": [\n            {\n                \"id\": \"0baec5ac-51de-4c42-b681-99bbc609888f\",\n                \"name\": \"S√§ngerin der Band\",\n                \"description\": \"bum bum\"\n            }\n        ],\n        \"equipmentList\": [\n            {\n                \"id\": \"81bb09ad-b2ce-4e07-a3d3-94a904c9254d\",\n                \"name\": \"neuer Name\",\n                \"description\": \"Studio Schlagzeug mit 20 Zoll BassDrum\",\n                \"typeOfEquipment\": {\n                    \"id\": \"ac0be34e-8918-4c7f-9a05-44f042ebe907\",\n                    \"name\": \"Highfield Schlagzeug\",\n                    \"description\": \"Akustikschlagzeug\"\n                },\n                \"weight\": 120,\n                \"length\": 200,\n                \"width\": 120,\n                \"height\": 100,\n                \"dateOfPurchase\": \"2023-08-14\",\n                \"location\": {\n                    \"id\": \"83fb7692-db8f-4a8d-b8ca-6b24a79daa9f\",\n                    \"address\": {\n                        \"id\": \"54ecce82-51f0-4e00-adcc-b94de9cd0e9f\",\n                        \"street\": \"Lutzstrasse\",\n                        \"city\": \"M√ºnchen\",\n                        \"zipCode\": \"99086\",\n                        \"country\": \"ger\",\n                        \"houseNumber\": 14\n                    },\n                    \"typeOfLocation\": {\n                        \"id\": \"0001c4b3-e50b-4969-bb07-029e4e122f72\",\n                        \"name\": \"Proberaum Gotha\",\n                        \"description\": \"Robins Kellergeschoss mit Gesangskabine\"\n                    }\n                },\n                \"price\": 2000,\n                \"cuboidVolume\": 2400000\n            }\n        ]\n    }\n}"
						}
					]
				},
				{
					"name": "updateGig",
					"request": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"startTime\": \"2023-08-20T22:30:00\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:8080/gig/{{gigId}}",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"gig",
								"{{gigId}}"
							]
						},
						"description": "Bei diesem Request wird ein vorhandener Gig-Typ mit neuer Information akualisiert"
					},
					"response": [
						{
							"name": "updateGig",
							"originalRequest": {
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"startTime\": \"2023-08-20T22:30:00\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://localhost:8080/gig/{{gigId}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "8080",
									"path": [
										"gig",
										"{{gigId}}"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								},
								{
									"key": "Transfer-Encoding",
									"value": "chunked"
								},
								{
									"key": "Date",
									"value": "Thu, 24 Aug 2023 08:36:35 GMT"
								},
								{
									"key": "Keep-Alive",
									"value": "timeout=60"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								}
							],
							"cookie": [],
							"body": "{\n    \"id\": \"a7a0c918-cf12-4a7d-8a31-59d978ca2d01\",\n    \"name\": \"Birgit\",\n    \"startTime\": \"2023-08-20T22:30:00\",\n    \"endTime\": \"2023-08-21T22:30:00\",\n    \"description\": \"Das Festival f√ºr Nerds!\",\n    \"address\": {\n        \"id\": \"54ecce82-51f0-4e00-adcc-b94de9cd0e9f\",\n        \"street\": \"Lutzstrasse\",\n        \"city\": \"M√ºnchen\",\n        \"zipCode\": \"99086\",\n        \"country\": \"ger\",\n        \"houseNumber\": 14\n    },\n    \"equipmentList\": [],\n    \"typeOfGig\": {\n        \"id\": \"8a3f490f-1ac0-40e8-977f-7c5bd5d7c4a5\",\n        \"name\": \"KONZERTE\",\n        \"description\": \"Die sind auch ein Genuss.\"\n    },\n    \"band\": {\n        \"id\": \"14071727-fe34-420e-add5-f2972a7764ce\",\n        \"name\": \"beOne\",\n        \"genre\": {\n            \"id\": \"91e88597-fe2f-4054-973d-e1d8fe29f06f\",\n            \"name\": \"Pop\",\n            \"description\": \"chillig\"\n        },\n        \"listOfRole\": [\n            {\n                \"id\": \"0baec5ac-51de-4c42-b681-99bbc609888f\",\n                \"name\": \"S√§ngerin der Band\",\n                \"description\": \"bum bum\"\n            }\n        ],\n        \"equipmentList\": [\n            {\n                \"id\": \"81bb09ad-b2ce-4e07-a3d3-94a904c9254d\",\n                \"name\": \"neuer Name\",\n                \"description\": \"Studio Schlagzeug mit 20 Zoll BassDrum\",\n                \"typeOfEquipment\": {\n                    \"id\": \"ac0be34e-8918-4c7f-9a05-44f042ebe907\",\n                    \"name\": \"Highfield Schlagzeug\",\n                    \"description\": \"Akustikschlagzeug\"\n                },\n                \"weight\": 120,\n                \"length\": 200,\n                \"width\": 120,\n                \"height\": 100,\n                \"dateOfPurchase\": \"2023-08-14\",\n                \"location\": {\n                    \"id\": \"83fb7692-db8f-4a8d-b8ca-6b24a79daa9f\",\n                    \"address\": {\n                        \"id\": \"54ecce82-51f0-4e00-adcc-b94de9cd0e9f\",\n                        \"street\": \"Lutzstrasse\",\n                        \"city\": \"M√ºnchen\",\n                        \"zipCode\": \"99086\",\n                        \"country\": \"ger\",\n                        \"houseNumber\": 14\n                    },\n                    \"typeOfLocation\": {\n                        \"id\": \"0001c4b3-e50b-4969-bb07-029e4e122f72\",\n                        \"name\": \"Proberaum Gotha\",\n                        \"description\": \"Robins Kellergeschoss mit Gesangskabine\"\n                    }\n                },\n                \"price\": 2000,\n                \"cuboidVolume\": 2400000\n            }\n        ]\n    }\n}"
						}
					]
				},
				{
					"name": "addEquipmentToGig",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"//Statuscode\r",
									"\r",
									"pm.test(\"Response status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [],
						"url": {
							"raw": "http://localhost:8080/gig/{{gigId}}/equipment/{{equipmentIdForAddEquipmentToGig}}",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"gig",
								"{{gigId}}",
								"equipment",
								"{{equipmentIdForAddEquipmentToGig}}"
							]
						},
						"description": "Dieser Request f√ºgt ein Equipment einem Gig hinzu"
					},
					"response": []
				}
			]
		},
		{
			"name": "Rental",
			"item": [
				{
					"name": "addRental",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"// Retrieve the last gig type id from the response\r",
									"var responseBody = pm.response.json();\r",
									"var lastRentalId = responseBody.id;\r",
									"\r",
									"// Set the last gig type id to a global variable\r",
									"pm.globals.set(\"rentalId\", lastRentalId);\r",
									"\r",
									"let jsonResponse = pm.response.json();\r",
									"let rentalId = jsonResponse.id;\r",
									"pm.environment.set(\"rentalId\", rentalId)\r",
									"\r",
									"console.info(\"Created rentalId: \" + pm.variables.get(\"rentalId\"))"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\": \"Meine Fl√∂te wird verliehen\",\n    \"startTime\": \"2023-08-21T14:00:00\",\n    \"endTime\": \"2023-08-21T22:30:00\",\n    \"description\": \"Max der Hund will auch mal fl√∂ten\",\n    \"address\": \"{{addressId}}\",\n    \"responsiblePerson\": \"Max der Assi\"\n\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:8080/rental",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"rental"
							]
						},
						"description": "Bei diesem Request wird ein Rental mit folgenden Attributen hinzugef√ºgt:\n\nName, Startzeit, Endzeit, Beschreibung, Adresse, zust√§ndige Person"
					},
					"response": [
						{
							"name": "addRental",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"name\": \"Meine Fl√∂te wird verliehen\",\n    \"startTime\": \"2023-08-21T14:00:00\",\n    \"endTime\": \"2023-08-21T22:30:00\",\n    \"description\": \"Max der Hund will auch mal fl√∂ten\",\n    \"address\": \"{{addressId}}\",\n    \"responsiblePerson\": \"Max der Assi\"\n\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://localhost:8080/rental",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "8080",
									"path": [
										"rental"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								},
								{
									"key": "Transfer-Encoding",
									"value": "chunked"
								},
								{
									"key": "Date",
									"value": "Thu, 24 Aug 2023 08:36:53 GMT"
								},
								{
									"key": "Keep-Alive",
									"value": "timeout=60"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								}
							],
							"cookie": [],
							"body": "{\n    \"id\": \"62628dfd-939a-4600-ad04-15672a262fef\",\n    \"name\": \"Meine Fl√∂te wird verliehen\",\n    \"startTime\": \"2023-08-21T14:00:00\",\n    \"endTime\": \"2023-08-21T22:30:00\",\n    \"description\": \"Max der Hund will auch mal fl√∂ten\",\n    \"address\": {\n        \"id\": \"54ecce82-51f0-4e00-adcc-b94de9cd0e9f\",\n        \"street\": \"Lutzstrasse\",\n        \"city\": \"M√ºnchen\",\n        \"zipCode\": \"99086\",\n        \"country\": \"ger\",\n        \"houseNumber\": 14\n    },\n    \"equipmentList\": null,\n    \"responsiblePerson\": \"Max der Assi\"\n}"
						}
					]
				},
				{
					"name": "allRental",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"// Retrieve the last gig type id from the response\r",
									"var responseBody = pm.response.json();\r",
									"var lastGigId = responseBody[responseBody.length - 1];\r",
									"var lastGigId = lastGigId.id;\r",
									"\r",
									"// Set the last gig type id to a global variable\r",
									"pm.globals.set(\"rentalId\", lastGigId);\r",
									"\r",
									"\r",
									"//Statuscode\r",
									"\r",
									"pm.test(\"Response status code is 200\", function () {\r",
									"    pm.expect(pm.response.code).to.equal(200);\r",
									"});\r",
									"\r",
									"\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:8080/rental",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"rental"
							]
						},
						"description": "Bei diesem Request wird eine Liste aller Rentals aus dem System geholt"
					},
					"response": [
						{
							"name": "allRental",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "http://localhost:8080/rental",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "8080",
									"path": [
										"rental"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								},
								{
									"key": "Transfer-Encoding",
									"value": "chunked"
								},
								{
									"key": "Date",
									"value": "Thu, 24 Aug 2023 08:38:39 GMT"
								},
								{
									"key": "Keep-Alive",
									"value": "timeout=60"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								}
							],
							"cookie": [],
							"body": "[\n    {\n        \"id\": \"62628dfd-939a-4600-ad04-15672a262fef\",\n        \"name\": \"Meine Fl√∂te wird verliehen\",\n        \"startTime\": \"2023-08-21T14:00:00\",\n        \"endTime\": \"2023-08-21T22:30:00\",\n        \"description\": \"Max der Hund will auch mal fl√∂ten\",\n        \"address\": {\n            \"id\": \"54ecce82-51f0-4e00-adcc-b94de9cd0e9f\",\n            \"street\": \"Lutzstrasse\",\n            \"city\": \"M√ºnchen\",\n            \"zipCode\": \"99086\",\n            \"country\": \"ger\",\n            \"houseNumber\": 14\n        },\n        \"equipmentList\": [],\n        \"responsiblePerson\": \"Max der Assi\"\n    }\n]"
						}
					]
				},
				{
					"name": "rentalByID",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"//Statuscode\r",
									"\r",
									"pm.test(\"Response status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:8080/rental/{{rentalId}}",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"rental",
								"{{rentalId}}"
							]
						},
						"description": "Bei diesem Request wird ein spezifischer Gig anhand der ID geholt"
					},
					"response": [
						{
							"name": "rentalByID",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "http://localhost:8080/rental/{{rentalId}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "8080",
									"path": [
										"rental",
										"{{rentalId}}"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								},
								{
									"key": "Transfer-Encoding",
									"value": "chunked"
								},
								{
									"key": "Date",
									"value": "Thu, 24 Aug 2023 08:38:45 GMT"
								},
								{
									"key": "Keep-Alive",
									"value": "timeout=60"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								}
							],
							"cookie": [],
							"body": "{\n    \"id\": \"62628dfd-939a-4600-ad04-15672a262fef\",\n    \"name\": \"Meine Fl√∂te wird verliehen\",\n    \"startTime\": \"2023-08-21T14:00:00\",\n    \"endTime\": \"2023-08-21T22:30:00\",\n    \"description\": \"Max der Hund will auch mal fl√∂ten\",\n    \"address\": {\n        \"id\": \"54ecce82-51f0-4e00-adcc-b94de9cd0e9f\",\n        \"street\": \"Lutzstrasse\",\n        \"city\": \"M√ºnchen\",\n        \"zipCode\": \"99086\",\n        \"country\": \"ger\",\n        \"houseNumber\": 14\n    },\n    \"equipmentList\": [],\n    \"responsiblePerson\": \"Max der Assi\"\n}"
						}
					]
				},
				{
					"name": "updateRental",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"//Statuscode\r",
									"\r",
									"pm.test(\"Response status code is 200\", function () {\r",
									"    pm.expect(pm.response.code).to.equal(200);\r",
									"});\r",
									"\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"startTime\": \"2023-08-20T23:30:00\",\n    \"endTime\": \"2023-08-21T12:30:00\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:8080/rental/{{rentalId}}",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"rental",
								"{{rentalId}}"
							]
						},
						"description": "Bei diesem Request wird ein vorhandener Gig-Typ mit neuer Information akualisiert"
					},
					"response": [
						{
							"name": "updateRental",
							"originalRequest": {
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"startTime\": \"2023-08-20T23:30:00\",\n    \"endTime\": \"2023-08-21T12:30:00\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://localhost:8080/rental/{{rentalId}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "8080",
									"path": [
										"rental",
										"{{rentalId}}"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								},
								{
									"key": "Transfer-Encoding",
									"value": "chunked"
								},
								{
									"key": "Date",
									"value": "Thu, 24 Aug 2023 08:38:55 GMT"
								},
								{
									"key": "Keep-Alive",
									"value": "timeout=60"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								}
							],
							"cookie": [],
							"body": "{\n    \"id\": \"62628dfd-939a-4600-ad04-15672a262fef\",\n    \"name\": \"Meine Fl√∂te wird verliehen\",\n    \"startTime\": \"2023-08-20T23:30:00\",\n    \"endTime\": \"2023-08-21T22:30:00\",\n    \"description\": \"Max der Hund will auch mal fl√∂ten\",\n    \"address\": {\n        \"id\": \"54ecce82-51f0-4e00-adcc-b94de9cd0e9f\",\n        \"street\": \"Lutzstrasse\",\n        \"city\": \"M√ºnchen\",\n        \"zipCode\": \"99086\",\n        \"country\": \"ger\",\n        \"houseNumber\": 14\n    },\n    \"equipmentList\": [],\n    \"responsiblePerson\": \"Max der Assi\"\n}"
						}
					]
				},
				{
					"name": "addEquipmentToRental",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"//Statuscode\r",
									"\r",
									"pm.test(\"Response status code is 200\", function () {\r",
									"    pm.expect(pm.response.code).to.equal(200);\r",
									"});\r",
									"\r",
									"\r",
									"\r",
									"\r",
									"\r",
									"\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [],
						"url": {
							"raw": "http://localhost:8080/rental/{{rentalId}}/equipment/{{equipmentIdForAddEquipmentToRental}}",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"rental",
								"{{rentalId}}",
								"equipment",
								"{{equipmentIdForAddEquipmentToRental}}"
							]
						},
						"description": "Dieser Request f√ºgt ein Equipment einem Rental hinzu"
					},
					"response": []
				}
			]
		},
		{
			"name": "Timetable",
			"item": [
				{
					"name": "allHappenings",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:8080/timetable",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"timetable"
							]
						},
						"description": "Bei diesem Request wird eine Liste aller Happenings aus dem System geholt"
					},
					"response": []
				},
				{
					"name": "filteredHappenings",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:8080/timetable/search?name=beone&description=nerds",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"timetable",
								"search"
							],
							"query": [
								{
									"key": "name",
									"value": "beone"
								},
								{
									"key": "description",
									"value": "nerds"
								}
							]
						},
						"description": "Bei diesem Request werden spezifische Happenings anhand des Namens und der Beschreibung aus dem System geholt"
					},
					"response": []
				},
				{
					"name": "calcTotalValuesOfHappening",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:8080/timetable/{{gigId}}/calc",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"timetable",
								"{{gigId}}",
								"calc"
							]
						},
						"description": "Dieser Request holt die Summe des Gewichts, des Volumens und der Kosten aller Happenings aus dem System"
					},
					"response": []
				},
				{
					"name": "whereIsMyEquipment?",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:8080/timetable/{{gigId}}/whereismyequipment",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"timetable",
								"{{gigId}}",
								"whereismyequipment"
							]
						},
						"description": "Dieser Request holt den Standort eines gesuchten Equipments aus dem System"
					},
					"response": []
				}
			]
		},
		{
			"name": "Delete Methoden",
			"item": [
				{
					"name": "DeleteAddress",
					"item": [
						{
							"name": "addAddress Copy",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"let jsonResponse = pm.response.json();",
											"let addressId = jsonResponse.id;",
											"pm.environment.set(\"addressId\", addressId)",
											"",
											"console.info(\"Created addressId: \"+ pm.variables.get(\"addressId\"))",
											"",
											"//Statuscode",
											"",
											"pm.test(\"Response status code is 202\", function () {",
											"    pm.response.to.have.status(202);",
											"});",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"street\": \"Lutzstrasse\",\n    \"city\": \"M√ºnchen\",\n    \"houseNumber\": \"14\",\n    \"country\": \"ger\",\n    \"zipCode\": \"99086\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://localhost:8080/addresses",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "8080",
									"path": [
										"addresses"
									]
								},
								"description": "Bei diesem Request wird eine Adresse mit folgenden Attributen hinzugef√ºgt:\n\nStra√üe, Stadt, Hausnummer, Land und Postleitzahl"
							},
							"response": [
								{
									"name": "addAddress",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"street\": \"Heinrichstra√üe\",\n    \"city\": \"M√ºnchen\",\n    \"houseNumber\": \"23\",\n    \"country\": \"ger\",\n    \"zipCode\": \"99086\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "http://localhost:8080/addresses",
											"protocol": "http",
											"host": [
												"localhost"
											],
											"port": "8080",
											"path": [
												"addresses"
											]
										}
									},
									"status": "Accepted",
									"code": 202,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										},
										{
											"key": "Transfer-Encoding",
											"value": "chunked"
										},
										{
											"key": "Date",
											"value": "Thu, 24 Aug 2023 07:55:56 GMT"
										},
										{
											"key": "Keep-Alive",
											"value": "timeout=60"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										}
									],
									"cookie": [],
									"body": "{\n    \"id\": \"4cf97a1f-c14a-46c8-a386-8e5f5c8157f9\",\n    \"houseNumber\": 23,\n    \"street\": \"Heinrichstra√üe\",\n    \"zipCode\": \"99086\",\n    \"country\": \"ger\",\n    \"city\": \"M√ºnchen\"\n}"
								}
							]
						},
						{
							"name": "deleteAddress",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"console.info(\"Deleted addressId: \"+ pm.variables.get(\"addressId\"))\r",
											"\r",
											"//Statuscode\r",
											"\r",
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "http://localhost:8080/addresses/{{addressId}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "8080",
									"path": [
										"addresses",
										"{{addressId}}"
									]
								},
								"description": "Bei diesem Request wird eine vorhandene Adresse aus dem System gel√∂scht"
							},
							"response": []
						}
					]
				},
				{
					"name": "DeleteTypeOfEquipment",
					"item": [
						{
							"name": "addTypeOfEquipment Copy",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"let jsonResponse = pm.response.json();",
											"let typeOfEquipmentId = jsonResponse.id;",
											"pm.environment.set(\"typeOfEquipmentId\", typeOfEquipmentId)",
											"",
											"console.info(\"Created typeOfEquipmentId: \"+ pm.variables.get(\"typeOfEquipmentId\"))",
											"",
											"//Statuscode",
											"",
											"pm.test(\"Status code is 202\", function () {",
											"    pm.response.to.have.status(202);",
											"});",
											"",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"name\" : \"Schlagzeug A\",\n    \"description\" : \"Akustikschlagzeug\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://localhost:8080/typeOfEquipment",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "8080",
									"path": [
										"typeOfEquipment"
									]
								},
								"description": "Bei diesem Request wird ein Equipment-Typ mit folgenden Attributen hinzugef√ºgt:\n\nName, Beschreibung"
							},
							"response": [
								{
									"name": "addTypeOfEquipment",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"name\" : \"Schlagzeug A\",\n    \"description\" : \"Akustikschlagzeug\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "http://localhost:8080/typeOfEquipment",
											"protocol": "http",
											"host": [
												"localhost"
											],
											"port": "8080",
											"path": [
												"typeOfEquipment"
											]
										}
									},
									"status": "Accepted",
									"code": 202,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										},
										{
											"key": "Transfer-Encoding",
											"value": "chunked"
										},
										{
											"key": "Date",
											"value": "Thu, 24 Aug 2023 07:58:08 GMT"
										},
										{
											"key": "Keep-Alive",
											"value": "timeout=60"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										}
									],
									"cookie": [],
									"body": "{\n    \"id\": \"91514269-a0f6-46ad-8f39-0cecbafea77f\",\n    \"name\": \"Highfield Schlagzeug\",\n    \"description\": \"Akustikschlagzeug\"\n}"
								}
							]
						},
						{
							"name": "deleteTypeOfEquipment",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"console.info(\"Deleted typeOfEquipmentId: \"+ pm.variables.get(\"typeOfEquipmentId\"))\r",
											"//Statuscode\r",
											"\r",
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "http://localhost:8080/typeOfEquipment/{{typeOfEquipmentId}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "8080",
									"path": [
										"typeOfEquipment",
										"{{typeOfEquipmentId}}"
									]
								},
								"description": "Bei diesem Request wird ein vorhandener Equipment-Typ aus dem System gel√∂scht"
							},
							"response": []
						}
					]
				},
				{
					"name": "DeleteTypeOfGig",
					"item": [
						{
							"name": "addTypeOfGig Copy",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"let jsonResponse = pm.response.json();",
											"let typeOfGigId = jsonResponse.id;",
											"pm.environment.set(\"typeOfGigId\", typeOfGigId)",
											"",
											"console.info(\"Created typeOfGigId: \" + pm.variables.get(\"typeOfGigId\"))",
											"",
											"// Test to check if the response has an id property",
											"pm.test(\"Response has id property\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData).to.have.property(\"id\");",
											"});",
											"",
											"",
											"// Statuscode",
											"",
											"pm.test(\"Response status is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"",
											"",
											"",
											"",
											"",
											"",
											"",
											"",
											"",
											"",
											"",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"name\": \"Festival\",\n    \"description\": \"Live immer am besten und dann auch noch mehere Tage geil\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://localhost:8080/gig/typeofgig",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "8080",
									"path": [
										"gig",
										"typeofgig"
									]
								},
								"description": "Bei diesem Request wird ein Gig-Typ mit folgenden Attributen hinzugef√ºgt:\n\nName, Beschreibung"
							},
							"response": [
								{
									"name": "addTypeOfGig",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"name\": \"Festival\",\n    \"description\": \"Live immer am besten und dann auch noch mehere Tage geil\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "http://localhost:8080/gig/typeofgig",
											"protocol": "http",
											"host": [
												"localhost"
											],
											"port": "8080",
											"path": [
												"gig",
												"typeofgig"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										},
										{
											"key": "Transfer-Encoding",
											"value": "chunked"
										},
										{
											"key": "Date",
											"value": "Thu, 24 Aug 2023 08:33:26 GMT"
										},
										{
											"key": "Keep-Alive",
											"value": "timeout=60"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										}
									],
									"cookie": [],
									"body": "{\n    \"id\": \"fa57d454-e6ca-4aa4-bf6e-26d681fd8887\",\n    \"name\": \"Festival\",\n    \"description\": \"Live immer am besten und dann auch noch mehere Tage geil\"\n}"
								}
							]
						},
						{
							"name": "deleteTypeOfGig",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"//Statuscode\r",
											"\r",
											"pm.test(\"Response status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "http://localhost:8080/gig/typeofgig/{{typeOfGigId}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "8080",
									"path": [
										"gig",
										"typeofgig",
										"{{typeOfGigId}}"
									]
								},
								"description": "Bei diesem Request wird ein vorhandener Gig-Typ aus dem System gel√∂scht"
							},
							"response": []
						}
					]
				},
				{
					"name": "DeleteLocation",
					"item": [
						{
							"name": "addTypeOfLocation Copy 2",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"let jsonResponse = pm.response.json();",
											"let typeOfLocationId = jsonResponse.id;",
											"pm.environment.set(\"typeOfLocationId\", typeOfLocationId)",
											"",
											"console.info(\"Created typeOfLocationId: \"+ pm.variables.get(\"typeOfLocationId\"))",
											"",
											"//Statuscode",
											"",
											"pm.test(\"Response status code is 202\", function () {",
											"    pm.response.to.have.status(202);",
											"});",
											"",
											"",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"name\": \"Proberaum Gotha\",\n    \"description\": \"Robins Kellergeschoss mit Gesangskabine\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://localhost:8080/typeOfLocation",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "8080",
									"path": [
										"typeOfLocation"
									]
								},
								"description": "Bei diesem Request wird ein Standort-Typ mit folgenden Attributen hinzugef√ºgt:\n\nName, Beschreibung"
							},
							"response": [
								{
									"name": "addTypeOfLocation",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"name\": \"Proberaum Erfurt\",\n    \"description\": \"Ein Proberaum in Erfurt\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "http://localhost:8080/typeOfLocation",
											"protocol": "http",
											"host": [
												"localhost"
											],
											"port": "8080",
											"path": [
												"typeOfLocation"
											]
										}
									},
									"status": "Accepted",
									"code": 202,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										},
										{
											"key": "Transfer-Encoding",
											"value": "chunked"
										},
										{
											"key": "Date",
											"value": "Thu, 24 Aug 2023 08:01:31 GMT"
										},
										{
											"key": "Keep-Alive",
											"value": "timeout=60"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										}
									],
									"cookie": [],
									"body": "{\n    \"id\": \"5b8f4f19-a05c-42a8-b50c-b43d31b6129e\",\n    \"name\": \"Proberaum Erfurt\",\n    \"description\": \"Ein Proberaum in Erfurt\"\n}"
								}
							]
						},
						{
							"name": "addAddress Copy 2",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"let jsonResponse = pm.response.json();",
											"let addressId = jsonResponse.id;",
											"pm.environment.set(\"addressId\", addressId)",
											"",
											"console.info(\"Created addressId: \"+ pm.variables.get(\"addressId\"))",
											"",
											"//Statuscode",
											"",
											"pm.test(\"Response status code is 202\", function () {",
											"    pm.response.to.have.status(202);",
											"});",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"street\": \"Lutzstrasse\",\n    \"city\": \"M√ºnchen\",\n    \"houseNumber\": \"14\",\n    \"country\": \"ger\",\n    \"zipCode\": \"99086\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://localhost:8080/addresses",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "8080",
									"path": [
										"addresses"
									]
								},
								"description": "Bei diesem Request wird eine Adresse mit folgenden Attributen hinzugef√ºgt:\n\nStra√üe, Stadt, Hausnummer, Land und Postleitzahl"
							},
							"response": [
								{
									"name": "addAddress",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"street\": \"Heinrichstra√üe\",\n    \"city\": \"M√ºnchen\",\n    \"houseNumber\": \"23\",\n    \"country\": \"ger\",\n    \"zipCode\": \"99086\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "http://localhost:8080/addresses",
											"protocol": "http",
											"host": [
												"localhost"
											],
											"port": "8080",
											"path": [
												"addresses"
											]
										}
									},
									"status": "Accepted",
									"code": 202,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										},
										{
											"key": "Transfer-Encoding",
											"value": "chunked"
										},
										{
											"key": "Date",
											"value": "Thu, 24 Aug 2023 07:55:56 GMT"
										},
										{
											"key": "Keep-Alive",
											"value": "timeout=60"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										}
									],
									"cookie": [],
									"body": "{\n    \"id\": \"4cf97a1f-c14a-46c8-a386-8e5f5c8157f9\",\n    \"houseNumber\": 23,\n    \"street\": \"Heinrichstra√üe\",\n    \"zipCode\": \"99086\",\n    \"country\": \"ger\",\n    \"city\": \"M√ºnchen\"\n}"
								}
							]
						},
						{
							"name": "addLocation Copy",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"let jsonResponse = pm.response.json();",
											"let locationId = jsonResponse.id;",
											"pm.environment.set(\"locationId\", locationId)",
											"",
											"console.info(\"Created locationId: \"+ pm.variables.get(\"locationId\"))",
											"",
											"//Statuscode",
											"",
											"pm.test(\"Response status code is 202\", function () {",
											"    pm.expect(pm.response.code).to.equal(202);",
											"});",
											"",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"typeOfLocationId\": \"{{typeOfLocationId}}\",\n    \"addressId\": \"{{addressId}}\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://localhost:8080/location",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "8080",
									"path": [
										"location"
									]
								},
								"description": "Bei diesem Request wird ein Standort mit folgenden Attributen hinzugef√ºgt:\n\nStandort-ID, Adress-ID"
							},
							"response": [
								{
									"name": "addLocation",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"typeOfLocationId\": \"{{typeOfLocationId}}\",\n    \"addressId\": \"{{addressId}}\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "http://localhost:8080/location",
											"protocol": "http",
											"host": [
												"localhost"
											],
											"port": "8080",
											"path": [
												"location"
											]
										}
									},
									"status": "Accepted",
									"code": 202,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										},
										{
											"key": "Transfer-Encoding",
											"value": "chunked"
										},
										{
											"key": "Date",
											"value": "Thu, 24 Aug 2023 08:13:23 GMT"
										},
										{
											"key": "Keep-Alive",
											"value": "timeout=60"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										}
									],
									"cookie": [],
									"body": "{\n    \"id\": \"522c4f7d-bb68-46e4-868f-c49bb3466407\",\n    \"addressResponse\": {\n        \"id\": \"4cf97a1f-c14a-46c8-a386-8e5f5c8157f9\",\n        \"houseNumber\": 0,\n        \"street\": \"James Gosling Street\",\n        \"zipCode\": \"99086\",\n        \"country\": \"ger\",\n        \"city\": \"M√ºnchen\"\n    },\n    \"typeOfLocationResponse\": {\n        \"id\": \"69fd8856-3d8c-458d-8e28-a9bfae279c8a\",\n        \"name\": \"Darios Proberaum in Gera\",\n        \"description\": \"Lagerraum und Studio\"\n    }\n}"
								},
								{
									"name": "addLocation",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"typeOfLocationId\": \"{{typeOfLocationId}}\",\n    \"addressId\": \"{{addressId}}\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "http://localhost:8080/location",
											"protocol": "http",
											"host": [
												"localhost"
											],
											"port": "8080",
											"path": [
												"location"
											]
										}
									},
									"status": "Accepted",
									"code": 202,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										},
										{
											"key": "Transfer-Encoding",
											"value": "chunked"
										},
										{
											"key": "Date",
											"value": "Thu, 24 Aug 2023 08:14:50 GMT"
										},
										{
											"key": "Keep-Alive",
											"value": "timeout=60"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										}
									],
									"cookie": [],
									"body": "{\n    \"id\": \"5c1653b2-36d6-47f7-b147-c697c56c3da2\",\n    \"addressResponse\": {\n        \"id\": \"ab1c968e-606f-4660-8642-797581c79efe\",\n        \"houseNumber\": 14,\n        \"street\": \"Lutzstrasse\",\n        \"zipCode\": \"99086\",\n        \"country\": \"ger\",\n        \"city\": \"M√ºnchen\"\n    },\n    \"typeOfLocationResponse\": {\n        \"id\": \"34ff6e1b-7332-4154-91fc-f56904cde1ee\",\n        \"name\": \"Proberaum Gotha\",\n        \"description\": \"Robins Kellergeschoss mit Gesangskabine\"\n    }\n}"
								}
							]
						},
						{
							"name": "deleteLocation",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"console.info(\"Deleted locationId: \"+ pm.variables.get(\"locationId\"))\r",
											"//Statuscode\r",
											"\r",
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "http://localhost:8080/location/{{locationId}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "8080",
									"path": [
										"location",
										"{{locationId}}"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "DeleteEquipmentFromRental",
					"item": [
						{
							"name": "addTypeOfEquipment Copy 2",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"let jsonResponse = pm.response.json();",
											"let typeOfEquipmentId = jsonResponse.id;",
											"pm.environment.set(\"typeOfEquipmentId\", typeOfEquipmentId)",
											"",
											"console.info(\"Created typeOfEquipmentId: \"+ pm.variables.get(\"typeOfEquipmentId\"))",
											"",
											"//Statuscode",
											"",
											"pm.test(\"Status code is 202\", function () {",
											"    pm.response.to.have.status(202);",
											"});",
											"",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"name\" : \"Schlagzeug A\",\n    \"description\" : \"Akustikschlagzeug\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://localhost:8080/typeOfEquipment",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "8080",
									"path": [
										"typeOfEquipment"
									]
								},
								"description": "Bei diesem Request wird ein Equipment-Typ mit folgenden Attributen hinzugef√ºgt:\n\nName, Beschreibung"
							},
							"response": [
								{
									"name": "addTypeOfEquipment",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"name\" : \"Schlagzeug A\",\n    \"description\" : \"Akustikschlagzeug\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "http://localhost:8080/typeOfEquipment",
											"protocol": "http",
											"host": [
												"localhost"
											],
											"port": "8080",
											"path": [
												"typeOfEquipment"
											]
										}
									},
									"status": "Accepted",
									"code": 202,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										},
										{
											"key": "Transfer-Encoding",
											"value": "chunked"
										},
										{
											"key": "Date",
											"value": "Thu, 24 Aug 2023 07:58:08 GMT"
										},
										{
											"key": "Keep-Alive",
											"value": "timeout=60"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										}
									],
									"cookie": [],
									"body": "{\n    \"id\": \"91514269-a0f6-46ad-8f39-0cecbafea77f\",\n    \"name\": \"Highfield Schlagzeug\",\n    \"description\": \"Akustikschlagzeug\"\n}"
								}
							]
						},
						{
							"name": "addAddress Copy 2",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"let jsonResponse = pm.response.json();",
											"let addressId = jsonResponse.id;",
											"pm.environment.set(\"addressId\", addressId)",
											"",
											"console.info(\"Created addressId: \"+ pm.variables.get(\"addressId\"))",
											"",
											"//Statuscode",
											"",
											"pm.test(\"Response status code is 202\", function () {",
											"    pm.response.to.have.status(202);",
											"});",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"street\": \"Lutzstrasse\",\n    \"city\": \"M√ºnchen\",\n    \"houseNumber\": \"14\",\n    \"country\": \"ger\",\n    \"zipCode\": \"99086\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://localhost:8080/addresses",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "8080",
									"path": [
										"addresses"
									]
								},
								"description": "Bei diesem Request wird eine Adresse mit folgenden Attributen hinzugef√ºgt:\n\nStra√üe, Stadt, Hausnummer, Land und Postleitzahl"
							},
							"response": [
								{
									"name": "addAddress",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"street\": \"Heinrichstra√üe\",\n    \"city\": \"M√ºnchen\",\n    \"houseNumber\": \"23\",\n    \"country\": \"ger\",\n    \"zipCode\": \"99086\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "http://localhost:8080/addresses",
											"protocol": "http",
											"host": [
												"localhost"
											],
											"port": "8080",
											"path": [
												"addresses"
											]
										}
									},
									"status": "Accepted",
									"code": 202,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										},
										{
											"key": "Transfer-Encoding",
											"value": "chunked"
										},
										{
											"key": "Date",
											"value": "Thu, 24 Aug 2023 07:55:56 GMT"
										},
										{
											"key": "Keep-Alive",
											"value": "timeout=60"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										}
									],
									"cookie": [],
									"body": "{\n    \"id\": \"4cf97a1f-c14a-46c8-a386-8e5f5c8157f9\",\n    \"houseNumber\": 23,\n    \"street\": \"Heinrichstra√üe\",\n    \"zipCode\": \"99086\",\n    \"country\": \"ger\",\n    \"city\": \"M√ºnchen\"\n}"
								}
							]
						},
						{
							"name": "addTypeOfLocation Copy 3",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"let jsonResponse = pm.response.json();",
											"let typeOfLocationId = jsonResponse.id;",
											"pm.environment.set(\"typeOfLocationId\", typeOfLocationId)",
											"",
											"console.info(\"Created typeOfLocationId: \"+ pm.variables.get(\"typeOfLocationId\"))",
											"",
											"//Statuscode",
											"",
											"pm.test(\"Response status code is 202\", function () {",
											"    pm.response.to.have.status(202);",
											"});",
											"",
											"",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"name\": \"Proberaum Gotha\",\n    \"description\": \"Robins Kellergeschoss mit Gesangskabine\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://localhost:8080/typeOfLocation",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "8080",
									"path": [
										"typeOfLocation"
									]
								},
								"description": "Bei diesem Request wird ein Standort-Typ mit folgenden Attributen hinzugef√ºgt:\n\nName, Beschreibung"
							},
							"response": [
								{
									"name": "addTypeOfLocation",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"name\": \"Proberaum Erfurt\",\n    \"description\": \"Ein Proberaum in Erfurt\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "http://localhost:8080/typeOfLocation",
											"protocol": "http",
											"host": [
												"localhost"
											],
											"port": "8080",
											"path": [
												"typeOfLocation"
											]
										}
									},
									"status": "Accepted",
									"code": 202,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										},
										{
											"key": "Transfer-Encoding",
											"value": "chunked"
										},
										{
											"key": "Date",
											"value": "Thu, 24 Aug 2023 08:01:31 GMT"
										},
										{
											"key": "Keep-Alive",
											"value": "timeout=60"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										}
									],
									"cookie": [],
									"body": "{\n    \"id\": \"5b8f4f19-a05c-42a8-b50c-b43d31b6129e\",\n    \"name\": \"Proberaum Erfurt\",\n    \"description\": \"Ein Proberaum in Erfurt\"\n}"
								}
							]
						},
						{
							"name": "addLocation Copy 2",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"let jsonResponse = pm.response.json();",
											"let locationId = jsonResponse.id;",
											"pm.environment.set(\"locationId\", locationId)",
											"",
											"console.info(\"Created locationId: \"+ pm.variables.get(\"locationId\"))",
											"",
											"//Statuscode",
											"",
											"pm.test(\"Response status code is 202\", function () {",
											"    pm.expect(pm.response.code).to.equal(202);",
											"});",
											"",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"typeOfLocationId\": \"{{typeOfLocationId}}\",\n    \"addressId\": \"{{addressId}}\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://localhost:8080/location",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "8080",
									"path": [
										"location"
									]
								},
								"description": "Bei diesem Request wird ein Standort mit folgenden Attributen hinzugef√ºgt:\n\nStandort-ID, Adress-ID"
							},
							"response": [
								{
									"name": "addLocation",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"typeOfLocationId\": \"{{typeOfLocationId}}\",\n    \"addressId\": \"{{addressId}}\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "http://localhost:8080/location",
											"protocol": "http",
											"host": [
												"localhost"
											],
											"port": "8080",
											"path": [
												"location"
											]
										}
									},
									"status": "Accepted",
									"code": 202,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										},
										{
											"key": "Transfer-Encoding",
											"value": "chunked"
										},
										{
											"key": "Date",
											"value": "Thu, 24 Aug 2023 08:13:23 GMT"
										},
										{
											"key": "Keep-Alive",
											"value": "timeout=60"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										}
									],
									"cookie": [],
									"body": "{\n    \"id\": \"522c4f7d-bb68-46e4-868f-c49bb3466407\",\n    \"addressResponse\": {\n        \"id\": \"4cf97a1f-c14a-46c8-a386-8e5f5c8157f9\",\n        \"houseNumber\": 0,\n        \"street\": \"James Gosling Street\",\n        \"zipCode\": \"99086\",\n        \"country\": \"ger\",\n        \"city\": \"M√ºnchen\"\n    },\n    \"typeOfLocationResponse\": {\n        \"id\": \"69fd8856-3d8c-458d-8e28-a9bfae279c8a\",\n        \"name\": \"Darios Proberaum in Gera\",\n        \"description\": \"Lagerraum und Studio\"\n    }\n}"
								},
								{
									"name": "addLocation",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"typeOfLocationId\": \"{{typeOfLocationId}}\",\n    \"addressId\": \"{{addressId}}\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "http://localhost:8080/location",
											"protocol": "http",
											"host": [
												"localhost"
											],
											"port": "8080",
											"path": [
												"location"
											]
										}
									},
									"status": "Accepted",
									"code": 202,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										},
										{
											"key": "Transfer-Encoding",
											"value": "chunked"
										},
										{
											"key": "Date",
											"value": "Thu, 24 Aug 2023 08:14:50 GMT"
										},
										{
											"key": "Keep-Alive",
											"value": "timeout=60"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										}
									],
									"cookie": [],
									"body": "{\n    \"id\": \"5c1653b2-36d6-47f7-b147-c697c56c3da2\",\n    \"addressResponse\": {\n        \"id\": \"ab1c968e-606f-4660-8642-797581c79efe\",\n        \"houseNumber\": 14,\n        \"street\": \"Lutzstrasse\",\n        \"zipCode\": \"99086\",\n        \"country\": \"ger\",\n        \"city\": \"M√ºnchen\"\n    },\n    \"typeOfLocationResponse\": {\n        \"id\": \"34ff6e1b-7332-4154-91fc-f56904cde1ee\",\n        \"name\": \"Proberaum Gotha\",\n        \"description\": \"Robins Kellergeschoss mit Gesangskabine\"\n    }\n}"
								}
							]
						},
						{
							"name": "addEquipment",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"pm.collectionVariables.set(\"typeOfEquipmentId\", pm.collectionVariables.get(\"typeOfEquipmentId\"));",
											"pm.collectionVariables.set(\"addressId\", pm.collectionVariables.get(\"addressId\"));"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"let jsonResponse = pm.response.json();",
											"let equipmentId = jsonResponse.id;",
											"pm.environment.set(\"equipmentId\", equipmentId)",
											"",
											"",
											"//Statuscode",
											"",
											"pm.test(\"Response status code is 202\", function () {",
											"    pm.expect(pm.response.code).to.equal(202);",
											"});",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"name\": \"Gretch Studio 4\",\n    \"description\": \"Studiofl√∂te aus Echtholz\",\n    \"typeOfEquipmentId\": \"{{typeOfEquipmentId}}\",\n    \"weight\": 120,\n    \"length\": 200,\n    \"width\": 120,\n    \"height\": 100,\n    \"dateOfPurchase\": \"2023-08-14\",\n    \"locationId\": \"{{locationId}}\",\n    \"price\": 2000\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://localhost:8080/equipment",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "8080",
									"path": [
										"equipment"
									]
								},
								"description": "Bei diesem Request wird ein Equipment mit folgenden Attributen hinzugef√ºgt:\n\nName, Beschreibung, Equipment-Typ ID, Gewicht, L√§nge, Breite, H√∂he,, Kaufdatum, Standort-ID und Preis"
							},
							"response": [
								{
									"name": "addEquipment",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"name\": \"Gretch Studio 2\",\n    \"description\": \"Studio Schlagzeug mit 20 Zoll BassDrum\",\n    \"typeOfEquipmentId\": \"{{typeOfEquipmentId}}\",\n    \"weight\": 120,\n    \"length\": 200,\n    \"width\": 120,\n    \"height\": 100,\n    \"dateOfPurchase\": \"2023-08-14\",\n    \"locationId\": \"{{locationId}}\",\n    \"price\": 2000\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "http://localhost:8080/equipment",
											"protocol": "http",
											"host": [
												"localhost"
											],
											"port": "8080",
											"path": [
												"equipment"
											]
										}
									},
									"status": "Accepted",
									"code": 202,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										},
										{
											"key": "Transfer-Encoding",
											"value": "chunked"
										},
										{
											"key": "Date",
											"value": "Thu, 24 Aug 2023 08:22:32 GMT"
										},
										{
											"key": "Keep-Alive",
											"value": "timeout=60"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										}
									],
									"cookie": [],
									"body": "{\n    \"id\": \"81bb09ad-b2ce-4e07-a3d3-94a904c9254d\",\n    \"name\": \"Gretch Studio 2\",\n    \"description\": \"Studio Schlagzeug mit 20 Zoll BassDrum\",\n    \"typeOfEquipmentResponse\": {\n        \"id\": \"ac0be34e-8918-4c7f-9a05-44f042ebe907\",\n        \"name\": \"Highfield Schlagzeug\",\n        \"description\": \"Akustikschlagzeug\"\n    },\n    \"weight\": 120,\n    \"length\": 200,\n    \"width\": 120,\n    \"height\": 100,\n    \"dateOfPurchase\": \"2023-08-14\",\n    \"locationResponse\": {\n        \"id\": \"83fb7692-db8f-4a8d-b8ca-6b24a79daa9f\",\n        \"addressResponse\": {\n            \"id\": \"54ecce82-51f0-4e00-adcc-b94de9cd0e9f\",\n            \"houseNumber\": 14,\n            \"street\": \"Lutzstrasse\",\n            \"zipCode\": \"99086\",\n            \"country\": \"ger\",\n            \"city\": \"M√ºnchen\"\n        },\n        \"typeOfLocationResponse\": {\n            \"id\": \"0001c4b3-e50b-4969-bb07-029e4e122f72\",\n            \"name\": \"Proberaum Gotha\",\n            \"description\": \"Robins Kellergeschoss mit Gesangskabine\"\n        }\n    },\n    \"price\": 2000\n}"
								}
							]
						},
						{
							"name": "addRental Copy",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"// Retrieve the last gig type id from the response\r",
											"var responseBody = pm.response.json();\r",
											"var lastRentalId = responseBody.id;\r",
											"\r",
											"// Set the last gig type id to a global variable\r",
											"pm.globals.set(\"rentalId\", lastRentalId);\r",
											"\r",
											"let jsonResponse = pm.response.json();\r",
											"let rentalId = jsonResponse.id;\r",
											"pm.environment.set(\"rentalId\", rentalId)\r",
											"\r",
											"console.info(\"Created rentalId: \" + pm.variables.get(\"rentalId\"))\r",
											"\r",
											"//Statuscode\r",
											"pm.test(\"Response status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"name\": \"Meine Fl√∂te wird verliehen\",\n    \"startTime\": \"2023-08-21T14:00:00\",\n    \"endTime\": \"2023-08-21T22:30:00\",\n    \"description\": \"Max der Hund will auch mal fl√∂ten\",\n    \"address\": \"{{addressId}}\",\n    \"responsiblePerson\": \"Max der Assi\"\n\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://localhost:8080/rental",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "8080",
									"path": [
										"rental"
									]
								},
								"description": "Bei diesem Request wird ein Rental mit folgenden Attributen hinzugef√ºgt:\n\nName, Startzeit, Endzeit, Beschreibung, Adresse, zust√§ndige Person"
							},
							"response": [
								{
									"name": "addRental",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"name\": \"Meine Fl√∂te wird verliehen\",\n    \"startTime\": \"2023-08-21T14:00:00\",\n    \"endTime\": \"2023-08-21T22:30:00\",\n    \"description\": \"Max der Hund will auch mal fl√∂ten\",\n    \"address\": \"{{addressId}}\",\n    \"responsiblePerson\": \"Max der Assi\"\n\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "http://localhost:8080/rental",
											"protocol": "http",
											"host": [
												"localhost"
											],
											"port": "8080",
											"path": [
												"rental"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										},
										{
											"key": "Transfer-Encoding",
											"value": "chunked"
										},
										{
											"key": "Date",
											"value": "Thu, 24 Aug 2023 08:36:53 GMT"
										},
										{
											"key": "Keep-Alive",
											"value": "timeout=60"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										}
									],
									"cookie": [],
									"body": "{\n    \"id\": \"62628dfd-939a-4600-ad04-15672a262fef\",\n    \"name\": \"Meine Fl√∂te wird verliehen\",\n    \"startTime\": \"2023-08-21T14:00:00\",\n    \"endTime\": \"2023-08-21T22:30:00\",\n    \"description\": \"Max der Hund will auch mal fl√∂ten\",\n    \"address\": {\n        \"id\": \"54ecce82-51f0-4e00-adcc-b94de9cd0e9f\",\n        \"street\": \"Lutzstrasse\",\n        \"city\": \"M√ºnchen\",\n        \"zipCode\": \"99086\",\n        \"country\": \"ger\",\n        \"houseNumber\": 14\n    },\n    \"equipmentList\": null,\n    \"responsiblePerson\": \"Max der Assi\"\n}"
								}
							]
						},
						{
							"name": "addEquipmentToRental Copy",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"//Statuscode\r",
											"\r",
											"pm.test(\"Response status code is 200\", function () {\r",
											"    pm.expect(pm.response.code).to.equal(200);\r",
											"});\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "PUT",
								"header": [],
								"url": {
									"raw": "http://localhost:8080/rental/{{rentalId}}/equipment/{{equipmentId}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "8080",
									"path": [
										"rental",
										"{{rentalId}}",
										"equipment",
										"{{equipmentId}}"
									]
								},
								"description": "Dieser Request f√ºgt ein Equipment einem Rental hinzu"
							},
							"response": []
						},
						{
							"name": "deleteEquipmentFromRental",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"//Statuscode\r",
											"pm.test(\"Response status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "http://localhost:8080/rental/{{rentalId}}/equipment/{{equipmentId}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "8080",
									"path": [
										"rental",
										"{{rentalId}}",
										"equipment",
										"{{equipmentId}}"
									]
								},
								"description": "Dieser Request entfernt ein Equipment aus einem Rental"
							},
							"response": []
						}
					]
				},
				{
					"name": "DeleteGig",
					"item": [
						{
							"name": "addGenre Copy 3",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"let jsonResponse = pm.response.json();",
											"let genreId = jsonResponse.id;",
											"pm.environment.set(\"genreId\", genreId)",
											"",
											"console.info(\"Created genreId: \" + pm.variables.get(\"genreId\"))",
											"",
											"//Statuscode",
											"",
											"pm.test(\"Response status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"name\": \"Jazz\",\n    \"description\": \"chillig\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://localhost:8080/gig/band/genre",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "8080",
									"path": [
										"gig",
										"band",
										"genre"
									]
								},
								"description": "Bei diesem Request wird ein Genre mit folgenden Attributen hinzugef√ºgt:\n\nName, Beschreibung"
							},
							"response": [
								{
									"name": "addGenre",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"name\": \"Jazz\",\n    \"description\": \"chillig\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "http://localhost:8080/gig/band/genre",
											"protocol": "http",
											"host": [
												"localhost"
											],
											"port": "8080",
											"path": [
												"gig",
												"band",
												"genre"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										},
										{
											"key": "Transfer-Encoding",
											"value": "chunked"
										},
										{
											"key": "Date",
											"value": "Thu, 24 Aug 2023 08:27:26 GMT"
										},
										{
											"key": "Keep-Alive",
											"value": "timeout=60"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										}
									],
									"cookie": [],
									"body": "{\n    \"id\": \"33692c2c-6951-4117-b6fd-280c20cfca18\",\n    \"name\": \"Jazz\",\n    \"description\": \"chillig\"\n}"
								}
							]
						},
						{
							"name": "addRoleInTheBand Copy 4",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"let jsonResponse = pm.response.json();",
											"let roleInTheBandId = jsonResponse.id;",
											"pm.environment.set(\"roleInTheBandId\", roleInTheBandId)",
											"",
											"console.info(\"Created roleInTheBandId: \" + pm.variables.get(\"roleInTheBandID\"))",
											"",
											"//Statuscode",
											"",
											"pm.test(\"Response status code is 200\", function () {",
											"    pm.expect(pm.response.code).to.equal(200);",
											"});",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"name\": \"Schlagzeuger\",\n    \"description\": \"bum bum\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://localhost:8080/gig/band/roleintheband",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "8080",
									"path": [
										"gig",
										"band",
										"roleintheband"
									]
								},
								"description": "Bei diesem Request wird eine Bandrolle mit folgenden Attributen hinzugef√ºgt:\n\nName, Beschreibung"
							},
							"response": [
								{
									"name": "addRoleInTheBand",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"name\": \"Schlagzeuger\",\n    \"description\": \"bum bum\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "http://localhost:8080/gig/band/roleintheband",
											"protocol": "http",
											"host": [
												"localhost"
											],
											"port": "8080",
											"path": [
												"gig",
												"band",
												"roleintheband"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										},
										{
											"key": "Transfer-Encoding",
											"value": "chunked"
										},
										{
											"key": "Date",
											"value": "Thu, 24 Aug 2023 08:26:22 GMT"
										},
										{
											"key": "Keep-Alive",
											"value": "timeout=60"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										}
									],
									"cookie": [],
									"body": "{\n    \"id\": \"0baec5ac-51de-4c42-b681-99bbc609888f\",\n    \"name\": \"Schlagzeuger\",\n    \"description\": \"bum bum\"\n}"
								}
							]
						},
						{
							"name": "addBand Copy 2",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"let jsonResponse = pm.response.json();",
											"let bandId = jsonResponse.id;",
											"pm.environment.set(\"bandId\", bandId)",
											"",
											"console.info(\"Created bandId: \" + pm.variables.get(\"bandId\"))",
											"",
											"//Statuscode",
											"",
											"pm.test(\"Response status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"name\": \"beOne\",\n    \"genre\": \"{{genreId}}\",\n    \"mainRoleInTheBand\": \"{{roleInTheBandId}}\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://localhost:8080/gig/band",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "8080",
									"path": [
										"gig",
										"band"
									]
								},
								"description": "Bei diesem Request wird eine Band mit folgenden Attributen hinzugef√ºgt:\n\nName, Genre und die Hauptrolle in der Band"
							},
							"response": [
								{
									"name": "addBand",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"name\": \"beOne\",\n    \"genre\": \"{{genreId}}\",\n    \"mainRoleInTheBand\": \"{{roleInTheBandId}}\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "http://localhost:8080/gig/band",
											"protocol": "http",
											"host": [
												"localhost"
											],
											"port": "8080",
											"path": [
												"gig",
												"band"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										},
										{
											"key": "Transfer-Encoding",
											"value": "chunked"
										},
										{
											"key": "Date",
											"value": "Thu, 24 Aug 2023 09:06:04 GMT"
										},
										{
											"key": "Keep-Alive",
											"value": "timeout=60"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										}
									],
									"cookie": [],
									"body": "{\n    \"id\": \"404df939-4cba-4766-b667-b8de979d89a3\",\n    \"name\": \"beOne\",\n    \"genre\": {\n        \"id\": \"29556479-c65f-437e-a47e-d5ffbb4fd914\",\n        \"name\": \"Jazz\",\n        \"description\": \"Jazz (Aussprache: [dÕ° í…õÀês] Audiodatei abspielen oder [jatÕ°s] Audiodatei abspielen) ist eine ungef√§hr um 1900 in den S√ºdstaaten der USA entstandene, urspr√ºnglich √ºberwiegend von Afroamerikanern hervorgebrachte Musikrichtung, die in vielf√§ltiger Weise weiterentwickelt wurde, h√§ufig im Crossover mit anderen Musiktraditionen und Genres. Mittlerweile werden auch Musikformen zum Jazz gez√§hlt, die oft nur lose oder kaum noch mit der afroamerikanischen Tradition verbunden sind. Der Jazz wird im Hinblick auf seine k√ºnstlerische Bedeutung h√§ufig als amerikanisches Pendant zur klassischen europ√§ischen Musik verstanden. Dar√ºber hinaus hat er nahezu allen anderen Sparten der Musik, von Pop bis Folk, neue M√∂glichkeiten er√∂ffnet, bzw. w√§re das blo√üe Vorhandensein vieler heutiger Genres ohne einen Jazzabschnitt in der Musikhistorie fraglich.\"\n    },\n    \"listOfRole\": [\n        {\n            \"id\": \"8858d233-663f-4517-8d7a-282b28d39789\",\n            \"name\": \"S√§ngerin der Band\",\n            \"description\": \"sing sing\"\n        }\n    ],\n    \"equipmentList\": null\n}"
								}
							]
						},
						{
							"name": "addAddress Copy",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"let jsonResponse = pm.response.json();",
											"let addressId = jsonResponse.id;",
											"pm.environment.set(\"addressId\", addressId)",
											"",
											"console.info(\"Created addressId: \"+ pm.variables.get(\"addressId\"))",
											"",
											"//Statuscode",
											"",
											"pm.test(\"Response status code is 202\", function () {",
											"    pm.response.to.have.status(202);",
											"});",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"street\": \"Lutzstrasse\",\n    \"city\": \"M√ºnchen\",\n    \"houseNumber\": \"14\",\n    \"country\": \"ger\",\n    \"zipCode\": \"99086\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://localhost:8080/addresses",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "8080",
									"path": [
										"addresses"
									]
								},
								"description": "Bei diesem Request wird eine Adresse mit folgenden Attributen hinzugef√ºgt:\n\nStra√üe, Stadt, Hausnummer, Land und Postleitzahl"
							},
							"response": [
								{
									"name": "addAddress",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"street\": \"Heinrichstra√üe\",\n    \"city\": \"M√ºnchen\",\n    \"houseNumber\": \"23\",\n    \"country\": \"ger\",\n    \"zipCode\": \"99086\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "http://localhost:8080/addresses",
											"protocol": "http",
											"host": [
												"localhost"
											],
											"port": "8080",
											"path": [
												"addresses"
											]
										}
									},
									"status": "Accepted",
									"code": 202,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										},
										{
											"key": "Transfer-Encoding",
											"value": "chunked"
										},
										{
											"key": "Date",
											"value": "Thu, 24 Aug 2023 07:55:56 GMT"
										},
										{
											"key": "Keep-Alive",
											"value": "timeout=60"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										}
									],
									"cookie": [],
									"body": "{\n    \"id\": \"4cf97a1f-c14a-46c8-a386-8e5f5c8157f9\",\n    \"houseNumber\": 23,\n    \"street\": \"Heinrichstra√üe\",\n    \"zipCode\": \"99086\",\n    \"country\": \"ger\",\n    \"city\": \"M√ºnchen\"\n}"
								}
							]
						},
						{
							"name": "addTypeOfGig Copy 2",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"let jsonResponse = pm.response.json();",
											"let typeOfGigId = jsonResponse.id;",
											"pm.environment.set(\"typeOfGigId\", typeOfGigId)",
											"",
											"console.info(\"Created typeOfGigId: \" + pm.variables.get(\"typeOfGigId\"))",
											"",
											"// Test to check if the response has an id property",
											"pm.test(\"Response has id property\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData).to.have.property(\"id\");",
											"});",
											"",
											"",
											"// Statuscode",
											"",
											"pm.test(\"Response status is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"",
											"",
											"",
											"",
											"",
											"",
											"",
											"",
											"",
											"",
											"",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"name\": \"Festival\",\n    \"description\": \"Live immer am besten und dann auch noch mehere Tage geil\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://localhost:8080/gig/typeofgig",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "8080",
									"path": [
										"gig",
										"typeofgig"
									]
								},
								"description": "Bei diesem Request wird ein Gig-Typ mit folgenden Attributen hinzugef√ºgt:\n\nName, Beschreibung"
							},
							"response": [
								{
									"name": "addTypeOfGig",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"name\": \"Festival\",\n    \"description\": \"Live immer am besten und dann auch noch mehere Tage geil\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "http://localhost:8080/gig/typeofgig",
											"protocol": "http",
											"host": [
												"localhost"
											],
											"port": "8080",
											"path": [
												"gig",
												"typeofgig"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										},
										{
											"key": "Transfer-Encoding",
											"value": "chunked"
										},
										{
											"key": "Date",
											"value": "Thu, 24 Aug 2023 08:33:26 GMT"
										},
										{
											"key": "Keep-Alive",
											"value": "timeout=60"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										}
									],
									"cookie": [],
									"body": "{\n    \"id\": \"fa57d454-e6ca-4aa4-bf6e-26d681fd8887\",\n    \"name\": \"Festival\",\n    \"description\": \"Live immer am besten und dann auch noch mehere Tage geil\"\n}"
								}
							]
						},
						{
							"name": "addGig Copy",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"let jsonResponse = pm.response.json();\r",
											"let gigId = jsonResponse.id;\r",
											"pm.environment.set(\"gigId\", gigId)\r",
											"\r",
											"console.info(\"Created gigId: \" + pm.variables.get(\"gigId\"))\r",
											"\r",
											"\r",
											"//Statuscode\r",
											"\r",
											"pm.test(\"Response status code is 200\", function () {\r",
											"    pm.expect(pm.response.code).to.equal(200);\r",
											"});\r",
											"\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"name\": \"Birgit\",\n    \"startTime\": \"2023-08-22T14:00:00\",\n    \"endTime\": \"2023-08-25T22:30:00\",\n    \"description\": \"Das Festival f√ºr Nerds!\",\n    \"address\": \"{{addressId}}\",\n    \"typeOfGig\": \"{{typeOfGigId}}\",\n    \"band\": \"{{bandId}}\"\n\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://localhost:8080/gig",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "8080",
									"path": [
										"gig"
									]
								},
								"description": "Bei diesem Request wird ein Gig mit folgenden Attributen hinzugef√ºgt:\n\nName, Startzeit, Endzeit, Beschreibung, Adresse, Gig-Typ und Band"
							},
							"response": [
								{
									"name": "addGig",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"name\": \"Birgit\",\n    \"startTime\": \"2023-08-21T14:00:00\",\n    \"endTime\": \"2023-08-21T22:30:00\",\n    \"description\": \"Das Festival f√ºr Nerds!\",\n    \"address\": \"{{addressId}}\",\n    \"typeOfGig\": \"{{typeOfGigId}}\",\n    \"band\": \"{{bandId}}\"\n\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "http://localhost:8080/gig",
											"protocol": "http",
											"host": [
												"localhost"
											],
											"port": "8080",
											"path": [
												"gig"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										},
										{
											"key": "Transfer-Encoding",
											"value": "chunked"
										},
										{
											"key": "Date",
											"value": "Thu, 24 Aug 2023 08:36:07 GMT"
										},
										{
											"key": "Keep-Alive",
											"value": "timeout=60"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										}
									],
									"cookie": [],
									"body": "{\n    \"id\": \"a7a0c918-cf12-4a7d-8a31-59d978ca2d01\",\n    \"name\": \"Birgit\",\n    \"startTime\": \"2023-08-21T14:00:00\",\n    \"endTime\": \"2023-08-21T22:30:00\",\n    \"description\": \"Das Festival f√ºr Nerds!\",\n    \"address\": {\n        \"id\": \"54ecce82-51f0-4e00-adcc-b94de9cd0e9f\",\n        \"street\": \"Lutzstrasse\",\n        \"city\": \"M√ºnchen\",\n        \"zipCode\": \"99086\",\n        \"country\": \"ger\",\n        \"houseNumber\": 14\n    },\n    \"equipmentList\": null,\n    \"typeOfGig\": {\n        \"id\": \"8a3f490f-1ac0-40e8-977f-7c5bd5d7c4a5\",\n        \"name\": \"KONZERTE\",\n        \"description\": \"Die sind auch ein Genuss.\"\n    },\n    \"band\": {\n        \"id\": \"14071727-fe34-420e-add5-f2972a7764ce\",\n        \"name\": \"beOne\",\n        \"genre\": {\n            \"id\": \"91e88597-fe2f-4054-973d-e1d8fe29f06f\",\n            \"name\": \"Pop\",\n            \"description\": \"chillig\"\n        },\n        \"listOfRole\": [\n            {\n                \"id\": \"0baec5ac-51de-4c42-b681-99bbc609888f\",\n                \"name\": \"S√§ngerin der Band\",\n                \"description\": \"bum bum\"\n            }\n        ],\n        \"equipmentList\": [\n            {\n                \"id\": \"81bb09ad-b2ce-4e07-a3d3-94a904c9254d\",\n                \"name\": \"neuer Name\",\n                \"description\": \"Studio Schlagzeug mit 20 Zoll BassDrum\",\n                \"typeOfEquipment\": {\n                    \"id\": \"ac0be34e-8918-4c7f-9a05-44f042ebe907\",\n                    \"name\": \"Highfield Schlagzeug\",\n                    \"description\": \"Akustikschlagzeug\"\n                },\n                \"weight\": 120,\n                \"length\": 200,\n                \"width\": 120,\n                \"height\": 100,\n                \"dateOfPurchase\": \"2023-08-14\",\n                \"location\": {\n                    \"id\": \"83fb7692-db8f-4a8d-b8ca-6b24a79daa9f\",\n                    \"address\": {\n                        \"id\": \"54ecce82-51f0-4e00-adcc-b94de9cd0e9f\",\n                        \"street\": \"Lutzstrasse\",\n                        \"city\": \"M√ºnchen\",\n                        \"zipCode\": \"99086\",\n                        \"country\": \"ger\",\n                        \"houseNumber\": 14\n                    },\n                    \"typeOfLocation\": {\n                        \"id\": \"0001c4b3-e50b-4969-bb07-029e4e122f72\",\n                        \"name\": \"Proberaum Gotha\",\n                        \"description\": \"Robins Kellergeschoss mit Gesangskabine\"\n                    }\n                },\n                \"price\": 2000,\n                \"cuboidVolume\": 2400000\n            }\n        ]\n    }\n}"
								}
							]
						},
						{
							"name": "deleteGig",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"//Statuscode\r",
											"\r",
											"pm.test(\"Response status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "http://localhost:8080/gig/{{gigId}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "8080",
									"path": [
										"gig",
										"{{gigId}}"
									]
								},
								"description": "Bei diesem Request wird ein vorhandener Gig aus dem System gel√∂scht"
							},
							"response": []
						}
					]
				},
				{
					"name": "DeleteTypeOfLocation",
					"item": [
						{
							"name": "addTypeOfLocation Copy",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"let jsonResponse = pm.response.json();",
											"let typeOfLocationId = jsonResponse.id;",
											"pm.environment.set(\"typeOfLocationId\", typeOfLocationId)",
											"",
											"console.info(\"Created typeOfLocationId: \"+ pm.variables.get(\"typeOfLocationId\"))",
											"",
											"//Statuscode",
											"",
											"pm.test(\"Response status code is 202\", function () {",
											"    pm.response.to.have.status(202);",
											"});",
											"",
											"",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"name\": \"Proberaum Gotha\",\n    \"description\": \"Robins Kellergeschoss mit Gesangskabine\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://localhost:8080/typeOfLocation",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "8080",
									"path": [
										"typeOfLocation"
									]
								},
								"description": "Bei diesem Request wird ein Standort-Typ mit folgenden Attributen hinzugef√ºgt:\n\nName, Beschreibung"
							},
							"response": [
								{
									"name": "addTypeOfLocation",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"name\": \"Proberaum Erfurt\",\n    \"description\": \"Ein Proberaum in Erfurt\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "http://localhost:8080/typeOfLocation",
											"protocol": "http",
											"host": [
												"localhost"
											],
											"port": "8080",
											"path": [
												"typeOfLocation"
											]
										}
									},
									"status": "Accepted",
									"code": 202,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										},
										{
											"key": "Transfer-Encoding",
											"value": "chunked"
										},
										{
											"key": "Date",
											"value": "Thu, 24 Aug 2023 08:01:31 GMT"
										},
										{
											"key": "Keep-Alive",
											"value": "timeout=60"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										}
									],
									"cookie": [],
									"body": "{\n    \"id\": \"5b8f4f19-a05c-42a8-b50c-b43d31b6129e\",\n    \"name\": \"Proberaum Erfurt\",\n    \"description\": \"Ein Proberaum in Erfurt\"\n}"
								}
							]
						},
						{
							"name": "deleteTypeOfLocation",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"console.info(\"Deleted typeOfLocationId: \"+ pm.variables.get(\"typeOfLocationId\"))\r",
											"//Statuscode\r",
											"\r",
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "http://localhost:8080/typeOfLocation/{{typeOfLocationId}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "8080",
									"path": [
										"typeOfLocation",
										"{{typeOfLocationId}}"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "DeleteRental",
					"item": [
						{
							"name": "addAddress Copy 2",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"let jsonResponse = pm.response.json();",
											"let addressId = jsonResponse.id;",
											"pm.environment.set(\"addressId\", addressId)",
											"",
											"console.info(\"Created addressId: \"+ pm.variables.get(\"addressId\"))",
											"",
											"//Statuscode",
											"",
											"pm.test(\"Response status code is 202\", function () {",
											"    pm.response.to.have.status(202);",
											"});",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"street\": \"Lutzstrasse\",\n    \"city\": \"M√ºnchen\",\n    \"houseNumber\": \"14\",\n    \"country\": \"ger\",\n    \"zipCode\": \"99086\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://localhost:8080/addresses",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "8080",
									"path": [
										"addresses"
									]
								},
								"description": "Bei diesem Request wird eine Adresse mit folgenden Attributen hinzugef√ºgt:\n\nStra√üe, Stadt, Hausnummer, Land und Postleitzahl"
							},
							"response": [
								{
									"name": "addAddress",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"street\": \"Heinrichstra√üe\",\n    \"city\": \"M√ºnchen\",\n    \"houseNumber\": \"23\",\n    \"country\": \"ger\",\n    \"zipCode\": \"99086\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "http://localhost:8080/addresses",
											"protocol": "http",
											"host": [
												"localhost"
											],
											"port": "8080",
											"path": [
												"addresses"
											]
										}
									},
									"status": "Accepted",
									"code": 202,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										},
										{
											"key": "Transfer-Encoding",
											"value": "chunked"
										},
										{
											"key": "Date",
											"value": "Thu, 24 Aug 2023 07:55:56 GMT"
										},
										{
											"key": "Keep-Alive",
											"value": "timeout=60"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										}
									],
									"cookie": [],
									"body": "{\n    \"id\": \"4cf97a1f-c14a-46c8-a386-8e5f5c8157f9\",\n    \"houseNumber\": 23,\n    \"street\": \"Heinrichstra√üe\",\n    \"zipCode\": \"99086\",\n    \"country\": \"ger\",\n    \"city\": \"M√ºnchen\"\n}"
								}
							]
						},
						{
							"name": "addRental Copy 2",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"// Retrieve the last gig type id from the response\r",
											"var responseBody = pm.response.json();\r",
											"var lastRentalId = responseBody.id;\r",
											"\r",
											"// Set the last gig type id to a global variable\r",
											"pm.globals.set(\"rentalId\", lastRentalId);\r",
											"\r",
											"let jsonResponse = pm.response.json();\r",
											"let rentalId = jsonResponse.id;\r",
											"pm.environment.set(\"rentalId\", rentalId)\r",
											"\r",
											"console.info(\"Created rentalId: \" + pm.variables.get(\"rentalId\"))"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"name\": \"Meine Fl√∂te wird verliehen\",\n    \"startTime\": \"2023-08-21T14:00:00\",\n    \"endTime\": \"2023-08-21T22:30:00\",\n    \"description\": \"Max der Hund will auch mal fl√∂ten\",\n    \"address\": \"{{addressId}}\",\n    \"responsiblePerson\": \"Max der Assi\"\n\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://localhost:8080/rental",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "8080",
									"path": [
										"rental"
									]
								},
								"description": "Bei diesem Request wird ein Rental mit folgenden Attributen hinzugef√ºgt:\n\nName, Startzeit, Endzeit, Beschreibung, Adresse, zust√§ndige Person"
							},
							"response": [
								{
									"name": "addRental",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"name\": \"Meine Fl√∂te wird verliehen\",\n    \"startTime\": \"2023-08-21T14:00:00\",\n    \"endTime\": \"2023-08-21T22:30:00\",\n    \"description\": \"Max der Hund will auch mal fl√∂ten\",\n    \"address\": \"{{addressId}}\",\n    \"responsiblePerson\": \"Max der Assi\"\n\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "http://localhost:8080/rental",
											"protocol": "http",
											"host": [
												"localhost"
											],
											"port": "8080",
											"path": [
												"rental"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										},
										{
											"key": "Transfer-Encoding",
											"value": "chunked"
										},
										{
											"key": "Date",
											"value": "Thu, 24 Aug 2023 08:36:53 GMT"
										},
										{
											"key": "Keep-Alive",
											"value": "timeout=60"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										}
									],
									"cookie": [],
									"body": "{\n    \"id\": \"62628dfd-939a-4600-ad04-15672a262fef\",\n    \"name\": \"Meine Fl√∂te wird verliehen\",\n    \"startTime\": \"2023-08-21T14:00:00\",\n    \"endTime\": \"2023-08-21T22:30:00\",\n    \"description\": \"Max der Hund will auch mal fl√∂ten\",\n    \"address\": {\n        \"id\": \"54ecce82-51f0-4e00-adcc-b94de9cd0e9f\",\n        \"street\": \"Lutzstrasse\",\n        \"city\": \"M√ºnchen\",\n        \"zipCode\": \"99086\",\n        \"country\": \"ger\",\n        \"houseNumber\": 14\n    },\n    \"equipmentList\": null,\n    \"responsiblePerson\": \"Max der Assi\"\n}"
								}
							]
						},
						{
							"name": "deleteRental",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"//Statuscode\r",
											"\r",
											"pm.test(\"Response status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "http://localhost:8080/rental/{{rentalId}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "8080",
									"path": [
										"rental",
										"{{rentalId}}"
									]
								},
								"description": "Bei diesem Request wird ein vorhandener Gig aus dem System gel√∂scht"
							},
							"response": []
						}
					]
				},
				{
					"name": "DeleteEquipmentFromBand",
					"item": [
						{
							"name": "addAddress Copy 4",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"let jsonResponse = pm.response.json();",
											"let addressId = jsonResponse.id;",
											"pm.environment.set(\"addressId\", addressId)",
											"",
											"console.info(\"Created addressId: \"+ pm.variables.get(\"addressId\"))",
											"",
											"//Statuscode",
											"",
											"pm.test(\"Response status code is 202\", function () {",
											"    pm.response.to.have.status(202);",
											"});",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"street\": \"Lutzstrasse\",\n    \"city\": \"M√ºnchen\",\n    \"houseNumber\": \"14\",\n    \"country\": \"ger\",\n    \"zipCode\": \"99086\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://localhost:8080/addresses",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "8080",
									"path": [
										"addresses"
									]
								},
								"description": "Bei diesem Request wird eine Adresse mit folgenden Attributen hinzugef√ºgt:\n\nStra√üe, Stadt, Hausnummer, Land und Postleitzahl"
							},
							"response": [
								{
									"name": "addAddress",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"street\": \"Heinrichstra√üe\",\n    \"city\": \"M√ºnchen\",\n    \"houseNumber\": \"23\",\n    \"country\": \"ger\",\n    \"zipCode\": \"99086\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "http://localhost:8080/addresses",
											"protocol": "http",
											"host": [
												"localhost"
											],
											"port": "8080",
											"path": [
												"addresses"
											]
										}
									},
									"status": "Accepted",
									"code": 202,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										},
										{
											"key": "Transfer-Encoding",
											"value": "chunked"
										},
										{
											"key": "Date",
											"value": "Thu, 24 Aug 2023 07:55:56 GMT"
										},
										{
											"key": "Keep-Alive",
											"value": "timeout=60"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										}
									],
									"cookie": [],
									"body": "{\n    \"id\": \"4cf97a1f-c14a-46c8-a386-8e5f5c8157f9\",\n    \"houseNumber\": 23,\n    \"street\": \"Heinrichstra√üe\",\n    \"zipCode\": \"99086\",\n    \"country\": \"ger\",\n    \"city\": \"M√ºnchen\"\n}"
								}
							]
						},
						{
							"name": "addTypeOfLocation Copy 4",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"let jsonResponse = pm.response.json();",
											"let typeOfLocationId = jsonResponse.id;",
											"pm.environment.set(\"typeOfLocationId\", typeOfLocationId)",
											"",
											"console.info(\"Created typeOfLocationId: \"+ pm.variables.get(\"typeOfLocationId\"))",
											"",
											"//Statuscode",
											"",
											"pm.test(\"Response status code is 202\", function () {",
											"    pm.response.to.have.status(202);",
											"});",
											"",
											"",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"name\": \"Proberaum Gotha\",\n    \"description\": \"Robins Kellergeschoss mit Gesangskabine\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://localhost:8080/typeOfLocation",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "8080",
									"path": [
										"typeOfLocation"
									]
								},
								"description": "Bei diesem Request wird ein Standort-Typ mit folgenden Attributen hinzugef√ºgt:\n\nName, Beschreibung"
							},
							"response": [
								{
									"name": "addTypeOfLocation",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"name\": \"Proberaum Erfurt\",\n    \"description\": \"Ein Proberaum in Erfurt\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "http://localhost:8080/typeOfLocation",
											"protocol": "http",
											"host": [
												"localhost"
											],
											"port": "8080",
											"path": [
												"typeOfLocation"
											]
										}
									},
									"status": "Accepted",
									"code": 202,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										},
										{
											"key": "Transfer-Encoding",
											"value": "chunked"
										},
										{
											"key": "Date",
											"value": "Thu, 24 Aug 2023 08:01:31 GMT"
										},
										{
											"key": "Keep-Alive",
											"value": "timeout=60"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										}
									],
									"cookie": [],
									"body": "{\n    \"id\": \"5b8f4f19-a05c-42a8-b50c-b43d31b6129e\",\n    \"name\": \"Proberaum Erfurt\",\n    \"description\": \"Ein Proberaum in Erfurt\"\n}"
								}
							]
						},
						{
							"name": "addLocation Copy 3",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"let jsonResponse = pm.response.json();",
											"let locationId = jsonResponse.id;",
											"pm.environment.set(\"locationId\", locationId)",
											"",
											"console.info(\"Created locationId: \"+ pm.variables.get(\"locationId\"))",
											"",
											"//Statuscode",
											"",
											"pm.test(\"Response status code is 202\", function () {",
											"    pm.expect(pm.response.code).to.equal(202);",
											"});",
											"",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"typeOfLocationId\": \"{{typeOfLocationId}}\",\n    \"addressId\": \"{{addressId}}\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://localhost:8080/location",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "8080",
									"path": [
										"location"
									]
								},
								"description": "Bei diesem Request wird ein Standort mit folgenden Attributen hinzugef√ºgt:\n\nStandort-ID, Adress-ID"
							},
							"response": [
								{
									"name": "addLocation",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"typeOfLocationId\": \"{{typeOfLocationId}}\",\n    \"addressId\": \"{{addressId}}\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "http://localhost:8080/location",
											"protocol": "http",
											"host": [
												"localhost"
											],
											"port": "8080",
											"path": [
												"location"
											]
										}
									},
									"status": "Accepted",
									"code": 202,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										},
										{
											"key": "Transfer-Encoding",
											"value": "chunked"
										},
										{
											"key": "Date",
											"value": "Thu, 24 Aug 2023 08:13:23 GMT"
										},
										{
											"key": "Keep-Alive",
											"value": "timeout=60"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										}
									],
									"cookie": [],
									"body": "{\n    \"id\": \"522c4f7d-bb68-46e4-868f-c49bb3466407\",\n    \"addressResponse\": {\n        \"id\": \"4cf97a1f-c14a-46c8-a386-8e5f5c8157f9\",\n        \"houseNumber\": 0,\n        \"street\": \"James Gosling Street\",\n        \"zipCode\": \"99086\",\n        \"country\": \"ger\",\n        \"city\": \"M√ºnchen\"\n    },\n    \"typeOfLocationResponse\": {\n        \"id\": \"69fd8856-3d8c-458d-8e28-a9bfae279c8a\",\n        \"name\": \"Darios Proberaum in Gera\",\n        \"description\": \"Lagerraum und Studio\"\n    }\n}"
								},
								{
									"name": "addLocation",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"typeOfLocationId\": \"{{typeOfLocationId}}\",\n    \"addressId\": \"{{addressId}}\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "http://localhost:8080/location",
											"protocol": "http",
											"host": [
												"localhost"
											],
											"port": "8080",
											"path": [
												"location"
											]
										}
									},
									"status": "Accepted",
									"code": 202,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										},
										{
											"key": "Transfer-Encoding",
											"value": "chunked"
										},
										{
											"key": "Date",
											"value": "Thu, 24 Aug 2023 08:14:50 GMT"
										},
										{
											"key": "Keep-Alive",
											"value": "timeout=60"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										}
									],
									"cookie": [],
									"body": "{\n    \"id\": \"5c1653b2-36d6-47f7-b147-c697c56c3da2\",\n    \"addressResponse\": {\n        \"id\": \"ab1c968e-606f-4660-8642-797581c79efe\",\n        \"houseNumber\": 14,\n        \"street\": \"Lutzstrasse\",\n        \"zipCode\": \"99086\",\n        \"country\": \"ger\",\n        \"city\": \"M√ºnchen\"\n    },\n    \"typeOfLocationResponse\": {\n        \"id\": \"34ff6e1b-7332-4154-91fc-f56904cde1ee\",\n        \"name\": \"Proberaum Gotha\",\n        \"description\": \"Robins Kellergeschoss mit Gesangskabine\"\n    }\n}"
								}
							]
						},
						{
							"name": "addTypeOfEquipment Copy 2",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"let jsonResponse = pm.response.json();",
											"let typeOfEquipmentId = jsonResponse.id;",
											"pm.environment.set(\"typeOfEquipmentId\", typeOfEquipmentId)",
											"",
											"console.info(\"Created typeOfEquipmentId: \"+ pm.variables.get(\"typeOfEquipmentId\"))",
											"",
											"//Statuscode",
											"",
											"pm.test(\"Status code is 202\", function () {",
											"    pm.response.to.have.status(202);",
											"});",
											"",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"name\" : \"Schlagzeug A\",\n    \"description\" : \"Akustikschlagzeug\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://localhost:8080/typeOfEquipment",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "8080",
									"path": [
										"typeOfEquipment"
									]
								},
								"description": "Bei diesem Request wird ein Equipment-Typ mit folgenden Attributen hinzugef√ºgt:\n\nName, Beschreibung"
							},
							"response": [
								{
									"name": "addTypeOfEquipment",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"name\" : \"Schlagzeug A\",\n    \"description\" : \"Akustikschlagzeug\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "http://localhost:8080/typeOfEquipment",
											"protocol": "http",
											"host": [
												"localhost"
											],
											"port": "8080",
											"path": [
												"typeOfEquipment"
											]
										}
									},
									"status": "Accepted",
									"code": 202,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										},
										{
											"key": "Transfer-Encoding",
											"value": "chunked"
										},
										{
											"key": "Date",
											"value": "Thu, 24 Aug 2023 07:58:08 GMT"
										},
										{
											"key": "Keep-Alive",
											"value": "timeout=60"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										}
									],
									"cookie": [],
									"body": "{\n    \"id\": \"91514269-a0f6-46ad-8f39-0cecbafea77f\",\n    \"name\": \"Highfield Schlagzeug\",\n    \"description\": \"Akustikschlagzeug\"\n}"
								}
							]
						},
						{
							"name": "addEquipment Copy",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"pm.collectionVariables.set(\"typeOfEquipmentId\", pm.collectionVariables.get(\"typeOfEquipmentId\"));",
											"pm.collectionVariables.set(\"addressId\", pm.collectionVariables.get(\"addressId\"));"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"let jsonResponse = pm.response.json();",
											"let equipmentId = jsonResponse.id;",
											"pm.environment.set(\"equipmentId\", equipmentId)",
											"",
											"console.info(\"Created equipmentId: \" + pm.variables.get(\"equipmentId\"))",
											"",
											"//Statuscode",
											"",
											"pm.test(\"Response status code is 202\", function () {",
											"    pm.expect(pm.response.code).to.equal(202);",
											"});",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"name\": \"Gretch Studio 2\",\n    \"description\": \"Studio Schlagzeug mit 20 Zoll BassDrum\",\n    \"typeOfEquipmentId\": \"{{typeOfEquipmentId}}\",\n    \"weight\": 120,\n    \"length\": 200,\n    \"width\": 120,\n    \"height\": 100,\n    \"dateOfPurchase\": \"2023-08-14\",\n    \"locationId\": \"{{locationId}}\",\n    \"price\": 2000\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://localhost:8080/equipment",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "8080",
									"path": [
										"equipment"
									]
								},
								"description": "Bei diesem Request wird ein Equipment mit folgenden Attributen hinzugef√ºgt:\n\nName, Beschreibung, Equipment-Typ ID, Gewicht, L√§nge, Breite, H√∂he,, Kaufdatum, Standort-ID und Preis"
							},
							"response": [
								{
									"name": "addEquipment",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"name\": \"Gretch Studio 2\",\n    \"description\": \"Studio Schlagzeug mit 20 Zoll BassDrum\",\n    \"typeOfEquipmentId\": \"{{typeOfEquipmentId}}\",\n    \"weight\": 120,\n    \"length\": 200,\n    \"width\": 120,\n    \"height\": 100,\n    \"dateOfPurchase\": \"2023-08-14\",\n    \"locationId\": \"{{locationId}}\",\n    \"price\": 2000\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "http://localhost:8080/equipment",
											"protocol": "http",
											"host": [
												"localhost"
											],
											"port": "8080",
											"path": [
												"equipment"
											]
										}
									},
									"status": "Accepted",
									"code": 202,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										},
										{
											"key": "Transfer-Encoding",
											"value": "chunked"
										},
										{
											"key": "Date",
											"value": "Thu, 24 Aug 2023 08:22:32 GMT"
										},
										{
											"key": "Keep-Alive",
											"value": "timeout=60"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										}
									],
									"cookie": [],
									"body": "{\n    \"id\": \"81bb09ad-b2ce-4e07-a3d3-94a904c9254d\",\n    \"name\": \"Gretch Studio 2\",\n    \"description\": \"Studio Schlagzeug mit 20 Zoll BassDrum\",\n    \"typeOfEquipmentResponse\": {\n        \"id\": \"ac0be34e-8918-4c7f-9a05-44f042ebe907\",\n        \"name\": \"Highfield Schlagzeug\",\n        \"description\": \"Akustikschlagzeug\"\n    },\n    \"weight\": 120,\n    \"length\": 200,\n    \"width\": 120,\n    \"height\": 100,\n    \"dateOfPurchase\": \"2023-08-14\",\n    \"locationResponse\": {\n        \"id\": \"83fb7692-db8f-4a8d-b8ca-6b24a79daa9f\",\n        \"addressResponse\": {\n            \"id\": \"54ecce82-51f0-4e00-adcc-b94de9cd0e9f\",\n            \"houseNumber\": 14,\n            \"street\": \"Lutzstrasse\",\n            \"zipCode\": \"99086\",\n            \"country\": \"ger\",\n            \"city\": \"M√ºnchen\"\n        },\n        \"typeOfLocationResponse\": {\n            \"id\": \"0001c4b3-e50b-4969-bb07-029e4e122f72\",\n            \"name\": \"Proberaum Gotha\",\n            \"description\": \"Robins Kellergeschoss mit Gesangskabine\"\n        }\n    },\n    \"price\": 2000\n}"
								}
							]
						},
						{
							"name": "addBand Copy 2",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"let jsonResponse = pm.response.json();",
											"let bandId = jsonResponse.id;",
											"pm.environment.set(\"bandId\", bandId)",
											"",
											"console.info(\"Created bandId: \" + pm.variables.get(\"bandId\"))",
											"",
											"//Statuscode",
											"",
											"pm.test(\"Response status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"name\": \"beOne\",\n    \"genre\": \"{{genreId}}\",\n    \"mainRoleInTheBand\": \"{{roleInTheBandId}}\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://localhost:8080/gig/band",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "8080",
									"path": [
										"gig",
										"band"
									]
								},
								"description": "Bei diesem Request wird eine Band mit folgenden Attributen hinzugef√ºgt:\n\nName, Genre und die Hauptrolle in der Band"
							},
							"response": [
								{
									"name": "addBand",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"name\": \"beOne\",\n    \"genre\": \"{{genreId}}\",\n    \"mainRoleInTheBand\": \"{{roleInTheBandId}}\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "http://localhost:8080/gig/band",
											"protocol": "http",
											"host": [
												"localhost"
											],
											"port": "8080",
											"path": [
												"gig",
												"band"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										},
										{
											"key": "Transfer-Encoding",
											"value": "chunked"
										},
										{
											"key": "Date",
											"value": "Thu, 24 Aug 2023 09:06:04 GMT"
										},
										{
											"key": "Keep-Alive",
											"value": "timeout=60"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										}
									],
									"cookie": [],
									"body": "{\n    \"id\": \"404df939-4cba-4766-b667-b8de979d89a3\",\n    \"name\": \"beOne\",\n    \"genre\": {\n        \"id\": \"29556479-c65f-437e-a47e-d5ffbb4fd914\",\n        \"name\": \"Jazz\",\n        \"description\": \"Jazz (Aussprache: [dÕ° í…õÀês] Audiodatei abspielen oder [jatÕ°s] Audiodatei abspielen) ist eine ungef√§hr um 1900 in den S√ºdstaaten der USA entstandene, urspr√ºnglich √ºberwiegend von Afroamerikanern hervorgebrachte Musikrichtung, die in vielf√§ltiger Weise weiterentwickelt wurde, h√§ufig im Crossover mit anderen Musiktraditionen und Genres. Mittlerweile werden auch Musikformen zum Jazz gez√§hlt, die oft nur lose oder kaum noch mit der afroamerikanischen Tradition verbunden sind. Der Jazz wird im Hinblick auf seine k√ºnstlerische Bedeutung h√§ufig als amerikanisches Pendant zur klassischen europ√§ischen Musik verstanden. Dar√ºber hinaus hat er nahezu allen anderen Sparten der Musik, von Pop bis Folk, neue M√∂glichkeiten er√∂ffnet, bzw. w√§re das blo√üe Vorhandensein vieler heutiger Genres ohne einen Jazzabschnitt in der Musikhistorie fraglich.\"\n    },\n    \"listOfRole\": [\n        {\n            \"id\": \"8858d233-663f-4517-8d7a-282b28d39789\",\n            \"name\": \"S√§ngerin der Band\",\n            \"description\": \"sing sing\"\n        }\n    ],\n    \"equipmentList\": null\n}"
								}
							]
						},
						{
							"name": "addGenre Copy 2",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"let jsonResponse = pm.response.json();",
											"let genreId = jsonResponse.id;",
											"pm.environment.set(\"genreId\", genreId)",
											"",
											"console.info(\"Created genreId: \" + pm.variables.get(\"genreId\"))",
											"",
											"//Statuscode",
											"",
											"pm.test(\"Response status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"name\": \"Jazz\",\n    \"description\": \"chillig\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://localhost:8080/gig/band/genre",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "8080",
									"path": [
										"gig",
										"band",
										"genre"
									]
								},
								"description": "Bei diesem Request wird ein Genre mit folgenden Attributen hinzugef√ºgt:\n\nName, Beschreibung"
							},
							"response": [
								{
									"name": "addGenre",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"name\": \"Jazz\",\n    \"description\": \"chillig\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "http://localhost:8080/gig/band/genre",
											"protocol": "http",
											"host": [
												"localhost"
											],
											"port": "8080",
											"path": [
												"gig",
												"band",
												"genre"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										},
										{
											"key": "Transfer-Encoding",
											"value": "chunked"
										},
										{
											"key": "Date",
											"value": "Thu, 24 Aug 2023 08:27:26 GMT"
										},
										{
											"key": "Keep-Alive",
											"value": "timeout=60"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										}
									],
									"cookie": [],
									"body": "{\n    \"id\": \"33692c2c-6951-4117-b6fd-280c20cfca18\",\n    \"name\": \"Jazz\",\n    \"description\": \"chillig\"\n}"
								}
							]
						},
						{
							"name": "addRoleInTheBand Copy 3",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"let jsonResponse = pm.response.json();",
											"let roleInTheBandId = jsonResponse.id;",
											"pm.environment.set(\"roleInTheBandId\", roleInTheBandId)",
											"",
											"console.info(\"Created roleInTheBandId: \" + pm.variables.get(\"roleInTheBandID\"))",
											"",
											"//Statuscode",
											"",
											"pm.test(\"Response status code is 200\", function () {",
											"    pm.expect(pm.response.code).to.equal(200);",
											"});",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"name\": \"Schlagzeuger\",\n    \"description\": \"bum bum\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://localhost:8080/gig/band/roleintheband",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "8080",
									"path": [
										"gig",
										"band",
										"roleintheband"
									]
								},
								"description": "Bei diesem Request wird eine Bandrolle mit folgenden Attributen hinzugef√ºgt:\n\nName, Beschreibung"
							},
							"response": [
								{
									"name": "addRoleInTheBand",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"name\": \"Schlagzeuger\",\n    \"description\": \"bum bum\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "http://localhost:8080/gig/band/roleintheband",
											"protocol": "http",
											"host": [
												"localhost"
											],
											"port": "8080",
											"path": [
												"gig",
												"band",
												"roleintheband"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										},
										{
											"key": "Transfer-Encoding",
											"value": "chunked"
										},
										{
											"key": "Date",
											"value": "Thu, 24 Aug 2023 08:26:22 GMT"
										},
										{
											"key": "Keep-Alive",
											"value": "timeout=60"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										}
									],
									"cookie": [],
									"body": "{\n    \"id\": \"0baec5ac-51de-4c42-b681-99bbc609888f\",\n    \"name\": \"Schlagzeuger\",\n    \"description\": \"bum bum\"\n}"
								}
							]
						},
						{
							"name": "addBand Copy 3",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"let jsonResponse = pm.response.json();",
											"let bandId = jsonResponse.id;",
											"pm.environment.set(\"bandId\", bandId)",
											"",
											"console.info(\"Created bandId: \" + pm.variables.get(\"bandId\"))",
											"",
											"//Statuscode",
											"",
											"pm.test(\"Response status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"name\": \"beOne\",\n    \"genre\": \"{{genreId}}\",\n    \"mainRoleInTheBand\": \"{{roleInTheBandId}}\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://localhost:8080/gig/band",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "8080",
									"path": [
										"gig",
										"band"
									]
								},
								"description": "Bei diesem Request wird eine Band mit folgenden Attributen hinzugef√ºgt:\n\nName, Genre und die Hauptrolle in der Band"
							},
							"response": [
								{
									"name": "addBand",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"name\": \"beOne\",\n    \"genre\": \"{{genreId}}\",\n    \"mainRoleInTheBand\": \"{{roleInTheBandId}}\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "http://localhost:8080/gig/band",
											"protocol": "http",
											"host": [
												"localhost"
											],
											"port": "8080",
											"path": [
												"gig",
												"band"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										},
										{
											"key": "Transfer-Encoding",
											"value": "chunked"
										},
										{
											"key": "Date",
											"value": "Thu, 24 Aug 2023 09:06:04 GMT"
										},
										{
											"key": "Keep-Alive",
											"value": "timeout=60"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										}
									],
									"cookie": [],
									"body": "{\n    \"id\": \"404df939-4cba-4766-b667-b8de979d89a3\",\n    \"name\": \"beOne\",\n    \"genre\": {\n        \"id\": \"29556479-c65f-437e-a47e-d5ffbb4fd914\",\n        \"name\": \"Jazz\",\n        \"description\": \"Jazz (Aussprache: [dÕ° í…õÀês] Audiodatei abspielen oder [jatÕ°s] Audiodatei abspielen) ist eine ungef√§hr um 1900 in den S√ºdstaaten der USA entstandene, urspr√ºnglich √ºberwiegend von Afroamerikanern hervorgebrachte Musikrichtung, die in vielf√§ltiger Weise weiterentwickelt wurde, h√§ufig im Crossover mit anderen Musiktraditionen und Genres. Mittlerweile werden auch Musikformen zum Jazz gez√§hlt, die oft nur lose oder kaum noch mit der afroamerikanischen Tradition verbunden sind. Der Jazz wird im Hinblick auf seine k√ºnstlerische Bedeutung h√§ufig als amerikanisches Pendant zur klassischen europ√§ischen Musik verstanden. Dar√ºber hinaus hat er nahezu allen anderen Sparten der Musik, von Pop bis Folk, neue M√∂glichkeiten er√∂ffnet, bzw. w√§re das blo√üe Vorhandensein vieler heutiger Genres ohne einen Jazzabschnitt in der Musikhistorie fraglich.\"\n    },\n    \"listOfRole\": [\n        {\n            \"id\": \"8858d233-663f-4517-8d7a-282b28d39789\",\n            \"name\": \"S√§ngerin der Band\",\n            \"description\": \"sing sing\"\n        }\n    ],\n    \"equipmentList\": null\n}"
								}
							]
						},
						{
							"name": "addEquipmentToBand Copy",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"//Statuscode\r",
											"\r",
											"pm.test(\"Response status code is 200\", function () {\r",
											"    pm.expect(pm.response.code).to.equal(200);\r",
											"});\r",
											"\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://localhost:8080/gig/band/{{bandId}}/equipment/{{equipmentId}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "8080",
									"path": [
										"gig",
										"band",
										"{{bandId}}",
										"equipment",
										"{{equipmentId}}"
									]
								},
								"description": "Dieser Request f√ºgt ein Equipment einer Band hinzu"
							},
							"response": [
								{
									"name": "addEquipmentToBand",
									"originalRequest": {
										"method": "PUT",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "http://localhost:8080/gig/band/{{bandId}}/equipment/{{equipmentId}}",
											"protocol": "http",
											"host": [
												"localhost"
											],
											"port": "8080",
											"path": [
												"gig",
												"band",
												"{{bandId}}",
												"equipment",
												"{{equipmentId}}"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										},
										{
											"key": "Transfer-Encoding",
											"value": "chunked"
										},
										{
											"key": "Date",
											"value": "Thu, 24 Aug 2023 08:32:53 GMT"
										},
										{
											"key": "Keep-Alive",
											"value": "timeout=60"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										}
									],
									"cookie": [],
									"body": "{\n    \"id\": \"14071727-fe34-420e-add5-f2972a7764ce\",\n    \"name\": \"beOne\",\n    \"genre\": {\n        \"id\": \"91e88597-fe2f-4054-973d-e1d8fe29f06f\",\n        \"name\": \"Pop\",\n        \"description\": \"chillig\"\n    },\n    \"listOfRole\": [\n        {\n            \"id\": \"0baec5ac-51de-4c42-b681-99bbc609888f\",\n            \"name\": \"S√§ngerin der Band\",\n            \"description\": \"bum bum\"\n        }\n    ],\n    \"equipmentList\": [\n        {\n            \"id\": \"81bb09ad-b2ce-4e07-a3d3-94a904c9254d\",\n            \"name\": \"neuer Name\",\n            \"description\": \"Studio Schlagzeug mit 20 Zoll BassDrum\",\n            \"typeOfEquipment\": {\n                \"id\": \"ac0be34e-8918-4c7f-9a05-44f042ebe907\",\n                \"name\": \"Highfield Schlagzeug\",\n                \"description\": \"Akustikschlagzeug\"\n            },\n            \"weight\": 120,\n            \"length\": 200,\n            \"width\": 120,\n            \"height\": 100,\n            \"dateOfPurchase\": \"2023-08-14\",\n            \"location\": {\n                \"id\": \"83fb7692-db8f-4a8d-b8ca-6b24a79daa9f\",\n                \"address\": {\n                    \"id\": \"54ecce82-51f0-4e00-adcc-b94de9cd0e9f\",\n                    \"street\": \"Lutzstrasse\",\n                    \"city\": \"M√ºnchen\",\n                    \"zipCode\": \"99086\",\n                    \"country\": \"ger\",\n                    \"houseNumber\": 14\n                },\n                \"typeOfLocation\": {\n                    \"id\": \"0001c4b3-e50b-4969-bb07-029e4e122f72\",\n                    \"name\": \"Proberaum Gotha\",\n                    \"description\": \"Robins Kellergeschoss mit Gesangskabine\"\n                }\n            },\n            \"price\": 2000,\n            \"cuboidVolume\": 2400000\n        }\n    ]\n}"
								}
							]
						},
						{
							"name": "deleteEquipmentFromBand",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"//Statuscode\r",
											"\r",
											"pm.test(\"Response status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "http://localhost:8080/gig/band/{{bandId}}/equipment/{{equipmentId}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "8080",
									"path": [
										"gig",
										"band",
										"{{bandId}}",
										"equipment",
										"{{equipmentId}}"
									]
								},
								"description": "Bei diesem Request wird ein vorhandenes Equipment aus einer Band gel√∂scht"
							},
							"response": []
						}
					]
				},
				{
					"name": "DeleteEquipment",
					"item": [
						{
							"name": "addAddress Copy 3",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"let jsonResponse = pm.response.json();",
											"let addressId = jsonResponse.id;",
											"pm.environment.set(\"addressId\", addressId)",
											"",
											"console.info(\"Created addressId: \"+ pm.variables.get(\"addressId\"))",
											"",
											"//Statuscode",
											"",
											"pm.test(\"Response status code is 202\", function () {",
											"    pm.response.to.have.status(202);",
											"});",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"street\": \"Lutzstrasse\",\n    \"city\": \"M√ºnchen\",\n    \"houseNumber\": \"14\",\n    \"country\": \"ger\",\n    \"zipCode\": \"99086\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://localhost:8080/addresses",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "8080",
									"path": [
										"addresses"
									]
								},
								"description": "Bei diesem Request wird eine Adresse mit folgenden Attributen hinzugef√ºgt:\n\nStra√üe, Stadt, Hausnummer, Land und Postleitzahl"
							},
							"response": [
								{
									"name": "addAddress",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"street\": \"Heinrichstra√üe\",\n    \"city\": \"M√ºnchen\",\n    \"houseNumber\": \"23\",\n    \"country\": \"ger\",\n    \"zipCode\": \"99086\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "http://localhost:8080/addresses",
											"protocol": "http",
											"host": [
												"localhost"
											],
											"port": "8080",
											"path": [
												"addresses"
											]
										}
									},
									"status": "Accepted",
									"code": 202,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										},
										{
											"key": "Transfer-Encoding",
											"value": "chunked"
										},
										{
											"key": "Date",
											"value": "Thu, 24 Aug 2023 07:55:56 GMT"
										},
										{
											"key": "Keep-Alive",
											"value": "timeout=60"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										}
									],
									"cookie": [],
									"body": "{\n    \"id\": \"4cf97a1f-c14a-46c8-a386-8e5f5c8157f9\",\n    \"houseNumber\": 23,\n    \"street\": \"Heinrichstra√üe\",\n    \"zipCode\": \"99086\",\n    \"country\": \"ger\",\n    \"city\": \"M√ºnchen\"\n}"
								}
							]
						},
						{
							"name": "addTypeOfLocation Copy 3",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"let jsonResponse = pm.response.json();",
											"let typeOfLocationId = jsonResponse.id;",
											"pm.environment.set(\"typeOfLocationId\", typeOfLocationId)",
											"",
											"console.info(\"Created typeOfLocationId: \"+ pm.variables.get(\"typeOfLocationId\"))",
											"",
											"//Statuscode",
											"",
											"pm.test(\"Response status code is 202\", function () {",
											"    pm.response.to.have.status(202);",
											"});",
											"",
											"",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"name\": \"Proberaum Gotha\",\n    \"description\": \"Robins Kellergeschoss mit Gesangskabine\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://localhost:8080/typeOfLocation",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "8080",
									"path": [
										"typeOfLocation"
									]
								},
								"description": "Bei diesem Request wird ein Standort-Typ mit folgenden Attributen hinzugef√ºgt:\n\nName, Beschreibung"
							},
							"response": [
								{
									"name": "addTypeOfLocation",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"name\": \"Proberaum Erfurt\",\n    \"description\": \"Ein Proberaum in Erfurt\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "http://localhost:8080/typeOfLocation",
											"protocol": "http",
											"host": [
												"localhost"
											],
											"port": "8080",
											"path": [
												"typeOfLocation"
											]
										}
									},
									"status": "Accepted",
									"code": 202,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										},
										{
											"key": "Transfer-Encoding",
											"value": "chunked"
										},
										{
											"key": "Date",
											"value": "Thu, 24 Aug 2023 08:01:31 GMT"
										},
										{
											"key": "Keep-Alive",
											"value": "timeout=60"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										}
									],
									"cookie": [],
									"body": "{\n    \"id\": \"5b8f4f19-a05c-42a8-b50c-b43d31b6129e\",\n    \"name\": \"Proberaum Erfurt\",\n    \"description\": \"Ein Proberaum in Erfurt\"\n}"
								}
							]
						},
						{
							"name": "addLocation Copy 2",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"let jsonResponse = pm.response.json();",
											"let locationId = jsonResponse.id;",
											"pm.environment.set(\"locationId\", locationId)",
											"",
											"console.info(\"Created locationId: \"+ pm.variables.get(\"locationId\"))",
											"",
											"//Statuscode",
											"",
											"pm.test(\"Response status code is 202\", function () {",
											"    pm.expect(pm.response.code).to.equal(202);",
											"});",
											"",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"typeOfLocationId\": \"{{typeOfLocationId}}\",\n    \"addressId\": \"{{addressId}}\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://localhost:8080/location",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "8080",
									"path": [
										"location"
									]
								},
								"description": "Bei diesem Request wird ein Standort mit folgenden Attributen hinzugef√ºgt:\n\nStandort-ID, Adress-ID"
							},
							"response": [
								{
									"name": "addLocation",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"typeOfLocationId\": \"{{typeOfLocationId}}\",\n    \"addressId\": \"{{addressId}}\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "http://localhost:8080/location",
											"protocol": "http",
											"host": [
												"localhost"
											],
											"port": "8080",
											"path": [
												"location"
											]
										}
									},
									"status": "Accepted",
									"code": 202,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										},
										{
											"key": "Transfer-Encoding",
											"value": "chunked"
										},
										{
											"key": "Date",
											"value": "Thu, 24 Aug 2023 08:13:23 GMT"
										},
										{
											"key": "Keep-Alive",
											"value": "timeout=60"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										}
									],
									"cookie": [],
									"body": "{\n    \"id\": \"522c4f7d-bb68-46e4-868f-c49bb3466407\",\n    \"addressResponse\": {\n        \"id\": \"4cf97a1f-c14a-46c8-a386-8e5f5c8157f9\",\n        \"houseNumber\": 0,\n        \"street\": \"James Gosling Street\",\n        \"zipCode\": \"99086\",\n        \"country\": \"ger\",\n        \"city\": \"M√ºnchen\"\n    },\n    \"typeOfLocationResponse\": {\n        \"id\": \"69fd8856-3d8c-458d-8e28-a9bfae279c8a\",\n        \"name\": \"Darios Proberaum in Gera\",\n        \"description\": \"Lagerraum und Studio\"\n    }\n}"
								},
								{
									"name": "addLocation",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"typeOfLocationId\": \"{{typeOfLocationId}}\",\n    \"addressId\": \"{{addressId}}\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "http://localhost:8080/location",
											"protocol": "http",
											"host": [
												"localhost"
											],
											"port": "8080",
											"path": [
												"location"
											]
										}
									},
									"status": "Accepted",
									"code": 202,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										},
										{
											"key": "Transfer-Encoding",
											"value": "chunked"
										},
										{
											"key": "Date",
											"value": "Thu, 24 Aug 2023 08:14:50 GMT"
										},
										{
											"key": "Keep-Alive",
											"value": "timeout=60"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										}
									],
									"cookie": [],
									"body": "{\n    \"id\": \"5c1653b2-36d6-47f7-b147-c697c56c3da2\",\n    \"addressResponse\": {\n        \"id\": \"ab1c968e-606f-4660-8642-797581c79efe\",\n        \"houseNumber\": 14,\n        \"street\": \"Lutzstrasse\",\n        \"zipCode\": \"99086\",\n        \"country\": \"ger\",\n        \"city\": \"M√ºnchen\"\n    },\n    \"typeOfLocationResponse\": {\n        \"id\": \"34ff6e1b-7332-4154-91fc-f56904cde1ee\",\n        \"name\": \"Proberaum Gotha\",\n        \"description\": \"Robins Kellergeschoss mit Gesangskabine\"\n    }\n}"
								}
							]
						},
						{
							"name": "addTypeOfEquipment Copy",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"let jsonResponse = pm.response.json();",
											"let typeOfEquipmentId = jsonResponse.id;",
											"pm.environment.set(\"typeOfEquipmentId\", typeOfEquipmentId)",
											"",
											"console.info(\"Created typeOfEquipmentId: \"+ pm.variables.get(\"typeOfEquipmentId\"))",
											"",
											"//Statuscode",
											"",
											"pm.test(\"Status code is 202\", function () {",
											"    pm.response.to.have.status(202);",
											"});",
											"",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"name\" : \"Schlagzeug A\",\n    \"description\" : \"Akustikschlagzeug\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://localhost:8080/typeOfEquipment",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "8080",
									"path": [
										"typeOfEquipment"
									]
								},
								"description": "Bei diesem Request wird ein Equipment-Typ mit folgenden Attributen hinzugef√ºgt:\n\nName, Beschreibung"
							},
							"response": [
								{
									"name": "addTypeOfEquipment",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"name\" : \"Schlagzeug A\",\n    \"description\" : \"Akustikschlagzeug\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "http://localhost:8080/typeOfEquipment",
											"protocol": "http",
											"host": [
												"localhost"
											],
											"port": "8080",
											"path": [
												"typeOfEquipment"
											]
										}
									},
									"status": "Accepted",
									"code": 202,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										},
										{
											"key": "Transfer-Encoding",
											"value": "chunked"
										},
										{
											"key": "Date",
											"value": "Thu, 24 Aug 2023 07:58:08 GMT"
										},
										{
											"key": "Keep-Alive",
											"value": "timeout=60"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										}
									],
									"cookie": [],
									"body": "{\n    \"id\": \"91514269-a0f6-46ad-8f39-0cecbafea77f\",\n    \"name\": \"Highfield Schlagzeug\",\n    \"description\": \"Akustikschlagzeug\"\n}"
								}
							]
						},
						{
							"name": "addEquipment Copy",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"pm.collectionVariables.set(\"typeOfEquipmentId\", pm.collectionVariables.get(\"typeOfEquipmentId\"));",
											"pm.collectionVariables.set(\"addressId\", pm.collectionVariables.get(\"addressId\"));"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"let jsonResponse = pm.response.json();",
											"let equipmentId = jsonResponse.id;",
											"pm.environment.set(\"equipmentId\", equipmentId)",
											"",
											"console.info(\"Created equipmentId: \" + pm.variables.get(\"equipmentId\"))",
											"",
											"//Statuscode",
											"",
											"pm.test(\"Response status code is 202\", function () {",
											"    pm.expect(pm.response.code).to.equal(202);",
											"});",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"name\": \"Gretch Studio 2\",\n    \"description\": \"Studio Schlagzeug mit 20 Zoll BassDrum\",\n    \"typeOfEquipmentId\": \"{{typeOfEquipmentId}}\",\n    \"weight\": 120,\n    \"length\": 200,\n    \"width\": 120,\n    \"height\": 100,\n    \"dateOfPurchase\": \"2023-08-14\",\n    \"locationId\": \"{{locationId}}\",\n    \"price\": 2000\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://localhost:8080/equipment",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "8080",
									"path": [
										"equipment"
									]
								},
								"description": "Bei diesem Request wird ein Equipment mit folgenden Attributen hinzugef√ºgt:\n\nName, Beschreibung, Equipment-Typ ID, Gewicht, L√§nge, Breite, H√∂he,, Kaufdatum, Standort-ID und Preis"
							},
							"response": [
								{
									"name": "addEquipment",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"name\": \"Gretch Studio 2\",\n    \"description\": \"Studio Schlagzeug mit 20 Zoll BassDrum\",\n    \"typeOfEquipmentId\": \"{{typeOfEquipmentId}}\",\n    \"weight\": 120,\n    \"length\": 200,\n    \"width\": 120,\n    \"height\": 100,\n    \"dateOfPurchase\": \"2023-08-14\",\n    \"locationId\": \"{{locationId}}\",\n    \"price\": 2000\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "http://localhost:8080/equipment",
											"protocol": "http",
											"host": [
												"localhost"
											],
											"port": "8080",
											"path": [
												"equipment"
											]
										}
									},
									"status": "Accepted",
									"code": 202,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										},
										{
											"key": "Transfer-Encoding",
											"value": "chunked"
										},
										{
											"key": "Date",
											"value": "Thu, 24 Aug 2023 08:22:32 GMT"
										},
										{
											"key": "Keep-Alive",
											"value": "timeout=60"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										}
									],
									"cookie": [],
									"body": "{\n    \"id\": \"81bb09ad-b2ce-4e07-a3d3-94a904c9254d\",\n    \"name\": \"Gretch Studio 2\",\n    \"description\": \"Studio Schlagzeug mit 20 Zoll BassDrum\",\n    \"typeOfEquipmentResponse\": {\n        \"id\": \"ac0be34e-8918-4c7f-9a05-44f042ebe907\",\n        \"name\": \"Highfield Schlagzeug\",\n        \"description\": \"Akustikschlagzeug\"\n    },\n    \"weight\": 120,\n    \"length\": 200,\n    \"width\": 120,\n    \"height\": 100,\n    \"dateOfPurchase\": \"2023-08-14\",\n    \"locationResponse\": {\n        \"id\": \"83fb7692-db8f-4a8d-b8ca-6b24a79daa9f\",\n        \"addressResponse\": {\n            \"id\": \"54ecce82-51f0-4e00-adcc-b94de9cd0e9f\",\n            \"houseNumber\": 14,\n            \"street\": \"Lutzstrasse\",\n            \"zipCode\": \"99086\",\n            \"country\": \"ger\",\n            \"city\": \"M√ºnchen\"\n        },\n        \"typeOfLocationResponse\": {\n            \"id\": \"0001c4b3-e50b-4969-bb07-029e4e122f72\",\n            \"name\": \"Proberaum Gotha\",\n            \"description\": \"Robins Kellergeschoss mit Gesangskabine\"\n        }\n    },\n    \"price\": 2000\n}"
								}
							]
						},
						{
							"name": "deleteEquipment",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"console.info(\"Deleted equipmentId: \"+ pm.variables.get(\"equipmentId\"))\r",
											"\r",
											"//Statuscode\r",
											"\r",
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "http://localhost:8080/equipment/{{equipmentId}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "8080",
									"path": [
										"equipment",
										"{{equipmentId}}"
									]
								},
								"description": "Bei diesem Request wird ein vorhandenes Equipment aus dem System gel√∂scht"
							},
							"response": []
						}
					]
				},
				{
					"name": "DeleteGenre",
					"item": [
						{
							"name": "addGenre Copy 2",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"let jsonResponse = pm.response.json();",
											"let genreId = jsonResponse.id;",
											"pm.environment.set(\"genreId\", genreId)",
											"",
											"console.info(\"Created genreId: \" + pm.variables.get(\"genreId\"))",
											"",
											"//Statuscode",
											"",
											"pm.test(\"Response status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"name\": \"Jazz\",\n    \"description\": \"chillig\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://localhost:8080/gig/band/genre",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "8080",
									"path": [
										"gig",
										"band",
										"genre"
									]
								},
								"description": "Bei diesem Request wird ein Genre mit folgenden Attributen hinzugef√ºgt:\n\nName, Beschreibung"
							},
							"response": [
								{
									"name": "addGenre",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"name\": \"Jazz\",\n    \"description\": \"chillig\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "http://localhost:8080/gig/band/genre",
											"protocol": "http",
											"host": [
												"localhost"
											],
											"port": "8080",
											"path": [
												"gig",
												"band",
												"genre"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										},
										{
											"key": "Transfer-Encoding",
											"value": "chunked"
										},
										{
											"key": "Date",
											"value": "Thu, 24 Aug 2023 08:27:26 GMT"
										},
										{
											"key": "Keep-Alive",
											"value": "timeout=60"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										}
									],
									"cookie": [],
									"body": "{\n    \"id\": \"33692c2c-6951-4117-b6fd-280c20cfca18\",\n    \"name\": \"Jazz\",\n    \"description\": \"chillig\"\n}"
								}
							]
						},
						{
							"name": "deleteGenre",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"//Statuscode\r",
											"\r",
											"pm.test(\"Response status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "http://localhost:8080/gig/band/genre/{{genreId}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "8080",
									"path": [
										"gig",
										"band",
										"genre",
										"{{genreId}}"
									]
								},
								"description": "Bei diesem Request wird ein vorhandenes Genre aus dem System gel√∂scht"
							},
							"response": []
						}
					]
				},
				{
					"name": "DeleteBand",
					"item": [
						{
							"name": "addGenre Copy",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"let jsonResponse = pm.response.json();",
											"let genreId = jsonResponse.id;",
											"pm.environment.set(\"genreId\", genreId)",
											"",
											"console.info(\"Created genreId: \" + pm.variables.get(\"genreId\"))",
											"",
											"//Statuscode",
											"",
											"pm.test(\"Response status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"name\": \"Jazz\",\n    \"description\": \"chillig\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://localhost:8080/gig/band/genre",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "8080",
									"path": [
										"gig",
										"band",
										"genre"
									]
								},
								"description": "Bei diesem Request wird ein Genre mit folgenden Attributen hinzugef√ºgt:\n\nName, Beschreibung"
							},
							"response": [
								{
									"name": "addGenre",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"name\": \"Jazz\",\n    \"description\": \"chillig\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "http://localhost:8080/gig/band/genre",
											"protocol": "http",
											"host": [
												"localhost"
											],
											"port": "8080",
											"path": [
												"gig",
												"band",
												"genre"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										},
										{
											"key": "Transfer-Encoding",
											"value": "chunked"
										},
										{
											"key": "Date",
											"value": "Thu, 24 Aug 2023 08:27:26 GMT"
										},
										{
											"key": "Keep-Alive",
											"value": "timeout=60"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										}
									],
									"cookie": [],
									"body": "{\n    \"id\": \"33692c2c-6951-4117-b6fd-280c20cfca18\",\n    \"name\": \"Jazz\",\n    \"description\": \"chillig\"\n}"
								}
							]
						},
						{
							"name": "addRoleInTheBand Copy 2",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"let jsonResponse = pm.response.json();",
											"let roleInTheBandId = jsonResponse.id;",
											"pm.environment.set(\"roleInTheBandId\", roleInTheBandId)",
											"",
											"console.info(\"Created roleInTheBandId: \" + pm.variables.get(\"roleInTheBandID\"))",
											"",
											"//Statuscode",
											"",
											"pm.test(\"Response status code is 200\", function () {",
											"    pm.expect(pm.response.code).to.equal(200);",
											"});",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"name\": \"Schlagzeuger\",\n    \"description\": \"bum bum\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://localhost:8080/gig/band/roleintheband",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "8080",
									"path": [
										"gig",
										"band",
										"roleintheband"
									]
								},
								"description": "Bei diesem Request wird eine Bandrolle mit folgenden Attributen hinzugef√ºgt:\n\nName, Beschreibung"
							},
							"response": [
								{
									"name": "addRoleInTheBand",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"name\": \"Schlagzeuger\",\n    \"description\": \"bum bum\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "http://localhost:8080/gig/band/roleintheband",
											"protocol": "http",
											"host": [
												"localhost"
											],
											"port": "8080",
											"path": [
												"gig",
												"band",
												"roleintheband"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										},
										{
											"key": "Transfer-Encoding",
											"value": "chunked"
										},
										{
											"key": "Date",
											"value": "Thu, 24 Aug 2023 08:26:22 GMT"
										},
										{
											"key": "Keep-Alive",
											"value": "timeout=60"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										}
									],
									"cookie": [],
									"body": "{\n    \"id\": \"0baec5ac-51de-4c42-b681-99bbc609888f\",\n    \"name\": \"Schlagzeuger\",\n    \"description\": \"bum bum\"\n}"
								}
							]
						},
						{
							"name": "addBand Copy 2",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"let jsonResponse = pm.response.json();",
											"let bandId = jsonResponse.id;",
											"pm.environment.set(\"bandId\", bandId)",
											"",
											"console.info(\"Created bandId: \" + pm.variables.get(\"bandId\"))",
											"",
											"//Statuscode",
											"",
											"pm.test(\"Response status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"name\": \"beOne\",\n    \"genre\": \"{{genreId}}\",\n    \"mainRoleInTheBand\": \"{{roleInTheBandId}}\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://localhost:8080/gig/band",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "8080",
									"path": [
										"gig",
										"band"
									]
								},
								"description": "Bei diesem Request wird eine Band mit folgenden Attributen hinzugef√ºgt:\n\nName, Genre und die Hauptrolle in der Band"
							},
							"response": [
								{
									"name": "addBand",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"name\": \"beOne\",\n    \"genre\": \"{{genreId}}\",\n    \"mainRoleInTheBand\": \"{{roleInTheBandId}}\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "http://localhost:8080/gig/band",
											"protocol": "http",
											"host": [
												"localhost"
											],
											"port": "8080",
											"path": [
												"gig",
												"band"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										},
										{
											"key": "Transfer-Encoding",
											"value": "chunked"
										},
										{
											"key": "Date",
											"value": "Thu, 24 Aug 2023 09:06:04 GMT"
										},
										{
											"key": "Keep-Alive",
											"value": "timeout=60"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										}
									],
									"cookie": [],
									"body": "{\n    \"id\": \"404df939-4cba-4766-b667-b8de979d89a3\",\n    \"name\": \"beOne\",\n    \"genre\": {\n        \"id\": \"29556479-c65f-437e-a47e-d5ffbb4fd914\",\n        \"name\": \"Jazz\",\n        \"description\": \"Jazz (Aussprache: [dÕ° í…õÀês] Audiodatei abspielen oder [jatÕ°s] Audiodatei abspielen) ist eine ungef√§hr um 1900 in den S√ºdstaaten der USA entstandene, urspr√ºnglich √ºberwiegend von Afroamerikanern hervorgebrachte Musikrichtung, die in vielf√§ltiger Weise weiterentwickelt wurde, h√§ufig im Crossover mit anderen Musiktraditionen und Genres. Mittlerweile werden auch Musikformen zum Jazz gez√§hlt, die oft nur lose oder kaum noch mit der afroamerikanischen Tradition verbunden sind. Der Jazz wird im Hinblick auf seine k√ºnstlerische Bedeutung h√§ufig als amerikanisches Pendant zur klassischen europ√§ischen Musik verstanden. Dar√ºber hinaus hat er nahezu allen anderen Sparten der Musik, von Pop bis Folk, neue M√∂glichkeiten er√∂ffnet, bzw. w√§re das blo√üe Vorhandensein vieler heutiger Genres ohne einen Jazzabschnitt in der Musikhistorie fraglich.\"\n    },\n    \"listOfRole\": [\n        {\n            \"id\": \"8858d233-663f-4517-8d7a-282b28d39789\",\n            \"name\": \"S√§ngerin der Band\",\n            \"description\": \"sing sing\"\n        }\n    ],\n    \"equipmentList\": null\n}"
								}
							]
						},
						{
							"name": "deleteBand",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"//Statuscode\r",
											"\r",
											"pm.test(\"Response status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "http://localhost:8080/gig/band/{{bandId}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "8080",
									"path": [
										"gig",
										"band",
										"{{bandId}}"
									]
								},
								"description": "Bei diesem Request wird eine vorhandene Band aus dem System gel√∂scht"
							},
							"response": []
						}
					]
				},
				{
					"name": "DeleteRoleInTheBand",
					"item": [
						{
							"name": "addRoleInTheBand Copy",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"let jsonResponse = pm.response.json();",
											"let roleInTheBandId = jsonResponse.id;",
											"pm.environment.set(\"roleInTheBandId\", roleInTheBandId)",
											"",
											"console.info(\"Created roleInTheBandId: \" + pm.variables.get(\"roleInTheBandID\"))",
											"",
											"//Statuscode",
											"",
											"pm.test(\"Response status code is 200\", function () {",
											"    pm.expect(pm.response.code).to.equal(200);",
											"});",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"name\": \"Schlagzeuger\",\n    \"description\": \"bum bum\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://localhost:8080/gig/band/roleintheband",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "8080",
									"path": [
										"gig",
										"band",
										"roleintheband"
									]
								},
								"description": "Bei diesem Request wird eine Bandrolle mit folgenden Attributen hinzugef√ºgt:\n\nName, Beschreibung"
							},
							"response": [
								{
									"name": "addRoleInTheBand",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"name\": \"Schlagzeuger\",\n    \"description\": \"bum bum\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "http://localhost:8080/gig/band/roleintheband",
											"protocol": "http",
											"host": [
												"localhost"
											],
											"port": "8080",
											"path": [
												"gig",
												"band",
												"roleintheband"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										},
										{
											"key": "Transfer-Encoding",
											"value": "chunked"
										},
										{
											"key": "Date",
											"value": "Thu, 24 Aug 2023 08:26:22 GMT"
										},
										{
											"key": "Keep-Alive",
											"value": "timeout=60"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										}
									],
									"cookie": [],
									"body": "{\n    \"id\": \"0baec5ac-51de-4c42-b681-99bbc609888f\",\n    \"name\": \"Schlagzeuger\",\n    \"description\": \"bum bum\"\n}"
								}
							]
						},
						{
							"name": "deleteRoleInTheBand",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"//Statuscode\r",
											"\r",
											"pm.test(\"Response status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "http://localhost:8080/gig/band/roleintheband/{{roleInTheBandId}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "8080",
									"path": [
										"gig",
										"band",
										"roleintheband",
										"{{roleInTheBandId}}"
									]
								},
								"description": "Bei diesem Request wird eine vorhandene Bandrolle aus dem System gel√∂scht"
							},
							"response": []
						}
					]
				}
			]
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"key": "addressId",
			"value": ""
		},
		{
			"key": "typeOfEquipmentId",
			"value": ""
		},
		{
			"key": "typeOfLocationId",
			"value": ""
		},
		{
			"key": "locationId",
			"value": ""
		},
		{
			"key": "equipmentId",
			"value": ""
		},
		{
			"key": "roleInTheBandId",
			"value": ""
		},
		{
			"key": "genreId",
			"value": ""
		},
		{
			"key": "bandId",
			"value": ""
		},
		{
			"key": "typeOfGigId",
			"value": ""
		},
		{
			"key": "gigId",
			"value": ""
		},
		{
			"key": "rentalId",
			"value": ""
		},
		{
			"key": "typeOfLocationIdForUpdateLocation",
			"value": ""
		}
	]
}